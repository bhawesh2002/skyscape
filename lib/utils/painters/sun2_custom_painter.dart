//Copy this CustomPainter code to the Bottom of the File
import 'package:flutter/material.dart';

class SunTwoCustomPainter extends CustomPainter {
  @override
  void paint(Canvas canvas, Size size) {
    Path path_0 = Path();
    path_0.moveTo(155.04, 301.03);
    path_0.cubicTo(234.017, 301.03, 298.04, 237.007, 298.04, 158.03);
    path_0.cubicTo(298.04, 79.0533, 234.017, 15.03, 155.04, 15.03);
    path_0.cubicTo(76.0633, 15.03, 12.04, 79.0533, 12.04, 158.03);
    path_0.cubicTo(12.04, 237.007, 76.0633, 301.03, 155.04, 301.03);
    path_0.close();

    Paint paint0Fill = Paint()..style = PaintingStyle.fill;
    paint0Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_0, paint0Fill);

    Path path_1 = Path();
    path_1.moveTo(281.42, 103.98);
    path_1.cubicTo(281.48, 104.61, 280.87, 104.98, 281, 105.66);
    path_1.lineTo(280.98, 105.64);
    path_1.cubicTo(281.85, 105.45, 282.63, 105.13, 282.77, 103.98);
    path_1.cubicTo(282.79, 103.77, 282.64, 103.49, 282.88, 103.41);
    path_1.cubicTo(283.17, 103.31, 283.34, 103.59, 283.47, 103.85);
    path_1.cubicTo(283.59, 104.11, 283.66, 104.4, 283.81, 104.63);
    path_1.cubicTo(284.34, 105.43, 284.41, 105.97, 283.38, 105.89);
    path_1.cubicTo(283, 105.86, 282.79, 106.04, 282.98, 106.44);
    path_1.cubicTo(283.55, 107.58, 282.94, 107.76, 282.22, 107.97);
    path_1.cubicTo(281.81, 108.09, 281.37, 108.26, 281.32, 108.87);
    path_1.cubicTo(281.26, 109.71, 280.75, 109.35, 280.33, 109.22);
    path_1.cubicTo(280.01, 109.12, 279.87, 108.59, 279.44, 108.61);
    path_1.cubicTo(279.87, 110.96, 279.87, 110.95, 280.85, 111.47);
    path_1.cubicTo(280.85, 111.34, 280.9, 111.21, 280.87, 111.09);
    path_1.cubicTo(280.66, 110.37, 281.14, 110.28, 281.56, 110.16);
    path_1.cubicTo(281.75, 110.11, 281.98, 110.09, 282.08, 110.38);
    path_1.cubicTo(282.27, 110.91, 282.05, 111.13, 281.67, 111.41);
    path_1.cubicTo(281.07, 111.86, 281.15, 112.46, 281.78, 113.06);
    path_1.cubicTo(282.37, 113.62, 283.16, 114.12, 283.01, 115.27);
    path_1.cubicTo(282.52, 114.98, 282.18, 114.49, 281.65, 114.64);
    path_1.cubicTo(282.51, 118.67, 284.13, 120.54, 287.39, 120.71);
    path_1.lineTo(287.54, 120.33);
    path_1.cubicTo(287.77, 119.84, 288.42, 120.16, 288.66, 119.58);
    path_1.cubicTo(288.83, 119.19, 289.17, 119.51, 289.31, 119.83);
    path_1.cubicTo(289.96, 121.37, 291.55, 122.52, 291.25, 124.53);
    path_1.cubicTo(291.2, 124.9, 291.21, 125.44, 291.66, 125.65);
    path_1.cubicTo(292.18, 125.9, 292.05, 126.29, 291.96, 126.7);
    path_1.cubicTo(291.67, 128.01, 290.41, 130.4, 291.26, 131.36);
    path_1.cubicTo(291.43, 131.54, 292.06, 131.71, 291.71, 132.11);
    path_1.cubicTo(291.11, 132.78, 291.24, 133.39, 291.47, 134.22);
    path_1.cubicTo(291.62, 134.76, 289.63, 135.98, 289.34, 136.27);
    path_1.cubicTo(288.63, 137, 289.04, 137.61, 289.3, 138.31);
    path_1.cubicTo(290.31, 138.52, 290.69, 139.7, 291.48, 140.29);
    path_1.cubicTo(290.64, 140.23, 289.99, 139.67, 289.31, 139.19);
    path_1.cubicTo(288.86, 138.87, 289.16, 138.58, 289.32, 138.29);
    path_1.cubicTo(288.71, 138.36, 288.25, 138.52, 288.74, 139.39);
    path_1.cubicTo(289.01, 139.87, 289.09, 140.3, 288.39, 140.18);
    path_1.cubicTo(288.02, 140.12, 287.73, 140.21, 287.63, 140.62);
    path_1.cubicTo(287.51, 141.12, 287.81, 141.35, 288.16, 141.56);
    path_1.cubicTo(288.75, 141.91, 289.28, 142.39, 289.61, 143.04);
    path_1.cubicTo(289.93, 143.65, 290.19, 144.66, 289.67, 144.93);
    path_1.cubicTo(289.19, 145.18, 288.71, 145.51, 288.2, 145.7);
    path_1.cubicTo(287.69, 145.89, 286.93, 145.94, 287.24, 146.86);
    path_1.cubicTo(287.51, 147.68, 287.85, 148.75, 288.82, 148.65);
    path_1.cubicTo(289.64, 148.57, 289.61, 149.07, 289.61, 149.61);
    path_1.cubicTo(289.61, 150.45, 289.32, 151.2, 289.04, 151.98);
    path_1.cubicTo(288.92, 152.34, 288.87, 152.75, 289.21, 152.96);
    path_1.cubicTo(289.55, 153.17, 289.8, 152.86, 290.03, 152.59);
    path_1.cubicTo(290.39, 152.17, 290.42, 151.47, 290.95, 151.17);
    path_1.cubicTo(291.39, 151.83, 292.05, 152.58, 292.62, 152.3);
    path_1.cubicTo(293.58, 151.82, 294.21, 152.01, 294.85, 153.05);
    path_1.cubicTo(294.79, 151.11, 294.7, 150.88, 293.55, 150.12);
    path_1.cubicTo(293.16, 149.86, 292.54, 149.35, 292.84, 149.02);
    path_1.cubicTo(293.36, 148.46, 293.47, 147.56, 294.06, 147.11);
    path_1.cubicTo(295.13, 146.28, 296.08, 146.48, 296.86, 147.72);
    path_1.cubicTo(297.1, 148.09, 297.46, 148.22, 297.8, 148.38);
    path_1.cubicTo(298.25, 148.59, 298.67, 148.82, 299.02, 149.3);
    path_1.cubicTo(299.51, 149.97, 300.01, 150.14, 300.04, 148.91);
    path_1.cubicTo(300.06, 148.29, 300.48, 148.14, 300.84, 147.97);
    path_1.cubicTo(301.28, 147.76, 301.33, 148.36, 301.56, 148.6);
    path_1.cubicTo(301.93, 148.98, 302.03, 149.53, 302.21, 150.05);
    path_1.cubicTo(302.61, 151.26, 303.06, 151.52, 303.95, 151.05);
    path_1.cubicTo(304.27, 150.87, 304.62, 151.14, 304.63, 151.42);
    path_1.cubicTo(304.69, 153.43, 306.29, 153.37, 307.01, 153.58);
    path_1.cubicTo(307.92, 153.84, 308.19, 154.21, 308.24, 155.25);
    path_1.cubicTo(310.02, 154.01, 310.47, 152.18, 309.63, 149.9);
    path_1.cubicTo(309.42, 149.38, 309.33, 149.03, 309.72, 148.55);
    path_1.cubicTo(310.28, 147.85, 310.04, 147.12, 309.4, 146.61);
    path_1.cubicTo(308.9, 146.22, 308.38, 145.88, 307.82, 145.49);
    path_1.cubicTo(308.57, 144.66, 309.06, 143.84, 308.16, 142.63);
    path_1.cubicTo(307.78, 142.11, 307.87, 141.24, 308.25, 140.96);
    path_1.cubicTo(309.17, 140.28, 309.1, 139, 308.87, 138.12);
    path_1.cubicTo(308.45, 136.58, 308.71, 134.21, 307.93, 133.62);
    path_1.cubicTo(306, 132.08, 307.8, 131.17, 307.64, 130.01);
    path_1.cubicTo(307.6, 129.69, 307.51, 129.38, 307.51, 129.07);
    path_1.cubicTo(307.48, 127.78, 306.58, 127.08, 306.19, 126.05);
    path_1.cubicTo(305.83, 125.04, 305.37, 124.76, 304.76, 125.18);
    path_1.cubicTo(303.94, 125.74, 305.55, 124.82, 305.3, 123.82);
    path_1.lineTo(305.32, 123.84);
    path_1.cubicTo(304.63, 123.93, 304.17, 123.49, 304.06, 122.64);
    path_1.cubicTo(303.88, 121.35, 305.62, 119.48, 305.64, 118.22);
    path_1.cubicTo(305.7, 116.75, 305.49, 115.73, 304.26, 115.16);
    path_1.cubicTo(303.87, 115.78, 304.06, 116.63, 303.91, 117.39);
    path_1.cubicTo(303.21, 117.09, 302.67, 116.51, 302.33, 115.79);
    path_1.cubicTo(301.95, 114.98, 301.6, 114.23, 300.88, 113.84);
    path_1.cubicTo(299.66, 113.18, 300.88, 112.7, 300.77, 112.13);
    path_1.cubicTo(300.75, 112, 300.61, 111.89, 300.54, 111.76);
    path_1.cubicTo(300.03, 110.88, 300.25, 109.51, 300.97, 109.08);
    path_1.lineTo(300.97, 109.11);
    path_1.cubicTo(300.29, 107.37, 299.82, 105.4, 297.71, 105.14);
    path_1.cubicTo(298.76, 104.2, 297.83, 103.47, 297.26, 102.81);
    path_1.cubicTo(296.67, 102.13, 296.22, 101.43, 296.07, 100.52);
    path_1.cubicTo(295.99, 100.06, 296.13, 99.72, 296.55, 99.75);
    path_1.cubicTo(296.89, 99.77, 297.13, 100.02, 297.12, 100.47);
    path_1.cubicTo(297.11, 101.06, 297.4, 101.56, 297.6, 102.1);
    path_1.cubicTo(297.82, 102.68, 298.07, 103.06, 298.57, 102.82);
    path_1.cubicTo(299, 102.61, 299.08, 102.15, 298.87, 101.59);
    path_1.cubicTo(298.72, 101.2, 298.54, 100.81, 298.33, 100.45);
    path_1.cubicTo(296.97, 97.93, 295.93, 95.4, 295.75, 92.6);
    path_1.cubicTo(295.69, 91.8, 295.23, 91.18, 294.81, 91.04);
    path_1.cubicTo(294.34, 90.89, 293.78, 91.19, 293.7, 91.97);
    path_1.cubicTo(293.68, 92.21, 293.63, 92.44, 293.57, 92.67);
    path_1.cubicTo(293.31, 93.7, 292.66, 93.86, 291.87, 93.06);
    path_1.cubicTo(291.4, 92.56, 290.91, 92.03, 290.7, 91.29);
    path_1.cubicTo(289.77, 91.47, 288.88, 90.72, 287.97, 90.48);
    path_1.cubicTo(287.36, 90.32, 287.2, 89.67, 287.32, 89.03);
    path_1.cubicTo(287.39, 88.68, 287.56, 88.1, 287.29, 87.94);
    path_1.cubicTo(286.24, 87.3, 286.02, 86.45, 285.9, 85.57);
    path_1.cubicTo(285.8, 84.69, 285.82, 83.76, 285.24, 83.02);
    path_1.cubicTo(286.31, 84.29, 287.51, 85.47, 288.45, 86.83);
    path_1.cubicTo(289.4, 88.18, 290.21, 89.64, 290.68, 91.32);
    path_1.cubicTo(291.42, 91.1, 291.62, 90.64, 291, 89.72);
    path_1.cubicTo(290.59, 89.12, 290.5, 88.62, 290.67, 87.84);
    path_1.cubicTo(291.01, 86.23, 291.54, 84.43, 290.25, 82.53);
    path_1.cubicTo(289.94, 82.05, 289.36, 81.54, 289.33, 81.13);
    path_1.cubicTo(289.24, 79.98, 288.85, 79.96, 288.06, 79.96);
    path_1.cubicTo(286.81, 79.96, 286.44, 79.13, 286.71, 77.79);
    path_1.cubicTo(286.82, 77.25, 286.97, 76.55, 286.08, 75.86);
    path_1.cubicTo(285.19, 75.18, 284.75, 74.06, 284.29, 72.94);
    path_1.cubicTo(284.03, 72.33, 284.01, 71.65, 283.89, 71.02);
    path_1.cubicTo(283.76, 70.39, 283.55, 69.8, 282.96, 69.33);
    path_1.cubicTo(281.77, 68.38, 281.24, 67.09, 280.48, 65.89);
    path_1.cubicTo(279.36, 64.09, 278.93, 61.65, 276.47, 60.94);
    path_1.cubicTo(276.22, 60.87, 275.93, 60.44, 275.73, 60.14);
    path_1.cubicTo(275.1, 59.13, 274.26, 58.21, 273.78, 57.18);
    path_1.cubicTo(273.28, 56.12, 272.59, 55.17, 271.89, 54.23);
    path_1.cubicTo(271.54, 53.76, 271.19, 53.28, 270.85, 52.81);
    path_1.cubicTo(270.49, 52.35, 270.16, 51.87, 269.86, 51.38);
    path_1.cubicTo(269.65, 51.03, 269.29, 50.96, 268.96, 50.86);
    path_1.cubicTo(267.75, 50.48, 267.02, 49.57, 266.54, 48.45);
    path_1.cubicTo(265.43, 45.86, 264.5, 45.43, 262.33, 46.14);
    path_1.cubicTo(261.68, 46.36, 261.14, 46.79, 260.2, 45.95);
    path_1.cubicTo(259.69, 45.5, 259.4, 45.98, 259.49, 46.53);
    path_1.cubicTo(259.54, 46.84, 259.76, 47.19, 259.19, 47.28);
    path_1.cubicTo(259.34, 46.15, 258.6, 45.44, 257.75, 44.61);
    path_1.cubicTo(256.92, 43.84, 256.57, 43.21, 255.74, 44.14);
    path_1.cubicTo(255.35, 44.58, 254.33, 44.6, 253.55, 44.56);
    path_1.cubicTo(253.02, 44.53, 252.62, 43.83, 252.27, 43.33);
    path_1.cubicTo(251.5, 42.25, 250.92, 42.79, 250.25, 42.99);
    path_1.cubicTo(249.82, 43.12, 249.72, 43.88, 249.15, 43.55);
    path_1.cubicTo(248.6, 43.24, 249.01, 42.58, 248.65, 42.09);
    path_1.cubicTo(248.58, 41.99, 248.6, 41.83, 248.61, 41.71);
    path_1.cubicTo(248.64, 41.41, 248.72, 41.08, 248.37, 40.84);
    path_1.cubicTo(247.87, 40.51, 247.76, 40.96, 247.51, 41.13);
    path_1.cubicTo(247.14, 41.38, 246.72, 41.77, 246.27, 41.05);
    path_1.cubicTo(245.66, 40.08, 246.61, 38.59, 247.76, 38.79);
    path_1.cubicTo(248.57, 38.93, 248.95, 38.64, 249.22, 38.09);
    path_1.cubicTo(249.52, 37.46, 249.66, 36.78, 249.57, 36);
    path_1.lineTo(249.57, 36.03);
    path_1.cubicTo(248.62, 34.6, 248.43, 34.56, 247.71, 35.71);
    path_1.cubicTo(247.54, 35.98, 247.46, 36.29, 247.13, 36.45);
    path_1.cubicTo(245.98, 37.02, 245.65, 36.84, 245.22, 35.5);
    path_1.cubicTo(245.07, 35.04, 245.24, 34.47, 244.65, 34.12);
    path_1.cubicTo(243.44, 33.41, 243.41, 32.5, 243.4, 31.58);
    path_1.cubicTo(243.39, 30.8, 243, 29.88, 242.38, 29.1);
    path_1.cubicTo(241.76, 28.33, 240.89, 27.74, 239.99, 27.52);
    path_1.cubicTo(238.3, 27.12, 237.15, 26.06, 235.84, 25.08);
    path_1.cubicTo(234.57, 24.2, 233.52, 22.91, 231.74, 22.78);
    path_1.cubicTo(230.13, 22.67, 228.33, 22.66, 227.67, 20.59);
    path_1.cubicTo(227.66, 20.55, 227.61, 20.51, 227.57, 20.48);
    path_1.cubicTo(227.34, 20.27, 227.06, 20.02, 226.76, 20.09);
    path_1.cubicTo(226.37, 20.18, 226.66, 20.49, 226.75, 20.73);
    path_1.cubicTo(227.02, 21.47, 227.56, 22.23, 227.03, 23.07);
    path_1.cubicTo(226.45, 22.47, 225.91, 21.98, 225.46, 21.44);
    path_1.cubicTo(224.99, 20.88, 224.39, 20.34, 223.74, 20.19);
    path_1.cubicTo(223.05, 20.03, 222.4, 19.78, 221.76, 19.49);
    path_1.cubicTo(221.11, 19.23, 220.47, 18.95, 219.82, 18.71);
    path_1.cubicTo(219.15, 18.47, 218.76, 18.66, 218.36, 18.91);
    path_1.cubicTo(218.06, 19.1, 218.04, 19.37, 218.25, 19.68);
    path_1.cubicTo(218.58, 20.17, 219.12, 20.35, 219.7, 20.43);
    path_1.cubicTo(220.13, 20.49, 220.45, 20.34, 220.73, 20.14);
    path_1.cubicTo(221.28, 19.74, 222.01, 20.14, 222.1, 20.53);
    path_1.cubicTo(222.35, 21.5, 223.05, 22.62, 222.27, 23.39);
    path_1.cubicTo(221.56, 24.1, 220.63, 24.31, 219.33, 23.67);
    path_1.cubicTo(218.71, 23.38, 217.99, 23.2, 218.01, 24.21);
    path_1.cubicTo(218.02, 24.96, 217.26, 25.12, 216.43, 24.62);
    path_1.cubicTo(215.97, 24.34, 215.55, 23.97, 215.17, 23.6);
    path_1.cubicTo(213.99, 22.43, 213.24, 20.09, 211.64, 19.94);
    path_1.cubicTo(210.97, 19.87, 210.45, 19.77, 210.03, 19.32);
    path_1.cubicTo(209.34, 18.59, 208.64, 18.24, 207.72, 18.69);
    path_1.cubicTo(207.53, 18.78, 207.13, 18.98, 206.89, 18.52);
    path_1.cubicTo(206.28, 17.35, 206.08, 17.28, 205.12, 17.92);
    path_1.cubicTo(204.13, 18.59, 203.76, 18.22, 203.62, 17.31);
    path_1.cubicTo(203.53, 16.7, 203.19, 16.18, 202.79, 15.66);
    path_1.cubicTo(202.15, 14.83, 201.16, 14.64, 200.18, 14.98);
    path_1.cubicTo(199.35, 15.25, 197.89, 15.62, 197.44, 15.06);
    path_1.cubicTo(196.26, 13.63, 194.75, 13.64, 193.19, 13.47);
    path_1.cubicTo(192.63, 13.4, 192.15, 13.09, 191.69, 12.8);
    path_1.cubicTo(190.64, 12.11, 189.4, 11.78, 188.15, 11.5);
    path_1.cubicTo(187.74, 11.41, 187.06, 11.92, 186.96, 11.21);
    path_1.cubicTo(186.87, 10.6, 186.12, 9.88001, 186.89, 9.35001);
    path_1.cubicTo(187.96, 8.62001, 187.06, 7.92, 186.39, 7.37);
    path_1.cubicTo(185.65, 6.76, 184.97, 7.06, 184.52, 7.67);
    path_1.cubicTo(184.32, 7.94, 184.02, 8.15, 183.76, 8.38);
    path_1.cubicTo(182.45, 9.57, 181.21, 9.69001, 179.3, 8.77001);
    path_1.cubicTo(179, 8.63001, 178.71, 8.59, 178.42, 8.69);
    path_1.cubicTo(178.2, 8.77, 178.29, 8.92, 178.33, 9.09);
    path_1.cubicTo(178.72, 10.79, 178.72, 10.71, 176.75, 10.47);
    path_1.cubicTo(176.3, 10.41, 175.83, 10.52, 175.39, 10.44);
    path_1.cubicTo(174.66, 10.32, 173.79, 10.3, 173.71, 9.45);
    path_1.cubicTo(173.68, 9.14, 173.18, 10.9, 172.89, 10.73);
    path_1.cubicTo(172.31, 10.39, 172.12, 10.15, 172.81, 9.76);
    path_1.cubicTo(173.39, 9.44001, 173.19, 9.1, 172.45, 8.95);
    path_1.cubicTo(172.03, 8.86, 171.43, 8.85, 171.56, 8.3);
    path_1.cubicTo(171.65, 7.91, 171.83, 7.55, 172.37, 7.38);
    path_1.cubicTo(174.16, 6.82, 177.05, 5.71, 177.88, 7.24);
    path_1.cubicTo(178.37, 6.73, 178.81, 6.3, 179.27, 5.85);
    path_1.cubicTo(178.99, 5.67, 178.62, 5.5, 178.86, 5.2);
    path_1.cubicTo(178.91, 5.13, 179.27, 5.12, 179.38, 5.2);
    path_1.cubicTo(179.81, 5.49, 179.25, 5.63, 179.25, 5.87);
    path_1.cubicTo(179.73, 6.06, 180.2, 6.27, 180.69, 6.44);
    path_1.cubicTo(181.13, 6.59, 181.72, 6.8, 181.85, 6.3);
    path_1.cubicTo(181.94, 5.92, 182.51, 5.37, 181.51, 5.07);
    path_1.cubicTo(181.04, 4.93, 180.86, 4.64, 180.65, 4.35);
    path_1.cubicTo(180.08, 3.51, 179.36, 3.53, 178.63, 3.95);
    path_1.cubicTo(177.89, 4.39, 177.14, 5.21, 176.46, 5.92);
    path_1.cubicTo(176.19, 6.2, 175.83, 6.32, 175.4, 6.27);
    path_1.cubicTo(175.24, 6.25, 175.07, 6.08, 174.98, 5.95);
    path_1.cubicTo(174.94, 5.89, 175.05, 5.74, 175.15, 5.67);
    path_1.cubicTo(176.35, 4.71, 176.32, 4.17, 174.9, 3.13);
    path_1.cubicTo(174.34, 3.75, 173.58, 4.05, 172.64, 4.35);
    path_1.cubicTo(171.73, 4.63, 170.07, 4.38, 169.97, 5.72);
    path_1.cubicTo(169.94, 6.09, 170.07, 6.42, 170.07, 6.76);
    path_1.cubicTo(170.07, 7.01, 169.77, 7.71, 169.52, 7.45);
    path_1.cubicTo(168.62, 6.53, 167.59, 7.18, 166.66, 7.03);
    path_1.cubicTo(166.15, 6.95, 165.72, 6.94, 165.5, 7.35);
    path_1.cubicTo(165.33, 7.66, 165.29, 8, 165.65, 8.24);
    path_1.cubicTo(166.03, 8.5, 166.5, 8.46, 166.96, 8.34);
    path_1.cubicTo(168.4, 7.96, 169.08, 8.24, 168.9, 9.38);
    path_1.cubicTo(168.8, 10.05, 169.94, 11.16, 168.17, 11.47);
    path_1.cubicTo(168.09, 11.48, 167.99, 11.71, 168.03, 11.79);
    path_1.cubicTo(168.8, 13.29, 167.19, 14.95, 168.97, 16.52);
    path_1.cubicTo(167.7, 16.28, 166.49, 15.7, 166, 16.76);
    path_1.cubicTo(165.52, 17.79, 164.64, 18.49, 163.9, 19.31);
    path_1.cubicTo(163.73, 19.5, 163.61, 19.76, 163.78, 19.98);
    path_1.cubicTo(164, 20.26, 164.27, 20.01, 164.53, 19.98);
    path_1.cubicTo(165.43, 19.86, 166.46, 19.52, 167.24, 19.76);
    path_1.cubicTo(168.31, 20.09, 169.09, 20.96, 170.6, 21.08);
    path_1.cubicTo(168.83, 22.32, 167.27, 22.04, 165.64, 21.51);
    path_1.cubicTo(165.19, 21.37, 164.53, 20.87, 164.26, 21.64);
    path_1.cubicTo(164.05, 22.22, 164.04, 22.85, 164.89, 23.16);
    path_1.cubicTo(165.54, 23.4, 166.06, 23.73, 166.54, 24.21);
    path_1.cubicTo(167.32, 24.99, 169.16, 24.65, 169.72, 23.8);
    path_1.cubicTo(170.14, 23.11, 171.65, 20.9, 172, 21.52);
    path_1.cubicTo(172.69, 22.73, 173.57, 23.41, 175.18, 23.32);
    path_1.cubicTo(175.63, 23.29, 175.87, 23.68, 176.06, 24.04);
    path_1.cubicTo(176.47, 24.8, 177.03, 24.93, 177.86, 24.6);
    path_1.cubicTo(178.19, 24.47, 178.52, 24.16, 179.1, 24.38);
    path_1.cubicTo(178.93, 24.69, 179.05, 25.04, 179.12, 25.38);
    path_1.cubicTo(179.18, 25.72, 179.46, 26.08, 179.86, 25.93);
    path_1.cubicTo(180.61, 25.65, 181.42, 25.59, 182.23, 25.52);
    path_1.cubicTo(183.03, 25.48, 183.84, 25.46, 184.59, 25.2);
    path_1.cubicTo(185.25, 24.98, 185.89, 25.11, 186.59, 25.38);
    path_1.cubicTo(187.45, 25.72, 189.02, 26.08, 189.19, 25.71);
    path_1.cubicTo(189.58, 24.88, 190.02, 25.38, 190.48, 25.46);
    path_1.cubicTo(191.69, 25.67, 192.1, 25.49, 192.51, 24.51);
    path_1.cubicTo(192.55, 24.42, 192.69, 24.33, 192.8, 24.33);
    path_1.cubicTo(193.37, 24.33, 193.75, 24.12, 193.53, 23.61);
    path_1.cubicTo(193.35, 23.21, 192.75, 22.86, 192.37, 23.01);
    path_1.cubicTo(191.29, 23.43, 190.99, 22.84, 190.67, 22.13);
    path_1.cubicTo(191.31, 22, 192, 22.07, 192.23, 21.28);
    path_1.cubicTo(192.76, 19.41, 194.16, 18.71, 196.49, 18.94);
    path_1.cubicTo(197.11, 19, 197.27, 19.46, 197.57, 19.75);
    path_1.cubicTo(197.85, 20.03, 197.53, 20.36, 197.28, 20.59);
    path_1.cubicTo(196.9, 20.93, 196.63, 20.56, 196.3, 20.39);
    path_1.cubicTo(195.34, 19.92, 194.52, 20.19, 193.95, 20.75);
    path_1.cubicTo(193.55, 21.15, 193.24, 21.65, 194.03, 22.22);
    path_1.cubicTo(194.85, 22.81, 195.28, 22.45, 195.63, 21.96);
    path_1.cubicTo(196, 21.43, 196.47, 21.81, 196.9, 21.78);
    path_1.cubicTo(198.25, 21.67, 199.12, 22.01, 200.2, 22.9);
    path_1.cubicTo(201.06, 23.63, 202.49, 23.86, 203.67, 24.31);
    path_1.cubicTo(204.02, 24.44, 204.47, 24.45, 204.63, 24.84);
    path_1.cubicTo(204.67, 24.94, 204.51, 25.14, 204.38, 25.19);
    path_1.cubicTo(203.99, 25.34, 203.56, 25.3, 203.18, 25.03);
    path_1.cubicTo(202.79, 24.75, 202.47, 24.46, 201.92, 24.73);
    path_1.cubicTo(201.39, 25, 201.66, 25.4, 201.7, 25.77);
    path_1.cubicTo(200.79, 25.67, 200.01, 25.49, 199.65, 24.6);
    path_1.cubicTo(199.56, 24.37, 199.14, 24.02, 198.91, 24.02);
    path_1.cubicTo(198.21, 24.02, 197.52, 24.03, 196.83, 24.06);
    path_1.cubicTo(196.13, 24.12, 195.44, 24.19, 194.76, 24.29);
    path_1.cubicTo(194.25, 24.36, 194.25, 24.71, 194.77, 24.94);
    path_1.cubicTo(195.15, 25.11, 195.7, 25.17, 195.58, 25.66);
    path_1.cubicTo(195.46, 26.17, 194.87, 26.05, 194.43, 26.1);
    path_1.cubicTo(193.36, 26.21, 193.07, 26.71, 193.6, 27.53);
    path_1.cubicTo(194.17, 28.41, 194.56, 27.43, 195.1, 27.48);
    path_1.cubicTo(196.46, 27.63, 196.76, 27.39, 196.68, 26.26);
    path_1.cubicTo(196.65, 25.85, 196.92, 25.87, 197.17, 25.92);
    path_1.cubicTo(198.31, 26.15, 199.62, 26.17, 200.58, 26.7);
    path_1.cubicTo(202.84, 27.9, 205, 28.94, 207.58, 29.07);
    path_1.cubicTo(208.12, 29.1, 207.81, 31.22, 208.23, 31.51);
    path_1.cubicTo(208.65, 31.79, 208.91, 32.19, 208.62, 32.59);
    path_1.cubicTo(208.34, 32.99, 207.86, 32.93, 207.42, 32.68);
    path_1.cubicTo(205.73, 31.65, 204.49, 29.47, 202.61, 28.82);
    path_1.cubicTo(202.38, 28.73, 202.13, 28.7, 201.98, 28.88);
    path_1.cubicTo(201.8, 29.09, 201.98, 29.25, 202.2, 29.38);
    path_1.cubicTo(203.42, 30.1, 204.36, 31.27, 205.98, 31.28);
    path_1.cubicTo(206.85, 31.28, 206.85, 31.81, 206.53, 32.29);
    path_1.cubicTo(206.36, 32.55, 206.05, 32.74, 205.83, 32.98);
    path_1.cubicTo(204.9, 34, 204.17, 35.86, 205.61, 36.47);
    path_1.cubicTo(205.85, 36.57, 206.02, 36.8, 206.25, 36.93);
    path_1.cubicTo(206.59, 37.16, 207.07, 37.43, 207.34, 37.13);
    path_1.cubicTo(208.13, 36.24, 208.97, 36.85, 209.83, 37.18);
    path_1.cubicTo(211.06, 37.68, 212.19, 38.32, 213.28, 39.07);
    path_1.cubicTo(213.85, 39.45, 214.37, 39.64, 214.32, 40.35);
    path_1.cubicTo(214.29, 40.79, 214.61, 41.28, 214.94, 40.97);
    path_1.cubicTo(215.7, 40.25, 216.77, 40.46, 217.62, 40.14);
    path_1.cubicTo(219.21, 39.52, 220.31, 40.29, 221.31, 41.31);
    path_1.cubicTo(221.78, 41.79, 222.49, 42.02, 222.72, 41.88);
    path_1.cubicTo(223.71, 41.26, 224.58, 42.01, 225.48, 42.22);
    path_1.cubicTo(225.91, 42.34, 226.43, 42.6, 226.78, 42.5);
    path_1.cubicTo(227.68, 42.24, 228.53, 42.59, 229.21, 43.08);
    path_1.cubicTo(230.69, 44.14, 232.12, 44.32, 233.65, 43.84);
    path_1.cubicTo(233.81, 44.54, 233.96, 45.17, 234.1, 45.78);
    path_1.cubicTo(234.26, 46.52, 235.35, 47.36, 236.06, 47.29);
    path_1.cubicTo(237.62, 47.12, 237.91, 47.32, 238.01, 48.87);
    path_1.cubicTo(238.05, 49.39, 238.28, 49.66, 238.7, 49.94);
    path_1.cubicTo(240.14, 50.93, 241.62, 51.88, 243.02, 52.93);
    path_1.cubicTo(243.9, 53.58, 244.83, 54.13, 245.85, 53.75);
    path_1.cubicTo(246.9, 53.37, 247.88, 53.74, 248.68, 54.58);
    path_1.cubicTo(249.02, 54.92, 249.91, 55.11, 249.63, 55.58);
    path_1.cubicTo(249.23, 56.26, 248.8, 55.24, 248.34, 55.1);
    path_1.cubicTo(247.46, 54.83, 246.48, 54.66, 245.97, 55.15);
    path_1.cubicTo(245.45, 55.64, 246.47, 56.14, 246.78, 56.65);
    path_1.cubicTo(247.03, 57.06, 246.83, 57.36, 246.53, 57.21);
    path_1.cubicTo(245.79, 56.85, 244.95, 57.19, 244.29, 56.53);
    path_1.cubicTo(243.87, 56.11, 243.43, 56.03, 243, 56.34);
    path_1.lineTo(243, 56.32);
    path_1.cubicTo(243.18, 56.98, 243.83, 57.53, 243.55, 58.33);
    path_1.cubicTo(243.45, 58.64, 243.92, 59.67, 244.7, 58.83);
    path_1.cubicTo(245.03, 58.47, 245.39, 58.68, 245.73, 58.94);
    path_1.cubicTo(246.03, 59.16, 246.04, 59.41, 245.77, 59.54);
    path_1.cubicTo(244.86, 59.97, 245.42, 60.44, 245.89, 60.9);
    path_1.cubicTo(246.16, 61.16, 246.36, 61.43, 246.49, 61.78);
    path_1.cubicTo(247.14, 63.57, 247.89, 65.13, 249.94, 65.88);
    path_1.cubicTo(250.57, 66.1, 250.87, 66.85, 250.31, 67.46);
    path_1.cubicTo(250.01, 67.78, 250.03, 68.13, 250.34, 68.48);
    path_1.cubicTo(250.59, 68.76, 250.99, 69.01, 251.26, 68.79);
    path_1.cubicTo(252.34, 67.92, 253.2, 68.5, 253.94, 69.54);
    path_1.cubicTo(254.09, 69.74, 254.38, 69.94, 254.6, 69.95);
    path_1.cubicTo(256.09, 70.07, 256.99, 71.65, 257.08, 72.4);
    path_1.cubicTo(257.3, 74.04, 258.23, 74.91, 259.22, 75.91);
    path_1.cubicTo(259.93, 76.64, 259.94, 76.64, 260.51, 75.83);
    path_1.cubicTo(260.63, 75.66, 260.72, 75.66, 260.91, 75.79);
    path_1.cubicTo(261.32, 76.06, 261.43, 76.38, 261.52, 76.86);
    path_1.cubicTo(261.6, 77.32, 261.77, 77.84, 262.03, 78.25);
    path_1.cubicTo(262.27, 78.67, 262.61, 78.97, 263.06, 78.95);
    path_1.cubicTo(263.98, 78.9, 264.95, 79.2, 265.87, 78.95);
    path_1.cubicTo(266.93, 78.65, 268.9, 79.6, 269.2, 80.44);
    path_1.cubicTo(269.35, 80.75, 268.39, 83.85, 268.14, 83.98);
    path_1.cubicTo(268.07, 84.02, 267.99, 84.04, 267.91, 84.03);
    path_1.cubicTo(267.33, 83.99, 266.65, 83.83, 266.26, 84.26);
    path_1.cubicTo(265.48, 85.08, 267.03, 85.05, 266.9, 85.6);
    path_1.cubicTo(266.71, 86.38, 267.39, 86.42, 267.68, 86.5);
    path_1.cubicTo(268.11, 86.61, 268.4, 86.29, 268.37, 85.73);
    path_1.cubicTo(268.32, 84.94, 268.8, 84.9, 269.37, 85.19);
    path_1.cubicTo(269.86, 85.45, 270.45, 85.6, 270.85, 86.46);
    path_1.cubicTo(269.45, 86.19, 268.84, 87.58, 267.55, 87.5);
    path_1.cubicTo(267.2, 87.48, 267.06, 87.74, 267.26, 87.98);
    path_1.cubicTo(267.65, 88.44, 267.9, 88.99, 268.19, 89.51);
    path_1.cubicTo(268.46, 90.05, 268.77, 90.55, 269.31, 90.92);
    path_1.cubicTo(269.91, 91.33, 270.37, 92.03, 270.48, 92.8);
    path_1.cubicTo(270.6, 93.75, 270.38, 94.84, 271.34, 95.44);
    path_1.cubicTo(272.16, 95.97, 272.98, 96.81, 273.8, 96.99);
    path_1.cubicTo(275.02, 97.26, 275.9, 98.13, 276.96, 98.69);
    path_1.cubicTo(277.43, 98.94, 277.74, 99.13, 278.09, 98.58);
    path_1.cubicTo(278.47, 97.97, 279.02, 98.16, 279.31, 98.91);
    path_1.cubicTo(279.63, 99.68, 280.05, 100.14, 280.92, 99.88);
    path_1.cubicTo(280.44, 100.5, 280.23, 101.19, 280.99, 101.57);
    path_1.cubicTo(282.57, 102.36, 282.1, 103.18, 281.44, 104.06);
    path_1.lineTo(281.44, 104.04);
    path_1.lineTo(281.42, 103.98);
    path_1.close();
    path_1.moveTo(182.62, 10.09);
    path_1.cubicTo(182.65, 10.54, 182.25, 10.7, 181.88, 10.88);
    path_1.cubicTo(181.76, 11.15, 182.48, 11.27, 182.16, 11.56);
    path_1.cubicTo(182.1, 11.61, 181.85, 11.58, 181.75, 11.52);
    path_1.cubicTo(181.25, 11.21, 181.71, 11.08, 181.9, 10.9);
    path_1.cubicTo(181.93, 10.53, 181.8, 10.07, 182.62, 10.09);
    path_1.close();
    path_1.moveTo(178.47, 15.31);
    path_1.cubicTo(178.9, 15.4, 179.37, 15.48, 179.55, 15.88);
    path_1.cubicTo(179.59, 15.96, 179.47, 16.15, 179.38, 16.16);
    path_1.cubicTo(178.93, 16.22, 178.81, 15.76, 178.42, 15.67);
    path_1.cubicTo(178.28, 15.64, 178.15, 15.57, 178.01, 15.52);
    path_1.cubicTo(178.14, 16.04, 177.76, 15.8, 177.54, 15.69);
    path_1.cubicTo(177.32, 15.58, 177.15, 15.35, 177.33, 15.19);
    path_1.cubicTo(177.56, 14.98, 177.74, 15.3, 177.94, 15.37);
    path_1.cubicTo(178.12, 15.34, 178.3, 15.26, 178.46, 15.3);
    path_1.lineTo(178.47, 15.31);
    path_1.close();
    path_1.moveTo(290.17, 103.14);
    path_1.cubicTo(290.75, 103.24, 290.84, 104.05, 291.36, 104.2);
    path_1.cubicTo(291.82, 104.34, 291.65, 104.98, 291.59, 105.19);
    path_1.cubicTo(291.48, 105.6, 291.22, 105.3, 290.97, 105.04);
    path_1.cubicTo(290.56, 104.61, 290.46, 105.21, 290.21, 105.33);
    path_1.cubicTo(290.23, 105.62, 290.12, 105.8, 289.89, 105.55);
    path_1.cubicTo(289.73, 105.37, 289.57, 105.03, 289.59, 104.82);
    path_1.cubicTo(289.61, 104.6, 289.88, 104.63, 290.06, 104.83);
    path_1.cubicTo(290.56, 104.43, 290.4, 103.84, 290.16, 103.14);
    path_1.lineTo(290.17, 103.14);
    path_1.close();
    path_1.moveTo(258.73, 63.28);
    path_1.cubicTo(258.23, 63.21, 258.11, 62.85, 258.05, 62.43);
    path_1.cubicTo(258.47, 62.34, 258.54, 62.77, 258.76, 62.95);
    path_1.cubicTo(259.6, 62.02, 260.44, 62.37, 261.28, 63.59);
    path_1.cubicTo(260.34, 63.94, 259.6, 62.92, 258.75, 62.91);
    path_1.cubicTo(258.74, 63.03, 258.73, 63.27, 258.72, 63.27);
    path_1.lineTo(258.73, 63.28);
    path_1.close();
    path_1.moveTo(205.92, 20.34);
    path_1.cubicTo(206.24, 20.69, 206.6, 21.09, 206.23, 21.45);
    path_1.cubicTo(206.07, 21.6, 205.68, 21.64, 205.49, 21.33);
    path_1.cubicTo(205.23, 20.88, 204.74, 20.39, 205.59, 20.12);
    path_1.cubicTo(204.51, 19.92, 203.52, 19.58, 202.65, 18.88);
    path_1.cubicTo(204.18, 18.52, 205.59, 19.15, 205.54, 20.12);
    path_1.cubicTo(205.67, 20.19, 205.83, 20.24, 205.92, 20.34);
    path_1.close();
    path_1.moveTo(223.35, 36.36);
    path_1.cubicTo(222.96, 37.27, 221.73, 37.57, 221.58, 38.76);
    path_1.cubicTo(221.5, 39.32, 220.8, 39.86, 220.04, 38.85);
    path_1.cubicTo(219.87, 38.61, 219.53, 38.46, 219.24, 38.35);
    path_1.cubicTo(217.99, 37.84, 217.83, 37.39, 218.8, 36.72);
    path_1.cubicTo(219.44, 36.28, 219.79, 36.03, 218.8, 35.41);
    path_1.cubicTo(218.11, 34.98, 218.6, 34.68, 219.02, 34.55);
    path_1.cubicTo(219.81, 34.3, 220.85, 34.41, 220.95, 33.31);
    path_1.cubicTo(220.97, 33.1, 221.5, 33.14, 221.84, 33.24);
    path_1.cubicTo(223.03, 33.58, 224.3, 35.18, 224.49, 36.52);
    path_1.cubicTo(224.03, 36.24, 223.7, 35.62, 223.38, 36.36);
    path_1.lineTo(223.35, 36.36);
    path_1.close();
    path_1.moveTo(237.65, 32.67);
    path_1.cubicTo(237.49, 32.69, 237.41, 32.92, 237.25, 32.93);
    path_1.cubicTo(236.62, 32.96, 235.87, 33.23, 235.35, 32.65);
    path_1.cubicTo(234.76, 32.01, 235.63, 31.79, 235.92, 31.55);
    path_1.cubicTo(236.84, 30.77, 237.25, 30.1, 235.63, 29.01);
    path_1.cubicTo(234.91, 28.53, 235.43, 28.13, 235.82, 28.09);
    path_1.cubicTo(237.01, 27.97, 238.2, 28.45, 239.31, 29.21);
    path_1.cubicTo(239.58, 29.4, 239.74, 29.66, 239.61, 29.92);
    path_1.cubicTo(239.47, 30.22, 239.15, 30.22, 238.78, 30.15);
    path_1.cubicTo(238.22, 30.04, 237.39, 29.7, 237.47, 30.46);
    path_1.cubicTo(237.54, 31.16, 238.38, 31.27, 239.01, 31.41);
    path_1.cubicTo(239.46, 31.52, 240, 31.38, 240.5, 32.26);
    path_1.cubicTo(239.15, 31.71, 238.55, 32.53, 237.64, 32.65);
    path_1.lineTo(237.65, 32.67);
    path_1.close();
    path_1.moveTo(264.24, 68.97);
    path_1.cubicTo(263.26, 69.21, 262.88, 68.92, 263.12, 67.84);
    path_1.cubicTo(263.22, 67.39, 263.05, 66.89, 262.85, 66.4);
    path_1.cubicTo(262.59, 65.75, 263.26, 64.92, 263.79, 65.29);
    path_1.cubicTo(264.54, 65.83, 265.41, 65.99, 266.12, 66.55);
    path_1.cubicTo(266.47, 66.85, 266.8, 67.29, 266.75, 67.8);
    path_1.cubicTo(266.68, 68.43, 266.63, 69.14, 265.72, 68.3);
    path_1.cubicTo(265.65, 68.23, 265.58, 68.17, 265.51, 68.11);
    path_1.cubicTo(265.09, 67.78, 264.49, 67.39, 264.29, 67.89);
    path_1.cubicTo(264.02, 68.55, 264.85, 68.5, 265.12, 68.98);
    path_1.cubicTo(264.83, 68.98, 264.52, 68.91, 264.25, 68.98);
    path_1.lineTo(264.24, 68.97);
    path_1.close();
    path_1.moveTo(230.35, 39);
    path_1.cubicTo(230.52, 38.68, 232.77, 39.07, 233.52, 39.62);
    path_1.cubicTo(234.22, 40.14, 234.07, 40.83, 233.88, 41.36);
    path_1.cubicTo(233.65, 41.99, 232.1, 42.08, 231.4, 41.61);
    path_1.cubicTo(230.29, 40.85, 229.89, 39.87, 230.36, 39.01);
    path_1.lineTo(230.35, 39);
    path_1.close();
    path_1.moveTo(218.58, 28.88);
    path_1.cubicTo(219.15, 29.06, 220.11, 29.18, 219.29, 30.32);
    path_1.cubicTo(218.56, 31.34, 217.86, 31.11, 216.86, 31.14);
    path_1.cubicTo(215.23, 31.2, 216.57, 29.54, 215.28, 29.52);
    path_1.cubicTo(216.12, 29.44, 216.76, 29.91, 217.42, 30.23);
    path_1.cubicTo(217.77, 30.39, 218.18, 30.69, 218.37, 30.26);
    path_1.cubicTo(218.54, 29.87, 218.08, 29.52, 217.75, 29.52);
    path_1.cubicTo(216.68, 29.5, 216.48, 28.64, 215.85, 28.17);
    path_1.cubicTo(216.79, 28.42, 217.71, 28.59, 218.58, 28.88);
    path_1.close();
    path_1.moveTo(247.01, 50.01);
    path_1.cubicTo(246.41, 48.79, 245.37, 47.94, 244.41, 47.04);
    path_1.cubicTo(244.25, 46.88, 244, 46.69, 244.23, 46.51);
    path_1.cubicTo(244.39, 46.38, 244.6, 46.38, 244.82, 46.62);
    path_1.cubicTo(245.31, 47.17, 245.86, 47.61, 246.63, 47.51);
    path_1.cubicTo(246.78, 47.49, 247.07, 47.71, 247.21, 47.88);
    path_1.cubicTo(247.69, 48.47, 247.49, 49.39, 248.46, 49.77);
    path_1.cubicTo(248.6, 49.83, 248.52, 50.17, 248.31, 50.41);
    path_1.cubicTo(247.9, 50.68, 247.26, 50.53, 247.01, 50.02);
    path_1.lineTo(247.01, 50.01);
    path_1.close();
    path_1.moveTo(226.14, 33.65);
    path_1.cubicTo(225.89, 33.85, 225.64, 33.78, 225.3, 33.53);
    path_1.cubicTo(224.41, 32.87, 223.99, 31.92, 223.28, 31.17);
    path_1.cubicTo(222.97, 30.84, 223.01, 30.48, 223.6, 30.56);
    path_1.cubicTo(224.22, 30.63, 224.84, 30.68, 225.32, 31.09);
    path_1.cubicTo(225.68, 31.33, 226.36, 33.5, 226.14, 33.67);
    path_1.lineTo(226.14, 33.65);
    path_1.close();
    path_1.moveTo(304.27, 135.6);
    path_1.cubicTo(303.24, 135.57, 302.16, 135.18, 301.01, 134.61);
    path_1.cubicTo(301.66, 134.11, 302.83, 134.11, 302.14, 132.3);
    path_1.cubicTo(303.53, 133.07, 303.63, 134.65, 304.27, 135.6);
    path_1.close();
    path_1.moveTo(257.7, 64.55);
    path_1.cubicTo(258.06, 64.75, 258.37, 65.03, 258.26, 65.38);
    path_1.cubicTo(258.13, 65.78, 257.67, 65.69, 257.39, 65.43);
    path_1.cubicTo(256.72, 64.83, 255.34, 64.95, 255.45, 63.52);
    path_1.cubicTo(255.46, 63.35, 255.12, 63.1, 254.93, 62.88);
    path_1.cubicTo(254.73, 62.65, 254.06, 62.59, 254.45, 62.14);
    path_1.cubicTo(254.75, 61.79, 255.05, 62.25, 255.31, 62.51);
    path_1.cubicTo(255.41, 62.61, 255.51, 62.71, 255.67, 62.88);
    path_1.cubicTo(255.95, 63.85, 256.89, 64.1, 257.69, 64.54);
    path_1.lineTo(257.7, 64.55);
    path_1.close();
    path_1.moveTo(271.78, 83.4);
    path_1.cubicTo(272.86, 82.6, 273.13, 84.03, 273.74, 84.47);
    path_1.cubicTo(273.9, 84.58, 273.96, 85.06, 273.72, 84.98);
    path_1.cubicTo(273.02, 84.76, 272.38, 84.98, 271.74, 84.85);
    path_1.cubicTo(271.21, 84.74, 271.09, 84.03, 270.79, 83.36);
    path_1.cubicTo(271.23, 83.38, 271.6, 83.53, 271.78, 83.4);
    path_1.close();
    path_1.moveTo(207.74, 20.82);
    path_1.cubicTo(207.41, 20.59, 207.1, 20.24, 207.39, 19.96);
    path_1.cubicTo(207.72, 19.64, 208.29, 19.84, 208.51, 20.17);
    path_1.cubicTo(208.92, 20.76, 209.41, 21.07, 210.16, 21.22);
    path_1.cubicTo(210.68, 21.33, 210.93, 21.69, 210.72, 22.08);
    path_1.cubicTo(210.5, 22.47, 210.08, 22.23, 209.68, 22.1);
    path_1.cubicTo(209.05, 21.69, 208.38, 21.27, 207.74, 20.82);
    path_1.close();
    path_1.moveTo(285.31, 118.6);
    path_1.cubicTo(285.58, 118.06, 284.89, 117.22, 285.34, 116.98);
    path_1.cubicTo(286.02, 116.62, 286.81, 116.98, 287.36, 117.99);
    path_1.cubicTo(286.66, 118.28, 286.2, 119.19, 285.31, 118.6);
    path_1.close();
    path_1.moveTo(303.59, 137.98);
    path_1.cubicTo(303.26, 137.7, 302.89, 137.41, 302.98, 136.79);
    path_1.cubicTo(303.02, 136.53, 303.22, 136.2, 303.34, 136.34);
    path_1.cubicTo(303.75, 136.83, 304.5, 136.17, 304.71, 137.06);
    path_1.cubicTo(304.84, 137.62, 304.82, 138.23, 304.88, 138.94);
    path_1.cubicTo(304.34, 138.54, 303.95, 138.29, 303.59, 137.99);
    path_1.lineTo(303.59, 137.98);
    path_1.close();
    path_1.moveTo(228.81, 27.61);
    path_1.cubicTo(228.3, 28.1, 227.54, 27.83, 226.84, 27.49);
    path_1.cubicTo(226.26, 27.21, 226.32, 26.76, 226.52, 26.51);
    path_1.cubicTo(226.97, 25.93, 227.65, 26.37, 228.29, 26.7);
    path_1.cubicTo(228.61, 26.96, 229.21, 27.22, 228.81, 27.61);
    path_1.close();
    path_1.moveTo(239.42, 37.31);
    path_1.cubicTo(239.27, 37.77, 239.3, 37.8, 239.98, 37.86);
    path_1.cubicTo(240.14, 37.87, 240.24, 37.87, 240.29, 38.02);
    path_1.cubicTo(240.31, 38.09, 240.29, 38.2, 240.25, 38.25);
    path_1.cubicTo(239.92, 38.6, 239.5, 38.58, 239.04, 38.2);
    path_1.cubicTo(238.56, 37.8, 238.1, 37.38, 237.59, 36.85);
    path_1.cubicTo(238.59, 37.36, 238.86, 36.71, 239.33, 36.19);
    path_1.cubicTo(239.65, 36.72, 239.52, 37, 239.42, 37.31);
    path_1.close();
    path_1.moveTo(295.04, 97.65);
    path_1.cubicTo(294.73, 97.7, 294.11, 96.82, 293.72, 96.28);
    path_1.cubicTo(293.47, 95.93, 293.5, 95.46, 293.9, 95.36);
    path_1.cubicTo(294.56, 95.2, 294.87, 95.58, 294.77, 96.33);
    path_1.cubicTo(295.33, 96.84, 295.53, 97.57, 295.04, 97.64);
    path_1.lineTo(295.04, 97.65);
    path_1.close();
    path_1.moveTo(263.01, 74.59);
    path_1.cubicTo(262.8, 74.7, 262.7, 74.23, 262.61, 73.98);
    path_1.cubicTo(262.51, 73.7, 262.7, 73.59, 262.82, 73.45);
    path_1.cubicTo(263.07, 73.16, 263.3, 73.42, 263.43, 73.64);
    path_1.cubicTo(263.77, 74.25, 264.88, 74.41, 264.6, 75.46);
    path_1.cubicTo(263.93, 75.28, 263.83, 74.16, 263, 74.59);
    path_1.lineTo(263.01, 74.59);
    path_1.close();
    path_1.moveTo(294.58, 125.61);
    path_1.cubicTo(294.41, 125.4, 294.32, 124.89, 294.65, 124.73);
    path_1.cubicTo(294.99, 124.56, 295.26, 124.73, 295.32, 125.28);
    path_1.cubicTo(295.4, 125.99, 295.77, 126.55, 296.26, 127.2);
    path_1.cubicTo(295.24, 127.2, 295.04, 126.19, 294.57, 125.61);
    path_1.lineTo(294.58, 125.61);
    path_1.close();
    path_1.moveTo(243.27, 41.47);
    path_1.cubicTo(243.2, 41.44, 243.11, 40.82, 243.22, 40.78);
    path_1.cubicTo(243.95, 40.5, 244.55, 41.33, 245.26, 41.5);
    path_1.cubicTo(245.5, 41.56, 245.53, 41.86, 245.31, 42.13);
    path_1.cubicTo(244.67, 41.93, 243.96, 41.74, 243.27, 41.47);
    path_1.close();
    path_1.moveTo(287.93, 108.8);
    path_1.cubicTo(288.1, 109.2, 287.99, 109.55, 287.58, 109.59);
    path_1.cubicTo(287.12, 109.64, 286.94, 109.23, 287.05, 108.88);
    path_1.cubicTo(287.21, 108.36, 286.88, 107.83, 286.96, 107.23);
    path_1.cubicTo(287.61, 107.62, 287.71, 108.27, 287.93, 108.8);
    path_1.close();
    path_1.moveTo(249.1, 59.27);
    path_1.cubicTo(249.09, 58.98, 249.14, 58.77, 249.47, 58.78);
    path_1.cubicTo(249.66, 58.78, 249.9, 58.98, 249.84, 59.1);
    path_1.cubicTo(249.27, 60.27, 250.68, 59.78, 250.93, 60.41);
    path_1.cubicTo(249.98, 60.61, 249.14, 60.09, 249.1, 59.28);
    path_1.lineTo(249.1, 59.27);
    path_1.close();
    path_1.moveTo(291.81, 144.47);
    path_1.cubicTo(290.77, 144.29, 290.69, 144.13, 290.8, 142.58);
    path_1.cubicTo(291.5, 143.05, 291.63, 143.8, 291.81, 144.47);
    path_1.close();
    path_1.moveTo(251.35, 56.3);
    path_1.cubicTo(252.48, 56.06, 253.09, 56.69, 253.51, 57.63);
    path_1.cubicTo(252.73, 57.33, 252, 56.97, 251.35, 56.3);
    path_1.close();
    path_1.moveTo(199.78, 17.26);
    path_1.cubicTo(200, 16.88, 199.88, 16.28, 200.53, 16.29);
    path_1.cubicTo(201.05, 16.3, 201.74, 16.33, 202.07, 17.13);
    path_1.cubicTo(201.19, 16.94, 200.41, 16.82, 199.78, 17.26);
    path_1.close();
    path_1.moveTo(293.73, 122.03);
    path_1.cubicTo(293.67, 121.66, 293.77, 121.38, 294.12, 121.32);
    path_1.cubicTo(294.48, 121.26, 294.8, 121.45, 294.93, 121.85);
    path_1.cubicTo(295.04, 122.24, 294.87, 122.51, 294.61, 122.44);
    path_1.cubicTo(294.2, 122.41, 293.82, 122.66, 293.73, 122.03);
    path_1.close();
    path_1.moveTo(209.69, 30.9);
    path_1.cubicTo(209.6, 30.74, 209.87, 30.69, 210.06, 30.68);
    path_1.cubicTo(210.97, 30.6, 211.02, 31.31, 211.4, 31.93);
    path_1.cubicTo(210.55, 31.77, 210, 31.48, 209.69, 30.9);
    path_1.close();
    path_1.moveTo(288.36, 97.59);
    path_1.cubicTo(287.58, 97.32, 287.73, 96.34, 287.04, 95.68);
    path_1.cubicTo(288.02, 95.82, 288.06, 97.58, 289.08, 96.6);
    path_1.cubicTo(289.04, 97.4, 288.75, 97.72, 288.37, 97.59);
    path_1.lineTo(288.36, 97.59);
    path_1.close();
    path_1.moveTo(293, 123.98);
    path_1.cubicTo(292.98, 123.61, 293.14, 123.15, 293.52, 123.02);
    path_1.cubicTo(293.8, 122.93, 293.94, 123.17, 294.03, 123.48);
    path_1.cubicTo(294.15, 123.92, 294.08, 124.22, 293.66, 124.34);
    path_1.cubicTo(293.42, 124.31, 293.02, 124.34, 293, 123.99);
    path_1.lineTo(293, 123.98);
    path_1.close();
    path_1.moveTo(244.65, 52.36);
    path_1.cubicTo(244.65, 52.66, 244.44, 52.46, 244.3, 52.34);
    path_1.cubicTo(243.86, 51.96, 242.86, 51.85, 243.56, 50.91);
    path_1.cubicTo(244.09, 51.36, 244.66, 51.72, 244.66, 52.36);
    path_1.lineTo(244.65, 52.36);
    path_1.close();
    path_1.moveTo(263.42, 48.41);
    path_1.cubicTo(263.45, 48.49, 263.31, 48.67, 263.23, 48.66);
    path_1.cubicTo(262.58, 48.61, 262.2, 48.19, 261.89, 47.44);
    path_1.cubicTo(262.63, 47.56, 263.19, 47.7, 263.43, 48.41);
    path_1.lineTo(263.42, 48.41);
    path_1.close();
    path_1.moveTo(223.1, 23.38);
    path_1.cubicTo(223.28, 23.32, 223.55, 23.4, 223.6, 23.58);
    path_1.cubicTo(223.74, 24.14, 223.27, 24.32, 222.76, 24.59);
    path_1.cubicTo(222.43, 23.92, 222.56, 23.55, 223.11, 23.38);
    path_1.lineTo(223.1, 23.38);
    path_1.close();
    path_1.moveTo(277.84, 82.85);
    path_1.cubicTo(277.45, 81.84, 276.71, 81.11, 276.01, 80.34);
    path_1.cubicTo(276.91, 80.93, 277.62, 81.71, 277.84, 82.85);
    path_1.close();
    path_1.moveTo(267.35, 63.66);
    path_1.cubicTo(267.26, 63.78, 267.17, 64.01, 267.07, 63.99);
    path_1.cubicTo(266.51, 63.89, 266.22, 63.43, 265.88, 62.85);
    path_1.cubicTo(266.59, 62.86, 266.95, 63.32, 267.35, 63.66);
    path_1.close();
    path_1.moveTo(286.19, 94.78);
    path_1.cubicTo(285.42, 94.78, 284.85, 94.29, 284.19, 93.53);
    path_1.cubicTo(285.15, 93.59, 285.63, 94.26, 286.19, 94.78);
    path_1.close();
    path_1.moveTo(292.82, 97.21);
    path_1.cubicTo(292.08, 96.79, 292.06, 96.21, 291.86, 95.34);
    path_1.cubicTo(292.73, 95.88, 292.77, 96.44, 292.82, 97.21);
    path_1.close();
    path_1.moveTo(287.55, 105.35);
    path_1.cubicTo(287.2, 104.84, 286.36, 104.75, 286.75, 103.68);
    path_1.cubicTo(287.12, 104.25, 287.58, 104.62, 287.55, 105.35);
    path_1.close();
    path_1.moveTo(256.24, 67.09);
    path_1.cubicTo(255.9, 66.9, 256.18, 66.73, 256.27, 66.59);
    path_1.cubicTo(256.57, 66.16, 256.75, 66.7, 256.97, 66.82);
    path_1.cubicTo(257.18, 66.93, 257.33, 67.11, 257.16, 67.34);
    path_1.cubicTo(256.81, 67.63, 256.52, 67.25, 256.23, 67.09);
    path_1.lineTo(256.24, 67.09);
    path_1.close();
    path_1.moveTo(217.81, 27.37);
    path_1.cubicTo(217.49, 27.26, 217.33, 27.03, 217.45, 26.77);
    path_1.cubicTo(217.59, 26.46, 217.91, 26.68, 218.18, 26.71);
    path_1.cubicTo(218.57, 26.77, 218.55, 26.93, 218.51, 27.09);
    path_1.cubicTo(218.34, 27.36, 218.13, 27.49, 217.8, 27.37);
    path_1.lineTo(217.81, 27.37);
    path_1.close();
    path_1.moveTo(256.19, 70.08);
    path_1.cubicTo(255.98, 69.87, 255.95, 69.59, 256.13, 69.41);
    path_1.cubicTo(256.29, 69.25, 256.52, 69.41, 256.69, 69.56);
    path_1.cubicTo(256.89, 69.75, 257.03, 69.97, 256.87, 70.22);
    path_1.cubicTo(256.63, 70.36, 256.39, 70.27, 256.19, 70.08);
    path_1.close();
    path_1.moveTo(289.81, 146.98);
    path_1.cubicTo(289.65, 146.9, 289.64, 146.66, 289.74, 146.51);
    path_1.cubicTo(290.01, 146.08, 290.31, 146.19, 290.63, 146.51);
    path_1.cubicTo(290.43, 146.87, 290.23, 147.21, 289.81, 146.99);
    path_1.lineTo(289.81, 146.98);
    path_1.close();
    path_1.moveTo(290.88, 94.63);
    path_1.cubicTo(290.7, 94.7, 290.43, 94.73, 290.38, 94.39);
    path_1.cubicTo(290.34, 94.13, 290.4, 93.79, 290.53, 93.62);
    path_1.cubicTo(290.72, 93.39, 290.87, 93.74, 290.99, 93.87);
    path_1.cubicTo(291.14, 94.23, 291.16, 94.52, 290.88, 94.62);
    path_1.lineTo(290.88, 94.63);
    path_1.close();
    path_1.moveTo(230.59, 27.33);
    path_1.cubicTo(230.46, 27.46, 230.24, 27.38, 230.06, 27.26);
    path_1.cubicTo(229.64, 26.96, 229.81, 26.72, 229.99, 26.49);
    path_1.cubicTo(230.09, 26.35, 230.25, 26.29, 230.44, 26.49);
    path_1.cubicTo(230.64, 26.78, 230.83, 27.07, 230.59, 27.32);
    path_1.lineTo(230.59, 27.33);
    path_1.close();
    path_1.moveTo(289.87, 109.85);
    path_1.cubicTo(289.29, 109.25, 289.14, 108.41, 288.8, 107.68);
    path_1.cubicTo(289.03, 108.45, 289.96, 108.85, 289.87, 109.85);
    path_1.close();
    path_1.moveTo(260.27, 72.51);
    path_1.cubicTo(260.58, 72.32, 260.84, 72.64, 261.05, 72.81);
    path_1.cubicTo(261.27, 73, 261.05, 73.19, 260.91, 73.31);
    path_1.cubicTo(260.62, 73.57, 260.48, 73.13, 260.27, 73.05);
    path_1.cubicTo(260.1, 72.84, 260.06, 72.64, 260.27, 72.5);
    path_1.lineTo(260.27, 72.51);
    path_1.close();
    path_1.moveTo(227.68, 32.51);
    path_1.cubicTo(227.88, 32.37, 228.11, 32.21, 228.4, 32.45);
    path_1.cubicTo(228.65, 32.65, 228.59, 32.84, 228.35, 32.94);
    path_1.cubicTo(228.14, 33.03, 227.9, 33.09, 227.7, 33.15);
    path_1.cubicTo(227.48, 32.83, 227.48, 32.64, 227.68, 32.5);
    path_1.lineTo(227.68, 32.51);
    path_1.close();
    path_1.moveTo(259.34, 65.67);
    path_1.cubicTo(259.46, 65.71, 259.55, 65.94, 259.65, 66.09);
    path_1.cubicTo(259.4, 66.2, 259.15, 66.31, 258.77, 66.48);
    path_1.cubicTo(258.8, 65.87, 258.86, 65.53, 259.34, 65.67);
    path_1.close();
    path_1.moveTo(264.38, 48.07);
    path_1.cubicTo(264.18, 47.85, 264.14, 47.62, 264.39, 47.56);
    path_1.cubicTo(264.51, 47.53, 264.75, 47.64, 264.87, 47.76);
    path_1.cubicTo(265.03, 47.91, 264.98, 48.09, 264.86, 48.21);
    path_1.cubicTo(264.7, 48.3, 264.53, 48.24, 264.38, 48.08);
    path_1.lineTo(264.38, 48.07);
    path_1.close();
    path_1.moveTo(185.16, 10.23);
    path_1.cubicTo(184.84, 10.14, 184.68, 9.95001, 184.69, 9.68001);
    path_1.cubicTo(184.69, 9.50001, 184.76, 9.36001, 185.03, 9.43001);
    path_1.cubicTo(185.36, 9.52001, 185.47, 9.73, 185.51, 9.92);
    path_1.cubicTo(185.45, 10.13, 185.45, 10.31, 185.16, 10.23);
    path_1.close();
    path_1.moveTo(238.76, 46.87);
    path_1.cubicTo(238.45, 47.21, 238.16, 47.14, 237.65, 46.78);
    path_1.cubicTo(238.07, 46.5, 238.37, 46.55, 238.76, 46.87);
    path_1.close();
    path_1.moveTo(223.06, 28.04);
    path_1.cubicTo(222.97, 27.99, 222.88, 27.8, 222.91, 27.73);
    path_1.cubicTo(222.99, 27.54, 223.18, 27.41, 223.45, 27.5);
    path_1.cubicTo(223.69, 27.58, 223.66, 27.77, 223.63, 27.92);
    path_1.cubicTo(223.51, 28.13, 223.3, 28.19, 223.05, 28.05);
    path_1.lineTo(223.06, 28.04);
    path_1.close();
    path_1.moveTo(216.63, 35.87);
    path_1.cubicTo(216.45, 35.78, 216.35, 35.62, 216.45, 35.47);
    path_1.cubicTo(216.5, 35.4, 216.68, 35.37, 216.78, 35.4);
    path_1.cubicTo(216.96, 35.45, 217.06, 35.6, 217.04, 35.78);
    path_1.cubicTo(216.96, 35.95, 216.8, 35.96, 216.63, 35.87);
    path_1.close();
    path_1.moveTo(299.99, 126.15);
    path_1.cubicTo(300.16, 126.08, 300.29, 126.23, 300.31, 126.44);
    path_1.cubicTo(300.32, 126.56, 300.29, 126.74, 300.22, 126.79);
    path_1.cubicTo(300.07, 126.91, 299.93, 126.82, 299.85, 126.6);
    path_1.cubicTo(299.8, 126.39, 299.83, 126.2, 299.99, 126.14);
    path_1.lineTo(299.99, 126.15);
    path_1.close();
    path_1.moveTo(284.65, 103.47);
    path_1.cubicTo(285.05, 103.33, 285.34, 103.36, 285.7, 103.66);
    path_1.cubicTo(285.33, 104.16, 285.05, 103.89, 284.65, 103.47);
    path_1.close();
    path_1.moveTo(292.82, 130.6);
    path_1.cubicTo(292.7, 130.55, 292.57, 130.37, 292.54, 130.22);
    path_1.cubicTo(292.49, 129.97, 292.67, 129.94, 292.83, 129.94);
    path_1.cubicTo(293.01, 129.94, 293.11, 130.07, 293.1, 130.32);
    path_1.cubicTo(293.08, 130.48, 293, 130.67, 292.83, 130.6);
    path_1.lineTo(292.82, 130.6);
    path_1.close();
    path_1.moveTo(297.52, 146.2);
    path_1.cubicTo(297.52, 146.15, 297.74, 146.08, 297.8, 146.12);
    path_1.cubicTo(297.95, 146.25, 298.13, 146.42, 298.06, 146.69);
    path_1.cubicTo(298.04, 146.77, 297.89, 146.78, 297.82, 146.82);
    path_1.cubicTo(297.61, 146.64, 297.49, 146.45, 297.53, 146.2);
    path_1.lineTo(297.52, 146.2);
    path_1.close();
    path_1.moveTo(290.47, 96.68);
    path_1.cubicTo(289.91, 96.26, 289.67, 95.85, 289.7, 95.08);
    path_1.cubicTo(290.08, 95.6, 290.44, 95.94, 290.47, 96.68);
    path_1.close();
    path_1.moveTo(287.06, 102.93);
    path_1.cubicTo(287.06, 102.77, 287.09, 102.49, 287.16, 102.47);
    path_1.cubicTo(287.38, 102.42, 287.5, 102.66, 287.58, 102.89);
    path_1.cubicTo(287.67, 103.16, 287.62, 103.33, 287.37, 103.38);
    path_1.cubicTo(287.07, 103.4, 287.05, 103.14, 287.05, 102.92);
    path_1.lineTo(287.06, 102.93);
    path_1.close();
    path_1.moveTo(240.43, 44.28);
    path_1.cubicTo(241.06, 44.46, 241.18, 44.88, 241.29, 45.29);
    path_1.cubicTo(240.89, 45.08, 240.55, 44.84, 240.43, 44.28);
    path_1.close();
    path_1.moveTo(233.3, 28.41);
    path_1.cubicTo(232.64, 28.55, 232.55, 28.05, 232.38, 27.66);
    path_1.cubicTo(232.67, 27.9, 232.97, 28.14, 233.3, 28.41);
    path_1.close();
    path_1.moveTo(231.5, 25.47);
    path_1.cubicTo(231.01, 25.47, 230.64, 25.22, 230.1, 24.91);
    path_1.cubicTo(230.76, 24.85, 231.14, 25.07, 231.5, 25.47);
    path_1.close();
    path_1.moveTo(249.42, 61.7);
    path_1.cubicTo(249.24, 61.89, 249.03, 61.72, 248.87, 61.55);
    path_1.cubicTo(248.74, 61.42, 248.61, 61.26, 248.8, 61.12);
    path_1.cubicTo(248.96, 61.01, 249.11, 61.14, 249.25, 61.27);
    path_1.cubicTo(249.37, 61.4, 249.56, 61.56, 249.43, 61.69);
    path_1.lineTo(249.42, 61.7);
    path_1.close();
    path_1.moveTo(183.1, 22.2);
    path_1.cubicTo(182.83, 22.12, 183.01, 21.94, 183.02, 21.8);
    path_1.cubicTo(183.04, 21.57, 183.21, 21.56, 183.41, 21.65);
    path_1.cubicTo(183.59, 21.73, 183.71, 21.85, 183.69, 22.03);
    path_1.cubicTo(183.54, 22.2, 183.32, 22.27, 183.1, 22.2);
    path_1.close();
    path_1.moveTo(275.61, 76.91);
    path_1.cubicTo(275.53, 76.77, 275.61, 76.64, 275.74, 76.69);
    path_1.cubicTo(275.84, 76.72, 275.95, 76.84, 276.03, 76.95);
    path_1.cubicTo(276.12, 77.07, 276.14, 77.21, 275.92, 77.27);
    path_1.cubicTo(275.83, 77.17, 275.69, 77.06, 275.61, 76.92);
    path_1.lineTo(275.61, 76.91);
    path_1.close();
    path_1.moveTo(197.32, 16.9);
    path_1.cubicTo(197.43, 17.01, 197.56, 17.18, 197.54, 17.3);
    path_1.cubicTo(197.5, 17.54, 197.32, 17.46, 197.15, 17.32);
    path_1.cubicTo(197.01, 17.21, 196.86, 17.1, 196.5, 16.82);
    path_1.cubicTo(197.08, 16.87, 197.26, 16.85, 197.31, 16.9);
    path_1.lineTo(197.32, 16.9);
    path_1.close();
    path_1.moveTo(291.24, 108.81);
    path_1.cubicTo(290.77, 108.64, 290.77, 108.21, 290.66, 107.74);
    path_1.cubicTo(291.01, 108.05, 291.32, 108.29, 291.24, 108.81);
    path_1.close();
    path_1.moveTo(294.59, 106.38);
    path_1.cubicTo(294.47, 106.2, 294.49, 105.96, 294.69, 105.97);
    path_1.cubicTo(294.79, 105.97, 294.92, 106.21, 295.03, 106.36);
    path_1.cubicTo(295.11, 106.47, 295.21, 106.62, 294.95, 106.69);
    path_1.cubicTo(294.85, 106.61, 294.68, 106.52, 294.59, 106.38);
    path_1.close();
    path_1.moveTo(298.71, 137.57);
    path_1.cubicTo(298.36, 137.24, 298.24, 136.88, 298.71, 136.49);
    path_1.lineTo(298.71, 137.57);
    path_1.close();
    path_1.moveTo(299.3, 107.3);
    path_1.cubicTo(299.26, 107.38, 299.22, 107.45, 299.22, 107.45);
    path_1.cubicTo(298.85, 107.15, 298.87, 106.69, 298.92, 106.2);
    path_1.cubicTo(299.05, 106.57, 299.18, 106.95, 299.31, 107.29);
    path_1.lineTo(299.3, 107.3);
    path_1.close();
    path_1.moveTo(173.81, 18.59);
    path_1.cubicTo(173.7, 18.24, 174.01, 18.28, 174.29, 18.47);
    path_1.cubicTo(174.39, 18.54, 174.54, 18.55, 174.8, 18.64);
    path_1.cubicTo(174.32, 18.82, 173.9, 18.89, 173.81, 18.59);
    path_1.close();
    path_1.moveTo(212.42, 29.69);
    path_1.cubicTo(212.15, 29.94, 211.95, 29.71, 211.94, 29.39);
    path_1.cubicTo(211.94, 29.27, 211.94, 29.15, 211.95, 28.83);
    path_1.cubicTo(212.32, 29.19, 212.67, 29.45, 212.42, 29.69);
    path_1.close();
    path_1.moveTo(249.46, 53.65);
    path_1.cubicTo(249.5, 53.16, 249.79, 53.54, 249.96, 53.71);
    path_1.cubicTo(250.06, 53.81, 250.13, 53.93, 250.29, 54.15);
    path_1.cubicTo(249.81, 54.13, 249.44, 53.95, 249.46, 53.64);
    path_1.lineTo(249.46, 53.65);
    path_1.close();
    path_1.moveTo(285.66, 106.51);
    path_1.cubicTo(285.63, 106.45, 285.62, 106.32, 285.66, 106.27);
    path_1.cubicTo(285.75, 106.15, 285.87, 106.21, 285.92, 106.34);
    path_1.cubicTo(285.96, 106.45, 285.94, 106.58, 285.96, 106.81);
    path_1.cubicTo(285.81, 106.66, 285.71, 106.6, 285.66, 106.51);
    path_1.close();
    path_1.moveTo(277.09, 73.91);
    path_1.cubicTo(277.02, 73.8, 276.95, 73.6, 277.12, 73.63);
    path_1.cubicTo(277.25, 73.66, 277.4, 73.85, 277.51, 73.99);
    path_1.cubicTo(277.6, 74.1, 277.65, 74.25, 277.4, 74.28);
    path_1.cubicTo(277.31, 74.18, 277.18, 74.05, 277.09, 73.9);
    path_1.lineTo(277.09, 73.91);
    path_1.close();
    path_1.moveTo(264.44, 77.66);
    path_1.cubicTo(264.35, 77.5, 264.52, 77.49, 264.63, 77.5);
    path_1.cubicTo(264.74, 77.5, 264.91, 77.49, 264.97, 77.56);
    path_1.cubicTo(265.08, 77.69, 264.97, 77.77, 264.78, 77.83);
    path_1.cubicTo(264.71, 77.8, 264.51, 77.77, 264.45, 77.66);
    path_1.lineTo(264.44, 77.66);
    path_1.close();
    path_1.moveTo(242.24, 49.57);
    path_1.cubicTo(242.17, 49.46, 241.88, 49.33, 242.17, 49.23);
    path_1.cubicTo(242.25, 49.2, 242.43, 49.28, 242.5, 49.36);
    path_1.cubicTo(242.57, 49.43, 242.55, 49.57, 242.56, 49.66);
    path_1.cubicTo(242.4, 49.78, 242.3, 49.68, 242.24, 49.57);
    path_1.close();
    path_1.moveTo(234.58, 43.27);
    path_1.cubicTo(234.52, 43.2, 234.5, 42.99, 234.55, 42.96);
    path_1.cubicTo(234.73, 42.85, 234.88, 43.01, 234.97, 43.17);
    path_1.cubicTo(235.03, 43.27, 235.04, 43.4, 235.1, 43.64);
    path_1.cubicTo(234.85, 43.48, 234.68, 43.4, 234.57, 43.28);
    path_1.lineTo(234.58, 43.27);
    path_1.close();
    path_1.moveTo(184.3, 16.88);
    path_1.cubicTo(184.3, 16.88, 184.38, 16.74, 184.44, 16.73);
    path_1.cubicTo(184.79, 16.72, 184.9, 16.97, 185.21, 17.27);
    path_1.cubicTo(184.72, 17.15, 184.4, 17.18, 184.3, 16.88);
    path_1.close();
    path_1.moveTo(300.44, 120.13);
    path_1.cubicTo(300.51, 119.71, 300.79, 119.74, 301.19, 119.71);
    path_1.cubicTo(300.96, 120.16, 300.73, 120.2, 300.44, 120.13);
    path_1.close();
    path_1.moveTo(299.18, 121.61);
    path_1.cubicTo(299.15, 121.44, 299.17, 121.26, 299.17, 121.08);
    path_1.cubicTo(299.26, 121.16, 299.37, 121.22, 299.43, 121.32);
    path_1.cubicTo(299.53, 121.49, 299.54, 121.68, 299.4, 121.82);
    path_1.cubicTo(299.23, 121.93, 299.2, 121.73, 299.18, 121.61);
    path_1.close();
    path_1.moveTo(286.94, 97.92);
    path_1.cubicTo(286.94, 97.79, 286.94, 97.58, 287, 97.56);
    path_1.cubicTo(287.15, 97.52, 287.35, 97.57, 287.38, 97.81);
    path_1.cubicTo(287.4, 97.98, 287.33, 98.15, 287.3, 98.32);
    path_1.cubicTo(287.09, 98.24, 286.92, 98.17, 286.93, 97.92);
    path_1.lineTo(286.94, 97.92);
    path_1.close();

    Paint paint1Fill = Paint()..style = PaintingStyle.fill;
    paint1Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_1, paint1Fill);

    Path path_2 = Path();
    path_2.moveTo(39.39, 86.02);
    path_2.cubicTo(40.02, 85.57, 40.85, 85.42, 41.19, 84.5);
    path_2.cubicTo(41.32, 84.14, 41.8, 83.97, 42.07, 84.18);
    path_2.cubicTo(42.65, 84.64, 43.07, 85.33, 43.88, 85.47);
    path_2.cubicTo(43.94, 85.48, 43.96, 85.69, 44, 85.8);
    path_2.cubicTo(43.33, 86.09, 43.31, 86.44, 43.8, 86.83);
    path_2.lineTo(42.51, 88.39);
    path_2.lineTo(42.51, 88.36);
    path_2.cubicTo(42.95, 89.09, 43.43, 88.96, 43.98, 88.28);
    path_2.cubicTo(44.87, 87.18, 45.38, 85.89, 45.93, 84.63);
    path_2.cubicTo(46.24, 83.96, 46.44, 83.51, 47.26, 83.5);
    path_2.cubicTo(47.95, 83.5, 48.57, 82.63, 48.32, 82.27);
    path_2.cubicTo(47.34, 80.86, 48.37, 80.03, 49.2, 79.04);
    path_2.cubicTo(49.42, 78.8, 49.46, 78.39, 49.61, 78.07);
    path_2.cubicTo(50.19, 76.78, 51.16, 75.77, 52.11, 74.71);
    path_2.cubicTo(51.28, 75.53, 51.46, 76.49, 51.36, 77.39);
    path_2.lineTo(51.36, 77.37);
    path_2.cubicTo(51.72, 77.52, 52.08, 76.98, 52.44, 77.22);
    path_2.cubicTo(53.03, 77.62, 53.39, 77.23, 53.63, 76.72);
    path_2.cubicTo(53.9, 76.15, 54.41, 75.89, 54.8, 75.49);
    path_2.cubicTo(55.8, 74.56, 56.97, 73.75, 56.6, 72.13);
    path_2.cubicTo(56.5, 71.67, 56.92, 71.25, 57.35, 70.96);
    path_2.cubicTo(57.92, 70.57, 58.55, 70.19, 57.39, 69.88);
    path_2.cubicTo(56.97, 69.77, 56.98, 69.42, 57.43, 69.14);
    path_2.cubicTo(57.94, 68.83, 58.83, 68.52, 58.56, 67.92);
    path_2.cubicTo(58.31, 67.34, 57.49, 68.02, 56.91, 68.08);
    path_2.cubicTo(56.66, 68.11, 56.37, 68.17, 56.15, 68.3);
    path_2.cubicTo(55.35, 68.8, 54.89, 68.51, 54.61, 67.91);
    path_2.cubicTo(56.03, 66.65, 57.76, 65.98, 58.55, 63.93);
    path_2.cubicTo(58.9, 63.04, 59.06, 61.93, 59.86, 61.16);
    path_2.cubicTo(60.43, 60.58, 60.96, 59.96, 61.52, 59.35);
    path_2.cubicTo(62.2, 61.02, 62.77, 60.79, 64.42, 60.21);
    path_2.cubicTo(64.6, 60.15, 64.67, 60.12, 64.74, 59.9);
    path_2.cubicTo(65.13, 58.75, 65.14, 57.8, 64.25, 57);
    path_2.cubicTo(64.8834, 57.24, 65.26, 57.5233, 65.38, 57.85);
    path_2.cubicTo(65.78, 58.9, 66.36, 58.95, 67.21, 57.99);
    path_2.cubicTo(68.1, 56.99, 69.23, 56.15, 69.55, 54.75);
    path_2.cubicTo(69.62, 54.43, 70.04, 54.17, 70.28, 54.24);
    path_2.cubicTo(71.18, 54.5, 72.2, 54.24, 73.02, 54.53);
    path_2.cubicTo(74.2, 54.94, 74.75, 54.8, 74.92, 53.56);
    path_2.cubicTo(75.02, 52.85, 75.25, 52.59, 75.92, 52.45);
    path_2.cubicTo(76.32, 52.36, 77.02, 52.13, 76.67, 51.66);
    path_2.cubicTo(75.97, 50.72, 76.54, 50.06, 77.23, 49.35);
    path_2.cubicTo(77.65, 48.92, 77.78, 48.42, 77.75, 47.92);
    path_2.cubicTo(77.68, 46.82, 78.36, 46.4, 79.34, 46.22);
    path_2.cubicTo(79.77, 46.14, 80.23, 46.13, 80.66, 46.02);
    path_2.cubicTo(80.95, 45.95, 81.32, 45.8, 80.99, 45.42);
    path_2.cubicTo(80.39, 44.71, 78.63, 44.24, 77.75, 44.58);
    path_2.cubicTo(76.67, 44.97, 75.29, 43.77, 75.95, 42.83);
    path_2.cubicTo(76.87, 41.5, 76.39, 40.43, 76.6, 39.25);
    path_2.lineTo(76.62, 39.25);
    path_2.cubicTo(75.98, 39.3, 75.46, 39.66, 74.93, 40.01);
    path_2.cubicTo(74.51, 40.28, 74.02, 40.81, 73.58, 40.42);
    path_2.cubicTo(73.2, 40.08, 72.94, 39.59, 73.4, 38.95);
    path_2.lineTo(73.4, 38.98);
    path_2.cubicTo(72.22, 38.05, 70.7, 37.45, 69.92, 36.1);
    path_2.cubicTo(71.18, 35.61, 71.46, 35.36, 71.67, 34.65);
    path_2.cubicTo(71.91, 33.87, 71.11, 33.89, 70.77, 33.57);
    path_2.cubicTo(70.58, 33.38, 70.18, 33.34, 70.35, 32.93);
    path_2.cubicTo(70.51, 32.53, 70.88, 32.55, 71.23, 32.5);
    path_2.cubicTo(72.01, 32.39, 72.37, 31.82, 72.57, 31.25);
    path_2.cubicTo(72.74, 30.77, 73.05, 30.14, 72.15, 30.1);
    path_2.cubicTo(71.81, 30.08, 71.94, 29.83, 72.08, 29.61);
    path_2.cubicTo(72.31, 29.24, 72.41, 28.85, 71.98, 28.75);
    path_2.cubicTo(71.48, 28.64, 71.36, 29.18, 71.09, 29.45);
    path_2.cubicTo(70.58, 29.95, 70.33, 30.75, 69.43, 30);
    path_2.cubicTo(68.97, 29.6, 67.97, 30.11, 67.87, 31.02);
    path_2.cubicTo(67.81, 31.51, 67.75, 31.71, 67.17, 32.06);
    path_2.cubicTo(66.08, 32.71, 66.05, 33.55, 67, 34.02);
    path_2.cubicTo(67.47, 34.25, 67.93, 34.41, 67.73, 35.1);
    path_2.cubicTo(67.64, 35.41, 67.88, 35.54, 68.16, 35.61);
    path_2.cubicTo(68.52, 35.69, 69.14, 35.56, 68.96, 36.13);
    path_2.cubicTo(68.81, 36.62, 68.24, 36.53, 67.84, 36.69);
    path_2.cubicTo(66.89, 37.09, 66.21, 37.11, 65.81, 36.29);
    path_2.cubicTo(65.62, 35.91, 65.2, 35.67, 64.87, 35.37);
    path_2.cubicTo(63.82, 34.42, 62.7, 34.71, 61.77, 36.14);
    path_2.cubicTo(61.46, 36.61, 61.44, 37.62, 60.21, 37.3);
    path_2.cubicTo(59.82, 37.2, 59.5, 38.67, 58.67, 39.13);
    path_2.cubicTo(58.42, 39.27, 58.37, 39.02, 58.25, 39.02);
    path_2.cubicTo(57.64, 39.02, 56.78, 39.32, 56.8, 39.86);
    path_2.cubicTo(56.8, 40.56, 55.8, 42.52, 58.07, 41.35);
    path_2.cubicTo(58.15, 41.31, 58.25, 41.34, 58.34, 41.33);
    path_2.cubicTo(59.1, 41.31, 59.09, 41.92, 58.98, 42.44);
    path_2.cubicTo(58.82, 43.22, 58.39, 42.8, 58.06, 42.75);
    path_2.cubicTo(57.64, 42.68, 57.28, 42.86, 57.18, 43.31);
    path_2.cubicTo(57.08, 43.78, 57.56, 43.57, 57.8, 43.66);
    path_2.cubicTo(58.82, 44.04, 60.6, 43.74, 59.84, 45.79);
    path_2.cubicTo(59.74, 46.06, 59.95, 46.18, 60.21, 46.14);
    path_2.cubicTo(61.2, 46.01, 60.97, 46.69, 60.53, 47.07);
    path_2.cubicTo(59.87, 47.64, 59.77, 48.21, 59.81, 48.82);
    path_2.cubicTo(59.84, 49.29, 59.61, 49.58, 59.2, 49.83);
    path_2.cubicTo(58.75, 50.11, 58.5, 49.93, 58.35, 49.61);
    path_2.cubicTo(58.15, 49.21, 57.77, 49.35, 57.42, 49.51);
    path_2.cubicTo(57.08, 49.66, 56.86, 49.91, 56.87, 50.28);
    path_2.cubicTo(56.91, 52.67, 54.75, 53.59, 53.27, 54.95);
    path_2.cubicTo(52.85, 55.33, 51.98, 55.16, 51.83, 54.83);
    path_2.cubicTo(51.61, 54.35, 52.36, 54.22, 52.75, 53.97);
    path_2.cubicTo(53.5, 53.49, 54.13, 52.88, 54.65, 52.14);
    path_2.cubicTo(55.26, 51.28, 55.84, 50.39, 56.49, 49.54);
    path_2.cubicTo(57.17, 48.73, 57.93, 47.98, 58.85, 47.36);
    path_2.cubicTo(58.95, 47.3, 59.06, 47.08, 59.04, 47.02);
    path_2.cubicTo(58.97, 46.89, 58.79, 46.71, 58.71, 46.74);
    path_2.cubicTo(57.77, 47.19, 56.63, 46.76, 55.85, 47.87);
    path_2.cubicTo(55.53, 48.32, 55.13, 48.3, 54.73, 48.46);
    path_2.cubicTo(52.81, 49.21, 51, 50.3, 49.43, 51.84);
    path_2.cubicTo(48.98, 52.28, 48.55, 52.87, 48, 52.6);
    path_2.cubicTo(47.49, 52.35, 47.68, 51.8, 47.98, 51.17);
    path_2.cubicTo(48.34, 50.45, 48.54, 49.74, 47.26, 49.94);
    path_2.cubicTo(45.9, 50.18, 45.01, 51.09, 44.12, 52.1);
    path_2.cubicTo(43.82, 52.44, 43.64, 52.83, 43.1, 52.92);
    path_2.cubicTo(41.72, 53.16, 40.67, 54.86, 39.22, 54.85);
    path_2.cubicTo(39.13, 54.85, 38.95, 55.15, 38.83, 55.33);
    path_2.cubicTo(38.51, 55.82, 38.15, 56.27, 37.68, 56.63);
    path_2.cubicTo(37.04, 57.11, 36.81, 57.66, 37.03, 58.28);
    path_2.cubicTo(37.33, 59.1, 36.89, 59.59, 36.04, 59.93);
    path_2.cubicTo(35.28, 60.26, 34.51, 60.59, 34.22, 61.61);
    path_2.cubicTo(36.04, 61.52, 36.2, 61.83, 35.43, 63.77);
    path_2.cubicTo(35.16, 64.46, 35.29, 64.99, 35.57, 65.44);
    path_2.cubicTo(35.75, 65.73, 36.09, 65.62, 36.4, 65.35);
    path_2.cubicTo(36.92, 64.88, 37.31, 64.36, 37.13, 63.69);
    path_2.cubicTo(37.02, 63.27, 37.07, 62.9, 37.55, 62.56);
    path_2.cubicTo(38.09, 62.15, 40.68, 61.91, 40.99, 62.33);
    path_2.cubicTo(41.48, 62.98, 42.67, 62.61, 42.94, 63.61);
    path_2.cubicTo(43.02, 63.91, 43.57, 63.65, 43.99, 63.35);
    path_2.cubicTo(45.24, 62.46, 45.97, 60.9, 47.44, 60.32);
    path_2.cubicTo(47.95, 60.14, 48, 59.57, 48.13, 59.12);
    path_2.cubicTo(48.26, 58.67, 48.2, 57.89, 48.91, 58.06);
    path_2.cubicTo(49.47, 58.19, 50.63, 58.24, 49.97, 59.4);
    path_2.cubicTo(49.26, 60.67, 48.78, 61.75, 49.75, 62.75);
    path_2.cubicTo(49.97, 62.98, 49.75, 63.33, 49.56, 63.63);
    path_2.cubicTo(49.31, 64.02, 49.5, 64.22, 49.77, 64.37);
    path_2.cubicTo(50.02, 64.5, 50.24, 64.4, 50.46, 64.14);
    path_2.cubicTo(50.9, 63.58, 51.38, 63.06, 51.88, 62.56);
    path_2.cubicTo(52.38, 62.05, 52.77, 60.76, 53.55, 62.05);
    path_2.cubicTo(53.71, 62.32, 54.11, 62.05, 54.38, 61.83);
    path_2.cubicTo(54.74, 61.54, 55.01, 61.12, 55.61, 60.97);
    path_2.cubicTo(55.24, 62.08, 56.08, 62.37, 56.62, 62.86);
    path_2.cubicTo(56.73, 62.96, 57.16, 62.8, 56.88, 63.17);
    path_2.cubicTo(56.16, 64.12, 56.33, 65.37, 55.23, 66.24);
    path_2.cubicTo(54.42, 66.87, 54.09, 67.17, 53.84, 66.1);
    path_2.cubicTo(53.79, 65.85, 53.8, 65.56, 53.49, 65.52);
    path_2.cubicTo(53.09, 65.47, 52.96, 65.84, 52.84, 66.12);
    path_2.cubicTo(52.06, 67.9, 50.75, 68.92, 48.98, 69.46);
    path_2.cubicTo(48.48, 69.61, 48.05, 69.98, 48.4, 70.43);
    path_2.cubicTo(48.83, 71, 48.43, 71.47, 48.28, 72.02);
    path_2.cubicTo(48.04, 72.94, 47.19, 74.16, 47.73, 74.71);
    path_2.cubicTo(48.73, 75.73, 48.02, 76.6, 47.69, 77.63);
    path_2.cubicTo(47.36, 78.78, 46.6, 78.28, 46.1, 78.32);
    path_2.cubicTo(45.65, 78.36, 45.88, 77.69, 45.95, 77.29);
    path_2.cubicTo(46.06, 76.55, 46.09, 75.88, 45.85, 75.2);
    path_2.cubicTo(45.32, 75.55, 44.65, 75.63, 44.43, 76.28);
    path_2.cubicTo(44.25, 76.8, 43.81, 76.69, 43.6, 76.74);
    path_2.cubicTo(43.24, 76.82, 43.34, 76.32, 43.4, 76.04);
    path_2.cubicTo(43.52, 75.45, 43.33, 75.27, 42.82, 75.5);
    path_2.cubicTo(41.38, 76.12, 41.61, 75.28, 41.96, 74.3);
    path_2.cubicTo(42.11, 73.85, 42.34, 73.41, 42.42, 72.97);
    path_2.cubicTo(42.5, 72.5, 42.32, 71.92, 41.78, 72.18);
    path_2.cubicTo(40.74, 72.66, 39.56, 73.18, 39.17, 74.44);
    path_2.cubicTo(38.84, 75.54, 38.21, 76, 37.33, 76.45);
    path_2.cubicTo(36.36, 76.95, 36.24, 76.52, 36.41, 75.71);
    path_2.cubicTo(36.56, 75.02, 36.8, 74.32, 36.7, 73.64);
    path_2.cubicTo(36.58, 72.78, 36.16, 72.35, 35.31, 73.07);
    path_2.cubicTo(34.34, 73.89, 33.82, 73.63, 33.4, 72.71);
    path_2.cubicTo(33.28, 73.36, 31.57, 74.15, 33.29, 74.45);
    path_2.cubicTo(33.52, 74.49, 33.53, 74.78, 33.42, 75.02);
    path_2.cubicTo(33.28, 75.32, 33.15, 75.53, 32.75, 75.65);
    path_2.cubicTo(32.08, 75.87, 31.77, 75.52, 31.36, 75.21);
    path_2.cubicTo(31.17, 75.07, 30.4, 76.07, 30.62, 74.99);
    path_2.cubicTo(30.7, 74.52, 30.75, 73.74, 31.58, 73.71);
    path_2.cubicTo(31.84, 73.7, 32.17, 73.58, 32.21, 73.23);
    path_2.cubicTo(32.23, 73.04, 32.07, 72.84, 31.93, 72.71);
    path_2.cubicTo(31.69, 72.48, 31.28, 72.52, 31.11, 72.85);
    path_2.cubicTo(30.43, 74.17, 29.31, 73.65, 28.49, 74.3);
    path_2.cubicTo(28.34, 74.42, 27.89, 74.24, 27.76, 74.04);
    path_2.cubicTo(27.54, 73.68, 27.93, 73.49, 28.21, 73.26);
    path_2.cubicTo(28.76, 72.77, 29.33, 72.26, 29.91, 71.78);
    path_2.cubicTo(30.38, 71.4, 30.32, 70.98, 30.13, 70.71);
    path_2.cubicTo(29.96, 70.48, 29.93, 69.83, 29.3, 70.31);
    path_2.cubicTo(28.26, 71.13, 27.14, 71, 25.82, 71.61);
    path_2.cubicTo(26.75, 70.31, 26.3, 69.97, 25.57, 69.95);
    path_2.cubicTo(24.92, 69.94, 24.27, 69.85, 23.89, 71.2);
    path_2.cubicTo(23.42, 72.84, 23.33, 74.28, 23.54, 75.71);
    path_2.cubicTo(23.59, 76.01, 23.59, 76.44, 23.43, 76.71);
    path_2.cubicTo(22.26, 78.72, 23.64, 79.9, 23.88, 81.4);
    path_2.cubicTo(23.95, 81.82, 23.95, 82.45, 24.39, 82.78);
    path_2.cubicTo(25.94, 83.94, 26.01, 85.49, 24.56, 87.5);
    path_2.cubicTo(24.16, 88.1, 23.51, 88.96, 22.83, 88.24);
    path_2.cubicTo(22.51, 87.9, 22.38, 87.48, 23.03, 86.81);
    path_2.cubicTo(24.53, 85.35, 24.53, 84.78, 23.22, 83.86);
    path_2.cubicTo(22.99, 83.7, 22.68, 83.63, 22.77, 83.19);
    path_2.cubicTo(22.89, 82.63, 23.01, 82.07, 22.46, 81.88);
    path_2.cubicTo(22.33, 81.84, 22.05, 81.88, 21.99, 81.99);
    path_2.cubicTo(21.64, 82.59, 22.03, 82.98, 22.08, 83.47);
    path_2.cubicTo(22.08, 83.52, 22.1, 83.56, 22.11, 83.6);
    path_2.cubicTo(22.38, 84.31, 22.56, 84.89, 21.38, 85.05);
    path_2.cubicTo(21.03, 85.09, 20.34, 85.49, 20.4, 86.17);
    path_2.cubicTo(20.45, 86.72, 20.26, 87.54, 21.01, 87.59);
    path_2.cubicTo(21.64, 87.64, 21.95, 88.19, 22.24, 88.67);
    path_2.cubicTo(22.63, 89.32, 22.03, 90.55, 21.37, 90.41);
    path_2.cubicTo(20.44, 90.23, 20.37, 90.92, 20.14, 91.55);
    path_2.cubicTo(19.69, 92.68, 19.08, 93.83, 18.36, 94.61);
    path_2.cubicTo(17.53, 95.51, 17.07, 96.62, 16.64, 97.72);
    path_2.cubicTo(16.42, 98.27, 16.2, 98.82, 15.96, 99.35);
    path_2.cubicTo(15.73, 99.89, 15.45, 100.4, 15.09, 100.87);
    path_2.cubicTo(14.99, 101, 15, 101.4, 15.09, 101.58);
    path_2.cubicTo(15.45, 102.33, 15.16, 102.6, 14.5, 102.77);
    path_2.cubicTo(14.09, 102.88, 13.68, 103.13, 13.21, 103.35);
    path_2.cubicTo(13.44, 102.76, 13.63, 102.33, 13.76, 101.89);
    path_2.cubicTo(13.87, 101.51, 13.82, 101.16, 13.47, 101.1);
    path_2.cubicTo(13.18, 101.05, 13, 101.33, 12.88, 101.64);
    path_2.cubicTo(12.4, 102.96, 11.83, 104.22, 11.08, 105.4);
    path_2.cubicTo(10.92, 105.68, 10.86, 106, 11, 106.27);
    path_2.cubicTo(11.15, 106.54, 11.42, 106.58, 11.65, 106.42);
    path_2.cubicTo(13.22, 105.33, 14.89, 105.37, 16.49, 105.36);
    path_2.cubicTo(16.7, 105.36, 17.19, 105.2, 17.03, 105.06);
    path_2.cubicTo(16.21, 104.36, 17.26, 104.45, 17.37, 104.21);
    path_2.cubicTo(17.78, 103.31, 18.65, 104.07, 19.15, 103.28);
    path_2.cubicTo(19.48, 102.75, 19.96, 101.96, 20.42, 102.66);
    path_2.cubicTo(20.75, 103.16, 20.86, 103.97, 20.1, 104.72);
    path_2.cubicTo(19.41, 105.4, 19.13, 106.46, 18.94, 107.4);
    path_2.cubicTo(18.77, 108.12, 18.9, 108.93, 19.08, 109.62);
    path_2.cubicTo(19.22, 110.17, 19.78, 109.83, 20.17, 109.84);
    path_2.cubicTo(20.6, 109.86, 20.74, 110.11, 20.52, 110.6);
    path_2.cubicTo(20.24, 111.22, 19.97, 111.85, 19.65, 112.44);
    path_2.cubicTo(19.18, 113.29, 18.25, 114.08, 18.8, 115.13);
    path_2.cubicTo(19.27, 116.02, 20.08, 115.38, 20.79, 115.19);
    path_2.cubicTo(21.15, 115.09, 21.53, 115.19, 21.71, 115.61);
    path_2.cubicTo(21.91, 116.06, 21.53, 116.25, 21.35, 116.56);
    path_2.cubicTo(20.91, 117.31, 20.3, 117.82, 19.69, 118.35);
    path_2.cubicTo(18.49, 119.39, 18.5, 120.24, 19.72, 120.92);
    path_2.cubicTo(20, 121.08, 20.37, 121.19, 20.31, 121.65);
    path_2.cubicTo(20.25, 122.09, 19.96, 122.57, 19.6, 122.59);
    path_2.cubicTo(18.74, 122.64, 18.34, 123.23, 18.13, 124.07);
    path_2.cubicTo(18.02, 124.49, 17.84, 124.49, 17.59, 124.45);
    path_2.cubicTo(17.31, 124.4, 17.05, 124.33, 17.12, 123.84);
    path_2.cubicTo(17.21, 123.27, 17.28, 122.66, 17.25, 122.11);
    path_2.cubicTo(17.18, 121.15, 17.19, 119.91, 16.26, 119.7);
    path_2.cubicTo(15.41, 119.51, 14.88, 120.47, 14.32, 121.36);
    path_2.cubicTo(13.53, 122.7, 13.18, 124.16, 12.81, 125.66);
    path_2.cubicTo(12.72, 126.05, 12.75, 126.57, 12.15, 126.83);
    path_2.cubicTo(11.99, 125.37, 12.23, 123.92, 12.42, 122.51);
    path_2.cubicTo(12.57, 121.21, 12.07, 120.21, 11.16, 120.74);
    path_2.cubicTo(10.05, 121.41, 8.92005, 122.25, 8.76005, 124.07);
    path_2.cubicTo(9.13005, 124.87, 9.34005, 125.73, 9.39005, 126.73);
    path_2.cubicTo(8.15005, 126.31, 8.10004, 126.04, 8.78004, 124.05);
    path_2.cubicTo(8.53004, 124.05, 8.23005, 124.05, 8.14005, 124.39);
    path_2.cubicTo(7.75005, 125.9, 6.72004, 126.89, 5.98004, 128.21);
    path_2.cubicTo(5.63004, 127.45, 5.79004, 126.7, 5.93004, 125.96);
    path_2.cubicTo(6.07004, 125.24, 6.59004, 124.26, 5.68004, 124.09);
    path_2.cubicTo(4.75004, 123.91, 4.88004, 125.04, 4.71004, 125.75);
    path_2.cubicTo(4.69004, 125.83, 4.60004, 125.9, 4.47004, 126.06);
    path_2.cubicTo(3.86004, 125.07, 2.91004, 124.95, 1.95004, 124.89);
    path_2.cubicTo(1.66004, 124.87, 1.36004, 125.07, 1.29004, 125.53);
    path_2.cubicTo(1.20004, 126.09, 1.53004, 126.02, 1.81004, 126.06);
    path_2.cubicTo(3.60004, 126.32, 4.51004, 128.06, 4.39004, 130.53);
    path_2.cubicTo(4.35004, 131.42, 4.27004, 132.19, 3.91004, 132.99);
    path_2.cubicTo(3.84004, 133.14, 3.29004, 133.78, 3.88004, 133.87);
    path_2.cubicTo(4.43004, 133.95, 4.23004, 134.18, 4.02004, 134.51);
    path_2.cubicTo(3.53004, 135.34, 3.43004, 136.41, 2.63004, 137.07);
    path_2.cubicTo(1.84004, 137.71, 0.0800448, 139.71, 0.880045, 140.24);
    path_2.cubicTo(1.17004, 140.43, 3.38004, 140.48, 3.43004, 140.15);
    path_2.cubicTo(3.67004, 138.54, 4.36004, 139.13, 5.04004, 139.61);
    path_2.cubicTo(5.09004, 139.21, 5.12004, 138.96, 5.15004, 138.71);
    path_2.cubicTo(5.39004, 136.98, 5.66004, 136.69, 6.98004, 136.85);
    path_2.cubicTo(7.50004, 136.92, 7.70004, 136.43, 7.89004, 136);
    path_2.cubicTo(8.12004, 135.47, 8.02004, 134.91, 7.96004, 134.37);
    path_2.cubicTo(7.93004, 134.09, 7.78004, 133.77, 8.07004, 133.56);
    path_2.cubicTo(8.19004, 133.48, 8.39005, 133.52, 8.52005, 133.59);
    path_2.cubicTo(8.81005, 133.75, 8.62004, 134.11, 8.62004, 134.38);
    path_2.cubicTo(8.62004, 134.85, 8.28004, 135.36, 8.67004, 135.81);
    path_2.cubicTo(9.90004, 135.07, 10.23, 133.6, 10.67, 132.15);
    path_2.cubicTo(11.41, 133.9, 13, 134.03, 14.07, 135.06);
    path_2.cubicTo(14.98, 135.93, 15.71, 135.18, 15.82, 133.62);
    path_2.cubicTo(15.85, 133.02, 15.88, 132.42, 15.91, 131.77);
    path_2.cubicTo(17.32, 132.43, 17.69, 132.38, 18.8, 131.44);
    path_2.cubicTo(19.3, 131.02, 19.48, 131.41, 19.76, 131.77);
    path_2.cubicTo(20.23, 132.39, 20.36, 133.31, 21, 133.72);
    path_2.cubicTo(21.7, 134.18, 21.55, 134.55, 20.98, 135.03);
    path_2.cubicTo(20.36, 135.55, 19.84, 136.2, 19.3, 136.85);
    path_2.cubicTo(18.77, 137.5, 18.28, 138.14, 17.65, 138.65);
    path_2.lineTo(17.67, 138.63);
    path_2.cubicTo(17.59, 139.11, 17.5, 139.58, 18.02, 139.8);
    path_2.cubicTo(18.41, 139.97, 18.42, 140.47, 18.54, 140.84);
    path_2.cubicTo(18.78, 141.56, 16.5, 142.07, 15.94, 142.2);
    path_2.cubicTo(15.35, 142.33, 17.79, 141.67, 17.57, 141.35);
    path_2.cubicTo(17.53, 141.29, 17.45, 141.27, 17.37, 141.22);
    path_2.cubicTo(17.04, 141.69, 14.98, 141.98, 14.97, 142.59);
    path_2.cubicTo(14.97, 143.16, 16.45, 143.68, 16.06, 143.79);
    path_2.cubicTo(15.78, 143.87, 15.59, 143.43, 15.61, 143.1);
    path_2.cubicTo(15.7, 141.75, 15.06, 140.94, 14.31, 140.15);
    path_2.cubicTo(14.08, 139.9, 14.11, 139.28, 13.58, 139.46);
    path_2.cubicTo(13.15, 139.61, 13.07, 140.11, 12.99, 140.51);
    path_2.cubicTo(12.87, 141.11, 10.85, 141.51, 10.81, 142.14);
    path_2.cubicTo(10.77, 142.74, 12.87, 143.56, 12.67, 144.12);
    path_2.cubicTo(12.03, 145.83, 13.76, 147.96, 12.14, 148.93);
    path_2.cubicTo(11.9, 149.08, 11.78, 149.57, 11.64, 149.92);
    path_2.cubicTo(11.51, 150.25, 11.37, 150.57, 11.03, 150.53);
    path_2.cubicTo(10.7, 150.49, 10.6, 150.16, 10.54, 149.81);
    path_2.cubicTo(10.46, 149.34, 10.42, 148.56, 10.02, 148.64);
    path_2.cubicTo(8.62005, 148.92, 8.81004, 147.75, 8.79004, 146.73);
    path_2.cubicTo(8.79004, 146.32, 8.77004, 145.87, 8.34004, 145.85);
    path_2.cubicTo(7.95004, 145.83, 7.62005, 146.14, 7.51005, 146.6);
    path_2.cubicTo(7.42005, 146.97, 7.51004, 147.39, 7.49004, 147.79);
    path_2.cubicTo(7.42004, 148.91, 7.58004, 150.13, 6.74004, 151);
    path_2.cubicTo(6.81004, 152.13, 6.77005, 153.26, 8.14005, 153.16);
    path_2.cubicTo(8.76005, 153.11, 8.46005, 153.76, 8.26005, 154.11);
    path_2.cubicTo(8.03005, 154.49, 7.58004, 154.47, 7.33004, 154.75);
    path_2.cubicTo(6.84004, 155.29, 5.98004, 155.76, 6.69004, 156.91);
    path_2.cubicTo(6.84004, 157.15, 6.78004, 157.49, 6.44004, 157.75);
    path_2.cubicTo(6.11004, 157.39, 6.12004, 156.86, 6.06004, 156.34);
    path_2.cubicTo(5.93004, 155.17, 6.13005, 153.99, 5.78005, 152.81);
    path_2.cubicTo(5.50005, 151.88, 6.16004, 151.37, 6.77004, 151.03);
    path_2.cubicTo(6.19004, 149.31, 5.70004, 148.97, 4.49004, 149.75);
    path_2.cubicTo(4.01004, 150.06, 3.75004, 149.8, 3.46004, 149.43);
    path_2.cubicTo(3.17004, 149.08, 2.73004, 148.67, 2.44004, 149.2);
    path_2.cubicTo(2.09004, 149.83, 2.63004, 150.15, 2.97004, 150.46);
    path_2.cubicTo(3.09004, 150.57, 3.27004, 150.59, 3.42004, 150.65);
    path_2.cubicTo(3.81004, 150.81, 4.18004, 151.03, 4.27004, 151.62);
    path_2.cubicTo(4.37004, 152.29, 3.88004, 152.27, 3.62004, 152.53);
    path_2.cubicTo(3.32004, 152.84, 2.77004, 153.37, 3.14004, 153.72);
    path_2.cubicTo(4.06004, 154.58, 3.63004, 155, 3.02004, 155.66);
    path_2.cubicTo(2.74004, 155.96, 2.96004, 156.44, 3.11004, 156.8);
    path_2.cubicTo(3.46004, 157.67, 4.51004, 158.46, 3.27004, 159.5);
    path_2.cubicTo(3.23004, 159.53, 3.26004, 159.8, 3.32004, 159.89);
    path_2.cubicTo(4.14004, 161.02, 3.19004, 161.46, 2.82004, 162.09);
    path_2.cubicTo(2.58004, 162.5, 1.90004, 162.61, 2.16004, 163.33);
    path_2.cubicTo(2.38004, 163.92, 2.89004, 164.09, 3.41004, 163.94);
    path_2.cubicTo(3.76004, 163.84, 4.12004, 163.81, 4.47004, 163.75);
    path_2.lineTo(4.45004, 163.75);
    path_2.cubicTo(5.27004, 162.72, 6.09004, 163.54, 6.89004, 163.82);
    path_2.cubicTo(7.32004, 163.98, 7.69005, 164.27, 8.14005, 163.97);
    path_2.cubicTo(9.12005, 163.32, 9.05004, 164.21, 8.91004, 164.89);
    path_2.cubicTo(8.75004, 165.59, 8.62005, 166.49, 8.22005, 166.84);
    path_2.cubicTo(7.52005, 167.44, 7.94004, 167.92, 8.16004, 168.45);
    path_2.cubicTo(8.33004, 168.84, 8.77004, 168.97, 8.88004, 169.52);
    path_2.cubicTo(8.62004, 169.68, 8.33004, 169.8, 8.09004, 170.02);
    path_2.cubicTo(7.74004, 170.34, 7.65004, 170.9, 8.09004, 171.1);
    path_2.cubicTo(8.96004, 171.49, 9.39005, 172.39, 10.01, 173.35);
    path_2.cubicTo(10.34, 171.75, 9.61004, 170.46, 9.75004, 169.08);
    path_2.cubicTo(9.79004, 168.69, 9.36004, 168.27, 9.87004, 167.85);
    path_2.cubicTo(10.3, 167.49, 10.61, 167.01, 11.23, 167.4);
    path_2.cubicTo(12.01, 167.9, 12.76, 168.08, 13.02, 166.21);
    path_2.cubicTo(13.37, 167.78, 13.77, 168.77, 14.48, 169.47);
    path_2.cubicTo(15.15, 170.13, 14.76, 171.62, 16.04, 171.81);
    path_2.cubicTo(14.94, 172.33, 14.94, 172.35, 13.89, 171.91);
    path_2.cubicTo(13.36, 171.69, 13.37, 171.76, 13.28, 172.5);
    path_2.cubicTo(13.2, 173.56, 13.62, 174.4, 13.81, 175.32);
    path_2.cubicTo(13.9, 175.72, 14.01, 175.77, 13.69, 176.13);
    path_2.cubicTo(12.99, 176.91, 11.94, 177.66, 12.79, 179.3);
    path_2.cubicTo(12.24, 179.37, 11.67, 179.11, 11.66, 178.78);
    path_2.cubicTo(11.65, 177.67, 10.82, 176.93, 10.83, 175.85);
    path_2.lineTo(10.85, 175.87);
    path_2.cubicTo(10.38, 175.51, 9.94004, 175.02, 9.34004, 175.32);
    path_2.cubicTo(9.51004, 175.63, 9.68004, 175.95, 9.88004, 176.32);
    path_2.cubicTo(9.18004, 176.29, 9.21004, 175.85, 9.36004, 175.33);
    path_2.cubicTo(9.33004, 174.46, 8.83004, 173.86, 8.46004, 173.18);
    path_2.cubicTo(8.29004, 172.85, 8.00004, 172.73, 7.72004, 172.75);
    path_2.cubicTo(7.34004, 172.78, 7.38004, 173.26, 7.36004, 173.57);
    path_2.cubicTo(7.30004, 174.22, 7.34004, 175.05, 6.72004, 175.13);
    path_2.cubicTo(6.11004, 175.21, 6.11004, 174.28, 5.86004, 173.78);
    path_2.cubicTo(5.62004, 173.31, 5.37004, 173.09, 4.96004, 173.24);
    path_2.cubicTo(4.61004, 173.37, 4.14004, 173.47, 4.24004, 174.04);
    path_2.cubicTo(4.48004, 175.35, 4.48004, 176.63, 5.41004, 177.84);
    path_2.cubicTo(6.58004, 179.35, 7.98004, 178.87, 9.19004, 179.57);
    path_2.cubicTo(9.33004, 179.19, 9.24005, 178.66, 9.93005, 178.2);
    path_2.cubicTo(9.46005, 178.79, 9.85004, 179.52, 9.17004, 179.55);
    path_2.cubicTo(9.31004, 180.34, 9.03005, 181.33, 9.80005, 181.87);
    path_2.cubicTo(10.8, 182.58, 10.62, 183.5, 10.49, 184.55);
    path_2.cubicTo(10.37, 185.47, 9.59004, 185.88, 9.61004, 186.86);
    path_2.cubicTo(10.21, 186.86, 10.47, 186.3, 10.78, 185.56);
    path_2.cubicTo(10.98, 186.46, 10.77, 187.12, 10.48, 187.54);
    path_2.cubicTo(10.33, 187.77, 9.75004, 187.44, 9.62004, 186.83);
    path_2.cubicTo(8.62004, 186.18, 7.76004, 185.35, 7.68004, 183.67);
    path_2.cubicTo(6.77004, 184.63, 8.09004, 186.15, 6.99004, 187.17);
    path_2.cubicTo(7.11004, 186.1, 6.55004, 185.38, 6.82004, 184.49);
    path_2.cubicTo(7.02004, 183.82, 6.42004, 183.74, 6.08004, 183.48);
    path_2.cubicTo(5.68004, 183.17, 5.32004, 182.99, 5.02004, 183.5);
    path_2.cubicTo(4.86004, 183.77, 4.64004, 184.23, 4.91004, 184.46);
    path_2.cubicTo(5.78004, 185.21, 6.61004, 185.85, 5.69004, 187.21);
    path_2.cubicTo(5.91004, 187.34, 5.51004, 188.13, 6.27004, 187.87);
    path_2.cubicTo(6.68004, 187.73, 6.36004, 189.03, 6.49004, 189.19);
    path_2.cubicTo(7.70004, 191.02, 8.29004, 192.95, 9.82004, 194.59);
    path_2.cubicTo(9.40004, 195.72, 10.27, 195.84, 10.9, 196.31);
    path_2.cubicTo(10.1, 196.1, 9.99005, 196.99, 9.47005, 197.31);
    path_2.cubicTo(9.38005, 197.01, 9.30005, 196.82, 9.27005, 196.63);
    path_2.cubicTo(8.89005, 194.42, 8.35004, 193.58, 6.55005, 193.14);
    path_2.cubicTo(6.09005, 193.02, 5.90005, 192.77, 5.78005, 192.26);
    path_2.cubicTo(5.71005, 191.97, 5.63004, 191.55, 5.32004, 191.61);
    path_2.cubicTo(4.96004, 191.69, 4.97004, 192.19, 5.12004, 192.49);
    path_2.cubicTo(5.94004, 194.01, 6.14004, 195.99, 7.64004, 196.98);
    path_2.cubicTo(8.19004, 197.35, 8.49004, 197.86, 8.08004, 198.63);
    path_2.cubicTo(7.57004, 199.59, 7.93004, 200.37, 8.90004, 200.45);
    path_2.cubicTo(9.65004, 200.51, 10.2, 201.01, 10.32, 201.77);
    path_2.cubicTo(10.51, 203.1, 11.18, 204.29, 11.37, 205.59);
    path_2.cubicTo(11.52, 206.58, 11.84, 206.54, 12.21, 206.01);
    path_2.cubicTo(12.74, 205.23, 13.44, 205.35, 14.2, 205.68);
    path_2.cubicTo(14.59, 205.85, 14.97, 206.14, 15.36, 205.78);
    path_2.cubicTo(15.93, 205.25, 16.24, 205.65, 16.12, 206.37);
    path_2.cubicTo(15.89, 207.84, 17.89, 208.15, 17.54, 209.63);
    path_2.cubicTo(17.58, 209.65, 17.62, 209.68, 17.65, 209.68);
    path_2.cubicTo(18.55, 209.83, 19.22, 209.46, 19.28, 208.44);
    path_2.cubicTo(19.31, 207.61, 19.43, 206.54, 18.35, 206.16);
    path_2.cubicTo(17.89, 205.99, 17.26, 206.08, 17.39, 205.18);
    path_2.cubicTo(17.49, 204.46, 17.54, 203.6, 18.43, 203.63);
    path_2.cubicTo(18.77, 203.64, 19.22, 203.93, 19.21, 203.21);
    path_2.cubicTo(19.21, 202.68, 19.04, 202.2, 18.56, 202.05);
    path_2.cubicTo(17.73, 201.8, 16.98, 200.74, 16.04, 201.37);
    path_2.cubicTo(15.72, 201.58, 15.4, 201.24, 15.35, 200.75);
    path_2.cubicTo(15.26, 199.89, 15.01, 199.21, 14.24, 198.9);
    path_2.cubicTo(13.87, 198.75, 13.99, 198.44, 14.07, 198.18);
    path_2.cubicTo(14.23, 197.7, 14.01, 197.21, 14.01, 196.72);
    path_2.cubicTo(13.41, 196.57, 13.11, 196.06, 12.96, 195.38);
    path_2.cubicTo(13.28, 195.86, 13.82, 196.1, 14, 196.74);
    path_2.cubicTo(14.63, 196.77, 14.34, 195.72, 14.9, 195.65);
    path_2.cubicTo(15.85, 195.52, 16.81, 195.49, 17.79, 195.6);
    path_2.cubicTo(18.02, 195.63, 18.2, 195.82, 18.22, 196.07);
    path_2.cubicTo(18.31, 197.29, 18.9, 198.41, 18.97, 199.66);
    path_2.cubicTo(19.01, 200.77, 19.58, 202.04, 20.34, 202.51);
    path_2.cubicTo(21.35, 203.11, 21.43, 203.5, 21.04, 204.44);
    path_2.cubicTo(20.69, 205.31, 21.1, 205.98, 21.99, 206.09);
    path_2.cubicTo(22.11, 206.1, 22.23, 206.04, 22.35, 206.07);
    path_2.cubicTo(23.13, 206.25, 23.95, 206.79, 24.09, 207.61);
    path_2.cubicTo(24.26, 208.66, 23.27, 207.96, 22.82, 208.13);
    path_2.cubicTo(22.36, 208.31, 21.76, 208.38, 21.98, 209.13);
    path_2.cubicTo(22.26, 210.05, 22.68, 211.1, 23.63, 211.26);
    path_2.cubicTo(24.87, 211.46, 24.13, 212.37, 25.18, 214.04);
    path_2.cubicTo(25.14, 213.46, 25.18, 213.31, 25.12, 213.2);
    path_2.cubicTo(24.53, 211.98, 26.27, 210.37, 27.81, 210.62);
    path_2.cubicTo(28.36, 210.71, 28.66, 209.84, 28.61, 209.71);
    path_2.cubicTo(28.02, 208.4, 28.93, 208.54, 29.52, 208.3);
    path_2.cubicTo(30.38, 207.95, 31.03, 206.38, 30.54, 205.74);
    path_2.cubicTo(30.03, 205.09, 29.83, 204.43, 29.82, 203.79);
    path_2.cubicTo(29.83, 203.14, 30.03, 202.5, 30.27, 201.91);
    path_2.cubicTo(30.68, 200.92, 30.58, 200.12, 29.99, 199.32);
    path_2.cubicTo(29.59, 198.78, 29.27, 198.36, 29.61, 197.68);
    path_2.cubicTo(29.89, 197.12, 29.77, 196.67, 29.03, 196.63);
    path_2.cubicTo(28.65, 196.61, 28.15, 196.36, 28.39, 195.92);
    path_2.cubicTo(28.8, 195.14, 27.98, 194.5, 28.25, 193.75);
    path_2.cubicTo(28.33, 193.52, 28.11, 192.59, 27.46, 193.35);
    path_2.cubicTo(27.09, 193.79, 26.88, 193.37, 26.91, 192.97);
    path_2.cubicTo(26.95, 192.54, 27.09, 192.13, 27.25, 191.75);
    path_2.cubicTo(27.63, 190.81, 24.95, 190.6, 24.57, 190.11);
    path_2.cubicTo(24.01, 189.35, 24.01, 190.7, 23.25, 190.96);
    path_2.cubicTo(23.75, 190.25, 22.68, 189.27, 23.74, 189.17);
    path_2.cubicTo(24.62, 189.08, 24.6, 188.54, 24.56, 187.93);
    path_2.cubicTo(24.5, 187.02, 24.58, 186.43, 25.59, 186.91);
    path_2.cubicTo(25.87, 187.04, 26.15, 187.05, 26.34, 186.75);
    path_2.cubicTo(26.54, 186.44, 26.44, 186.16, 26.21, 185.91);
    path_2.cubicTo(25.71, 185.34, 25.46, 184.93, 26.21, 184.31);
    path_2.cubicTo(26.75, 183.87, 26.63, 182.87, 26.13, 182.39);
    path_2.cubicTo(25.38, 181.68, 25.63, 182.93, 25.28, 183.09);
    path_2.cubicTo(24.93, 183.26, 24.95, 183.65, 24.94, 184.02);
    path_2.cubicTo(24.93, 184.4, 24.72, 184.95, 24.44, 184.64);
    path_2.cubicTo(24.01, 184.16, 23.05, 184.72, 23.06, 183.79);
    path_2.cubicTo(23.08, 182.36, 23.76, 181.24, 24.66, 180.34);
    path_2.cubicTo(24.87, 180.13, 25.36, 180.12, 25.14, 179.62);
    path_2.cubicTo(24.95, 179.19, 24.54, 179.17, 24.17, 179.28);
    path_2.cubicTo(23.49, 179.5, 22.83, 179.82, 22.14, 179.98);
    path_2.cubicTo(21.18, 180.2, 20.81, 180.8, 21, 181.93);
    path_2.cubicTo(21.05, 182.2, 21.28, 182.54, 20.9, 182.83);
    path_2.cubicTo(20.57, 182.14, 20.25, 181.47, 19.95, 180.82);
    path_2.cubicTo(19.38, 181.05, 19.85, 181.88, 19.32, 182.05);
    path_2.cubicTo(18.84, 180.88, 18.88, 180.38, 19.81, 178.53);
    path_2.cubicTo(20.53, 177.17, 20.6, 174.74, 19.75, 173.87);
    path_2.cubicTo(19.01, 173.11, 18.97, 171.89, 18.19, 171.22);
    path_2.cubicTo(17.99, 171.05, 18.09, 170.54, 18.29, 170.32);
    path_2.cubicTo(18.94, 169.64, 19.5, 168.65, 20.6, 169.21);
    path_2.lineTo(20.6, 169.23);
    path_2.cubicTo(20.58, 168.95, 20.65, 168.64, 20.56, 168.41);
    path_2.cubicTo(20.12, 167.33, 19.68, 166.26, 19.24, 165.18);
    path_2.cubicTo(18.85, 164.09, 18.54, 162.96, 18.35, 161.78);
    path_2.cubicTo(18.29, 161.42, 18.08, 161.13, 17.74, 160.96);
    path_2.cubicTo(17.26, 160.72, 17.15, 160.24, 17.23, 159.67);
    path_2.cubicTo(17.31, 159.06, 17.28, 158.51, 17.1, 158.03);
    path_2.cubicTo(16.95, 157.55, 16.66, 157.12, 16.2, 156.76);
    path_2.cubicTo(15.63, 156.31, 15.59, 155.73, 16.35, 155.47);
    path_2.cubicTo(16.7, 155.35, 17.02, 155.21, 17.34, 155.02);
    path_2.cubicTo(17.66, 154.83, 18.27, 155.32, 18.34, 154.61);
    path_2.cubicTo(18.41, 153.94, 17.86, 153.7, 17.41, 153.51);
    path_2.cubicTo(16.7, 153.22, 16.63, 152.36, 16.85, 151.9);
    path_2.cubicTo(17.35, 150.83, 16.83, 150.87, 16.26, 150.96);
    path_2.cubicTo(15.44, 151.09, 15.56, 150.16, 15.24, 149.75);
    path_2.cubicTo(14.99, 149.44, 14.85, 148.87, 15.19, 148.44);
    path_2.cubicTo(16.1, 147.3, 14.39, 145.94, 13.73, 144.51);
    path_2.cubicTo(13.42, 143.84, 13.29, 143.22, 14.13, 142.94);
    path_2.cubicTo(14.98, 142.66, 14.87, 143.38, 14.99, 144);
    path_2.cubicTo(15.2, 145.18, 16.01, 145.44, 16.79, 144.61);
    path_2.cubicTo(17.2, 144.17, 17.72, 144.08, 18.19, 143.82);
    path_2.cubicTo(18.63, 143.58, 18.86, 143.97, 19.08, 144.28);
    path_2.cubicTo(19.27, 144.58, 21.41, 145.37, 21.1, 145.45);
    path_2.cubicTo(20.08, 145.72, 19.45, 146.86, 18.39, 147.02);
    path_2.cubicTo(16.71, 147.27, 16.35, 148.19, 17.49, 149.61);
    path_2.cubicTo(18.09, 150.38, 18.57, 151.26, 19, 152.1);
    path_2.cubicTo(19.62, 153.36, 20.54, 154.55, 20.3, 156.23);
    path_2.cubicTo(20.22, 156.82, 20.17, 157.16, 19.7, 157.61);
    path_2.cubicTo(19.16, 158.11, 19.87, 159.1, 19.57, 159.86);
    path_2.cubicTo(19.47, 160.11, 19.4, 160.45, 19.63, 160.63);
    path_2.cubicTo(19.94, 160.86, 20.15, 160.54, 20.32, 160.3);
    path_2.cubicTo(20.57, 159.94, 21.06, 159.79, 20.93, 159.1);
    path_2.cubicTo(20.85, 158.69, 21.18, 158.61, 21.5, 158.69);
    path_2.cubicTo(21.81, 158.77, 22.13, 158.87, 22.44, 158.92);
    path_2.cubicTo(22.68, 158.96, 22.95, 158.95, 22.99, 158.59);
    path_2.cubicTo(23.02, 158.31, 22.84, 158.2, 22.63, 158.14);
    path_2.cubicTo(22.03, 157.96, 21.48, 157.58, 21.72, 156.85);
    path_2.cubicTo(21.96, 156.13, 22.58, 155.81, 23.31, 156.12);
    path_2.cubicTo(23.97, 156.4, 24.3, 156.1, 24.05, 155.37);
    path_2.cubicTo(23.79, 154.61, 23.96, 154.05, 24.3, 153.37);
    path_2.cubicTo(24.7, 152.6, 24.71, 151.84, 24.44, 151.23);
    path_2.cubicTo(24.19, 150.62, 23.64, 150.15, 22.86, 149.96);
    path_2.cubicTo(21.93, 149.74, 21.34, 148.48, 21.66, 147.12);
    path_2.cubicTo(21.95, 145.87, 22.73, 146.62, 23.32, 146.69);
    path_2.cubicTo(23.67, 146.73, 24.06, 146.97, 24.26, 146.46);
    path_2.cubicTo(24.45, 145.98, 22.09, 145.52, 21.82, 145.29);
    path_2.cubicTo(20.74, 144.41, 20.33, 143.3, 20.44, 141.7);
    path_2.cubicTo(20.5, 140.91, 20.62, 139.9, 20.1, 139.14);
    path_2.cubicTo(19.63, 138.45, 19.82, 138.02, 20.47, 137.65);
    path_2.cubicTo(21.23, 137.2, 22.16, 136.82, 21.68, 135.45);
    path_2.cubicTo(21.61, 135.25, 21.85, 134.85, 22, 134.59);
    path_2.cubicTo(22.03, 134.53, 22.4, 134.58, 22.41, 134.65);
    path_2.cubicTo(22.6, 135.53, 23.62, 135.97, 23.32, 137.11);
    path_2.cubicTo(23.21, 137.48, 23.1, 138.02, 23.7, 137.98);
    path_2.cubicTo(24.17, 137.95, 24.53, 137.54, 24.29, 137.05);
    path_2.cubicTo(23.74, 135.88, 24.36, 135.12, 25.01, 134.34);
    path_2.cubicTo(25.35, 133.93, 25.48, 133.41, 25.7, 132.95);
    path_2.cubicTo(26.31, 131.59, 25.87, 130.14, 26.37, 128.81);
    path_2.cubicTo(26.19, 128.72, 25.95, 128.69, 25.86, 128.54);
    path_2.cubicTo(25.68, 128.24, 25.86, 127.95, 26.08, 127.73);
    path_2.cubicTo(26.15, 127.65, 26.32, 127.58, 26.39, 127.62);
    path_2.cubicTo(26.64, 127.78, 26.55, 128.06, 26.49, 128.32);
    path_2.lineTo(26.36, 128.83);
    path_2.cubicTo(27.77, 128.3, 28.83, 124.9, 28, 123.66);
    path_2.cubicTo(27.62, 123.13, 27.73, 122.76, 27.86, 122.28);
    path_2.cubicTo(28.3, 120.7, 29.09, 119.16, 28.44, 117.48);
    path_2.cubicTo(28.35, 117.25, 28.49, 116.65, 28.74, 116.69);
    path_2.cubicTo(30.06, 116.87, 29.93, 115.49, 30.44, 114.85);
    path_2.cubicTo(31.06, 114.08, 30.67, 113.22, 29.77, 113.22);
    path_2.cubicTo(29.44, 113.22, 29.22, 113.24, 29.17, 112.83);
    path_2.cubicTo(28.98, 111.49, 28.77, 110.14, 29.69, 108.89);
    path_2.cubicTo(30, 108.48, 30.2, 108.19, 29.7, 107.98);
    path_2.cubicTo(28.84, 107.61, 29.16, 107.07, 29.64, 106.55);
    path_2.cubicTo(30.34, 105.78, 30.45, 104.94, 30.11, 104.11);
    path_2.cubicTo(29.62, 102.91, 29.11, 104.48, 28.43, 104.41);
    path_2.cubicTo(29.52, 102.92, 29.6, 101.26, 30.09, 99.67);
    path_2.cubicTo(30.76, 100.03, 31.45, 100.3, 31.09, 101.43);
    path_2.cubicTo(30.97, 101.81, 31.23, 101.98, 31.56, 101.99);
    path_2.cubicTo(32.33, 102.02, 32.88, 101.61, 33.34, 100.89);
    path_2.cubicTo(33.72, 100.29, 34.3, 99.87, 33.93, 99.01);
    path_2.cubicTo(33.61, 98.28, 33.44, 97.42, 34.01, 96.53);
    path_2.cubicTo(34.39, 95.95, 33.35, 95.94, 33.71, 95.34);
    path_2.cubicTo(33.4, 95.15, 33.18, 95.52, 32.92, 95.61);
    path_2.cubicTo(32.56, 95.74, 32.25, 96.44, 31.86, 95.92);
    path_2.cubicTo(31.47, 95.4, 31.97, 95.09, 32.31, 94.69);
    path_2.cubicTo(33.12, 93.74, 33.81, 92.74, 34.27, 91.73);
    path_2.cubicTo(34.72, 90.7, 34.82, 89.59, 34.32, 88.31);
    path_2.cubicTo(34.28, 88.22, 34.36, 88.06, 34.39, 87.93);
    path_2.cubicTo(34.64, 86.96, 34.5, 86.03, 33.63, 85.92);
    path_2.cubicTo(32.71, 85.8, 32.85, 85.18, 32.86, 84.5);
    path_2.cubicTo(32.86, 84.41, 32.88, 84.32, 32.89, 84.23);
    path_2.cubicTo(32.53, 83.85, 31.56, 84.19, 31.84, 82.99);
    path_2.cubicTo(32.29, 83.33, 32.62, 83.72, 32.87, 84.24);
    path_2.cubicTo(34, 85.92, 35.65, 86.53, 37.59, 86.61);
    path_2.cubicTo(37.98, 86.63, 38.27, 86.84, 38.5, 87.13);
    path_2.cubicTo(38.58, 86.55, 39, 86.32, 39.43, 86.02);
    path_2.lineTo(39.39, 86.02);
    path_2.close();
    path_2.moveTo(58.73, 53.81);
    path_2.cubicTo(58.31, 54.46, 57.85, 54.84, 57.22, 55.02);
    path_2.cubicTo(56.98, 55.09, 56.76, 55.05, 56.85, 54.75);
    path_2.cubicTo(56.89, 54.63, 57.11, 54.53, 57.25, 54.42);
    path_2.cubicTo(57.01, 54.1, 56.7, 53.78, 57.17, 53.3);
    path_2.cubicTo(57.33, 53.14, 57.62, 53.05, 57.78, 53.2);
    path_2.cubicTo(58.16, 53.55, 57.73, 54.02, 57.67, 54.43);
    path_2.cubicTo(57.97, 54.19, 58.16, 53.73, 58.74, 53.8);
    path_2.lineTo(58.73, 53.81);
    path_2.close();
    path_2.moveTo(23.03, 119.28);
    path_2.cubicTo(23.03, 119.28, 23.68, 119.71, 23.3, 120.12);
    path_2.cubicTo(22.34, 121.16, 23.23, 121.73, 23.68, 121.99);
    path_2.cubicTo(24.34, 122.38, 24.15, 123.06, 24.28, 123.58);
    path_2.cubicTo(24.38, 124.04, 24.15, 124.58, 23.51, 124.49);
    path_2.cubicTo(22.9, 124.4, 22.39, 124.58, 22.28, 125.43);
    path_2.cubicTo(22.24, 125.78, 22.02, 125.98, 21.79, 125.93);
    path_2.cubicTo(21.59, 125.89, 21.29, 125.63, 21.29, 125.45);
    path_2.cubicTo(21.28, 124.29, 21.03, 123.08, 21.65, 122);
    path_2.cubicTo(22.07, 121.24, 22.02, 120.7, 21.54, 120.18);
    path_2.cubicTo(21.07, 119.68, 20.76, 119.1, 20.86, 118.18);
    path_2.cubicTo(21.78, 118.27, 22.19, 119.25, 23.03, 119.27);
    path_2.lineTo(23.03, 119.28);
    path_2.close();
    path_2.moveTo(25.08, 199.17);
    path_2.cubicTo(24.13, 199.47, 23.77, 199.83, 23.99, 200.73);
    path_2.cubicTo(24.18, 201.49, 23.54, 201.64, 23.07, 201.88);
    path_2.cubicTo(22.52, 202.17, 22.44, 201.55, 22.25, 201.27);
    path_2.cubicTo(21.92, 200.79, 21.72, 200.19, 21.43, 199.66);
    path_2.cubicTo(21.17, 199.12, 20.83, 198.66, 20.19, 198.46);
    path_2.cubicTo(20.13, 198.44, 20.17, 197.76, 20.16, 197.39);
    path_2.cubicTo(20.44, 197.42, 20.75, 197.23, 20.93, 197.77);
    path_2.cubicTo(21.12, 198.36, 21.46, 198.47, 21.85, 198.03);
    path_2.cubicTo(22.48, 197.3, 22.88, 197.45, 23.12, 198.51);
    path_2.cubicTo(23.2, 198.91, 23.21, 199.33, 23.3, 199.93);
    path_2.cubicTo(23.95, 199.13, 23.95, 199.13, 25.08, 199.17);
    path_2.close();
    path_2.moveTo(13.88, 162.04);
    path_2.cubicTo(14.07, 162.5, 14.24, 162.96, 14.76, 162.74);
    path_2.cubicTo(15.15, 162.57, 15.57, 162.3, 15.65, 163.08);
    path_2.cubicTo(15.76, 164, 16.32, 164.98, 15.53, 165.84);
    path_2.cubicTo(15.04, 166.35, 14.45, 165.98, 14.06, 165.72);
    path_2.cubicTo(13.13, 165.12, 12.91, 161.94, 13.57, 160.59);
    path_2.cubicTo(14, 161.08, 13.71, 161.61, 13.89, 162.04);
    path_2.lineTo(13.88, 162.04);
    path_2.close();
    path_2.moveTo(24.04, 96.45);
    path_2.cubicTo(23.38, 97.49, 24.02, 99.39, 22.14, 99.6);
    path_2.cubicTo(21.51, 99.67, 21.26, 99.56, 21.58, 98.77);
    path_2.cubicTo(22.09, 97.48, 22.59, 96.2, 23.17, 94.74);
    path_2.cubicTo(23.39, 95.49, 24.84, 95.19, 24.04, 96.45);
    path_2.close();
    path_2.moveTo(72.03, 45.54);
    path_2.cubicTo(71.62, 46, 71.31, 46.36, 70.72, 46.41);
    path_2.cubicTo(70.25, 46.45, 70.02, 46.2, 69.95, 45.8);
    path_2.cubicTo(69.86, 45.19, 70.1, 44.69, 70.8, 44.42);
    path_2.cubicTo(71.82, 44.01, 72.2, 42.93, 73.43, 42.16);
    path_2.cubicTo(72.61, 43.48, 72.85, 44.59, 72.03, 45.55);
    path_2.lineTo(72.03, 45.54);
    path_2.close();
    path_2.moveTo(28.32, 198.31);
    path_2.cubicTo(27.89, 198.89, 27.53, 199.38, 27.7, 200.13);
    path_2.cubicTo(27.79, 200.5, 28.17, 201.09, 27.39, 201.06);
    path_2.cubicTo(26.85, 201.04, 26.37, 200.86, 26.35, 200.13);
    path_2.cubicTo(26.33, 199.18, 26.35, 198.26, 26.44, 197.09);
    path_2.cubicTo(27.08, 197.67, 27.58, 198.1, 28.32, 198.31);
    path_2.close();
    path_2.moveTo(21.71, 186.4);
    path_2.cubicTo(21.98, 186.41, 22.31, 186.65, 22.21, 186.86);
    path_2.cubicTo(21.73, 187.84, 23.21, 188.74, 22.44, 189.64);
    path_2.cubicTo(22.27, 189.84, 21.69, 190.22, 21.61, 189.31);
    path_2.cubicTo(21.58, 188.96, 21.44, 188.67, 21.16, 188.51);
    path_2.cubicTo(20.78, 188.29, 20.35, 188.08, 20.52, 187.51);
    path_2.cubicTo(20.68, 186.94, 21.07, 186.57, 21.54, 186.41);
    path_2.cubicTo(21.63, 186.41, 21.67, 186.41, 21.71, 186.41);
    path_2.lineTo(21.71, 186.4);
    path_2.close();
    path_2.moveTo(24.49, 205);
    path_2.cubicTo(24.08, 205.03, 23.88, 204.39, 24.26, 203.95);
    path_2.cubicTo(24.42, 203.76, 24.59, 203.53, 24.8, 203.46);
    path_2.cubicTo(25.16, 203.34, 25.12, 202.46, 25.55, 202.79);
    path_2.cubicTo(26.02, 203.15, 26.25, 203.81, 26.15, 204.53);
    path_2.cubicTo(26.06, 205.12, 25.9, 205.63, 25.67, 206.26);
    path_2.cubicTo(25.16, 205.82, 25.31, 204.95, 24.49, 205.01);
    path_2.lineTo(24.49, 205);
    path_2.close();
    path_2.moveTo(28.84, 205.7);
    path_2.cubicTo(28.46, 205.02, 28.4, 204.02, 27.53, 204.77);
    path_2.cubicTo(27.15, 205.1, 26.43, 203.51, 26.73, 202.76);
    path_2.cubicTo(26.87, 202.4, 27.12, 202.12, 27.6, 201.83);
    path_2.cubicTo(27.9, 203.12, 29.17, 203.95, 28.84, 205.7);
    path_2.close();
    path_2.moveTo(22.14, 193.64);
    path_2.cubicTo(22.15, 193.72, 22.24, 193.85, 22.29, 193.86);
    path_2.cubicTo(24.28, 194.17, 22.82, 196.1, 23.67, 196.96);
    path_2.cubicTo(22.98, 195.31, 21, 194.55, 20.84, 192.13);
    path_2.cubicTo(21.31, 192.86, 22.02, 192.88, 22.14, 193.64);
    path_2.close();
    path_2.moveTo(55.53, 56.78);
    path_2.cubicTo(55.46, 57.46, 53.64, 57.56, 54.76, 58.56);
    path_2.cubicTo(54.89, 58.68, 54.28, 59.34, 53.93, 59.35);
    path_2.cubicTo(53.47, 59.36, 53.03, 59.11, 53.06, 58.52);
    path_2.cubicTo(53.09, 57.91, 53.19, 57.29, 53.32, 56.29);
    path_2.cubicTo(54.03, 57.02, 54.81, 56.86, 55.53, 56.77);
    path_2.lineTo(55.53, 56.78);
    path_2.close();
    path_2.moveTo(10.74, 153.79);
    path_2.cubicTo(11.43, 154.02, 11.75, 154.97, 11.86, 155.66);
    path_2.cubicTo(11.93, 156.1, 11.17, 156.78, 10.6, 156.69);
    path_2.cubicTo(9.70005, 156.54, 10.31, 155.46, 10.02, 154.96);
    path_2.cubicTo(10.13, 154.36, 10.15, 153.6, 10.74, 153.79);
    path_2.close();
    path_2.moveTo(62.86, 42.83);
    path_2.cubicTo(62.14, 43.05, 61.41, 44.42, 60.74, 43.56);
    path_2.cubicTo(60.19, 42.85, 61.24, 42.1, 61.71, 41.42);
    path_2.cubicTo(61.84, 41.23, 62.41, 41.24, 62.87, 41.13);
    path_2.cubicTo(62.45, 41.93, 63.37, 42.67, 62.87, 42.82);
    path_2.lineTo(62.86, 42.83);
    path_2.close();
    path_2.moveTo(38.28, 79.8);
    path_2.cubicTo(39.37, 79.35, 39.5, 80.27, 39.01, 81.15);
    path_2.cubicTo(38.78, 81.56, 38.12, 81.7, 37.77, 82.62);
    path_2.cubicTo(37.61, 81.38, 37.07, 80.3, 38.28, 79.79);
    path_2.lineTo(38.28, 79.8);
    path_2.close();
    path_2.moveTo(13.28, 158.3);
    path_2.cubicTo(12.8, 158.3, 12.56, 157.79, 12.65, 157.27);
    path_2.cubicTo(12.75, 156.64, 13.03, 156.01, 13.62, 155.94);
    path_2.cubicTo(14.03, 155.89, 14.1, 156.33, 13.98, 156.89);
    path_2.cubicTo(13.69, 157.25, 14.19, 158.31, 13.28, 158.3);
    path_2.close();
    path_2.moveTo(26.44, 209.09);
    path_2.cubicTo(26.35, 209.37, 26.22, 209.55, 25.96, 209.56);
    path_2.cubicTo(25.65, 209.56, 25.56, 209.3, 25.48, 209.01);
    path_2.cubicTo(25.32, 208.44, 25.17, 207.87, 24.97, 207.14);
    path_2.cubicTo(26.46, 207.62, 26.77, 208.07, 26.45, 209.09);
    path_2.lineTo(26.44, 209.09);
    path_2.close();
    path_2.moveTo(66.49, 39.52);
    path_2.cubicTo(66.33, 38.67, 67.3, 38.16, 67.78, 37.51);
    path_2.cubicTo(68.11, 37.06, 68.48, 37.42, 68.52, 37.59);
    path_2.cubicTo(68.7, 38.5, 67.59, 38.81, 67.23, 39.37);
    path_2.cubicTo(66.9, 39.59, 66.57, 39.93, 66.49, 39.52);
    path_2.close();
    path_2.moveTo(46.02, 54.41);
    path_2.cubicTo(45.74, 54.58, 45.39, 54.62, 45.43, 54.27);
    path_2.cubicTo(45.51, 53.51, 45.69, 52.71, 46.76, 52.34);
    path_2.cubicTo(46.78, 53.1, 47.01, 53.82, 46.02, 54.42);
    path_2.lineTo(46.02, 54.41);
    path_2.close();
    path_2.moveTo(71.7, 52.37);
    path_2.cubicTo(70.88, 53.23, 70, 52.61, 69.12, 53);
    path_2.cubicTo(69.76, 51.87, 69.77, 51.86, 71.7, 52.37);
    path_2.close();
    path_2.moveTo(10.89, 164.84);
    path_2.cubicTo(10.32, 164.79, 10.65, 164.04, 10.52, 163.62);
    path_2.cubicTo(10.42, 163.28, 10.48, 162.86, 10.85, 162.84);
    path_2.cubicTo(11.43, 162.81, 11.25, 163.41, 11.31, 163.8);
    path_2.cubicTo(11.26, 164.21, 11.37, 164.87, 10.89, 164.83);
    path_2.lineTo(10.89, 164.84);
    path_2.close();
    path_2.moveTo(17.1, 166.19);
    path_2.cubicTo(16.66, 166.16, 16.64, 165.73, 16.63, 165.36);
    path_2.cubicTo(16.62, 165.02, 16.72, 164.63, 17.09, 164.77);
    path_2.cubicTo(17.38, 164.87, 17.66, 165.1, 17.65, 165.36);
    path_2.cubicTo(17.59, 165.94, 17.44, 166.21, 17.11, 166.19);
    path_2.lineTo(17.1, 166.19);
    path_2.close();
    path_2.moveTo(73.63, 52.65);
    path_2.cubicTo(73.75, 53.01, 73.74, 53.4, 73.29, 53.62);
    path_2.cubicTo(73.05, 53.73, 72.7, 53.76, 72.68, 53.45);
    path_2.cubicTo(72.66, 53.12, 72.51, 52.74, 72.85, 52.41);
    path_2.cubicTo(73.16, 52.41, 73.51, 52.31, 73.63, 52.65);
    path_2.close();
    path_2.moveTo(19.16, 187.63);
    path_2.cubicTo(19.44, 187.75, 19.31, 188.46, 19.2, 188.76);
    path_2.cubicTo(18.9, 189.6, 18.52, 188.58, 18.13, 188.64);
    path_2.cubicTo(18.49, 188.25, 18.47, 187.32, 19.16, 187.63);
    path_2.close();
    path_2.moveTo(38.21, 85.36);
    path_2.cubicTo(38, 85.74, 37.77, 85.45, 37.66, 85.27);
    path_2.cubicTo(37.47, 84.95, 36.83, 84.86, 37.12, 84.33);
    path_2.cubicTo(37.36, 83.88, 37.57, 84.4, 37.77, 84.41);
    path_2.cubicTo(38.01, 84.73, 38.46, 84.9, 38.21, 85.37);
    path_2.lineTo(38.21, 85.36);
    path_2.close();
    path_2.moveTo(23.3, 91.04);
    path_2.cubicTo(23.05, 91.2, 22.89, 91.05, 22.87, 90.79);
    path_2.cubicTo(22.82, 90.04, 23.29, 89.63, 23.95, 89.19);
    path_2.cubicTo(23.88, 89.99, 23.94, 90.62, 23.3, 91.04);
    path_2.close();
    path_2.moveTo(22.19, 100.34);
    path_2.cubicTo(22.55, 100.49, 22.52, 100.87, 22.39, 101.26);
    path_2.cubicTo(22.29, 101.56, 22.1, 101.78, 21.82, 101.65);
    path_2.cubicTo(21.5, 101.49, 21.38, 101.2, 21.59, 100.77);
    path_2.cubicTo(21.74, 100.51, 21.91, 100.23, 22.19, 100.35);
    path_2.lineTo(22.19, 100.34);
    path_2.close();
    path_2.moveTo(11.81, 201.7);
    path_2.cubicTo(11.52, 201.7, 11.23, 201.49, 11.21, 201.05);
    path_2.cubicTo(11.19, 200.66, 11.17, 200.14, 11.56, 200.12);
    path_2.cubicTo(11.87, 200.11, 11.94, 200.61, 12.06, 200.91);
    path_2.cubicTo(12.11, 201.27, 12.25, 201.7, 11.81, 201.7);
    path_2.close();
    path_2.moveTo(10.78, 123.94);
    path_2.cubicTo(10.41, 123.88, 10.42, 123.52, 10.48, 123.17);
    path_2.cubicTo(10.53, 122.88, 10.63, 122.5, 10.91, 122.56);
    path_2.cubicTo(11.25, 122.64, 11.31, 123.06, 11.31, 123.42);
    path_2.cubicTo(11.23, 123.81, 11.05, 123.99, 10.78, 123.94);
    path_2.close();
    path_2.moveTo(13.52, 131.43);
    path_2.cubicTo(13.56, 131.32, 13.86, 131.2, 13.92, 131.26);
    path_2.cubicTo(14.39, 131.72, 14, 132.26, 14.02, 132.86);
    path_2.cubicTo(13.32, 132.55, 13.29, 132.03, 13.52, 131.43);
    path_2.close();
    path_2.moveTo(53.33, 71.08);
    path_2.cubicTo(53.16, 71.19, 52.84, 71.22, 52.85, 70.95);
    path_2.cubicTo(52.86, 70.53, 53.12, 70.13, 53.42, 69.81);
    path_2.cubicTo(53.59, 69.62, 53.8, 69.7, 53.98, 69.93);
    path_2.cubicTo(53.87, 70.33, 53.76, 70.79, 53.34, 71.07);
    path_2.lineTo(53.33, 71.08);
    path_2.close();
    path_2.moveTo(7.82004, 157.35);
    path_2.cubicTo(7.82004, 157.35, 8.15005, 157.49, 8.18005, 157.62);
    path_2.cubicTo(8.37005, 158.5, 7.52004, 158.37, 7.34004, 158.92);
    path_2.cubicTo(7.37004, 158.31, 7.42004, 157.72, 7.82004, 157.35);
    path_2.close();
    path_2.moveTo(75.03, 51.56);
    path_2.cubicTo(74.84, 51.61, 74.72, 51.44, 74.75, 51.26);
    path_2.cubicTo(74.83, 50.77, 75.15, 50.56, 75.67, 50.52);
    path_2.cubicTo(75.63, 51.02, 75.56, 51.42, 75.02, 51.56);
    path_2.lineTo(75.03, 51.56);
    path_2.close();
    path_2.moveTo(68.19, 51.86);
    path_2.cubicTo(68.11, 51.95, 67.72, 51.97, 67.71, 51.96);
    path_2.cubicTo(67.63, 51.45, 67.83, 50.96, 68.16, 50.47);
    path_2.cubicTo(68.28, 50.93, 68.63, 51.35, 68.18, 51.87);
    path_2.lineTo(68.19, 51.86);
    path_2.close();
    path_2.moveTo(36.4, 78.65);
    path_2.cubicTo(36.49, 78.61, 36.69, 78.68, 36.7, 78.75);
    path_2.cubicTo(36.83, 79.32, 36.19, 79.44, 35.96, 79.88);
    path_2.cubicTo(35.92, 79.42, 35.81, 78.92, 36.4, 78.65);
    path_2.close();
    path_2.moveTo(11.36, 159.14);
    path_2.cubicTo(11.37, 159.41, 11.3, 159.63, 11.04, 159.62);
    path_2.cubicTo(10.76, 159.61, 10.59, 159.38, 10.56, 159.07);
    path_2.cubicTo(10.53, 158.8, 10.71, 158.65, 10.91, 158.58);
    path_2.cubicTo(11.2, 158.6, 11.34, 158.82, 11.36, 159.15);
    path_2.lineTo(11.36, 159.14);
    path_2.close();
    path_2.moveTo(17.36, 169.23);
    path_2.cubicTo(17.37, 169.29, 17.22, 169.48, 17.15, 169.47);
    path_2.cubicTo(16.69, 169.43, 16.46, 169.08, 16.31, 168.39);
    path_2.cubicTo(16.81, 168.62, 17.24, 168.68, 17.35, 169.22);
    path_2.lineTo(17.36, 169.23);
    path_2.close();
    path_2.moveTo(50.89, 61.53);
    path_2.cubicTo(51.06, 61.69, 50.96, 61.91, 50.78, 62.08);
    path_2.cubicTo(50.61, 62.24, 50.39, 62.4, 50.21, 62.25);
    path_2.cubicTo(50.02, 62.09, 50.19, 61.88, 50.32, 61.71);
    path_2.cubicTo(50.51, 61.54, 50.71, 61.36, 50.89, 61.53);
    path_2.close();
    path_2.moveTo(56.22, 61.58);
    path_2.cubicTo(56.75, 61.08, 57.1, 60.74, 57.45, 60.41);
    path_2.cubicTo(57.22, 60.87, 57.08, 61.4, 56.22, 61.58);
    path_2.close();
    path_2.moveTo(75.31, 47.26);
    path_2.cubicTo(75.12, 47.34, 74.73, 47.43, 74.71, 47.38);
    path_2.cubicTo(74.61, 47.16, 74.71, 46.89, 74.95, 46.71);
    path_2.cubicTo(75.16, 46.55, 75.37, 46.58, 75.52, 46.72);
    path_2.cubicTo(75.61, 46.95, 75.55, 47.16, 75.31, 47.26);
    path_2.close();
    path_2.moveTo(20.41, 151.52);
    path_2.cubicTo(20.38, 151.47, 20.45, 151.22, 20.51, 151.2);
    path_2.cubicTo(20.93, 151.04, 21.13, 151.35, 21.34, 151.83);
    path_2.cubicTo(20.89, 151.93, 20.6, 151.83, 20.4, 151.53);
    path_2.lineTo(20.41, 151.52);
    path_2.close();
    path_2.moveTo(58.52, 52);
    path_2.cubicTo(58.48, 51.78, 58.35, 51.49, 58.64, 51.28);
    path_2.cubicTo(58.74, 51.2, 59, 51.24, 59.12, 51.32);
    path_2.cubicTo(59.47, 51.54, 59.1, 51.74, 58.93, 51.95);
    path_2.cubicTo(58.78, 52, 58.58, 52.28, 58.52, 52);
    path_2.close();
    path_2.moveTo(64.95, 55.43);
    path_2.cubicTo(64.7, 54.66, 64.93, 54.23, 65.02, 53.59);
    path_2.cubicTo(65.55, 54.21, 65.17, 54.64, 64.95, 55.43);
    path_2.close();
    path_2.moveTo(43.23, 79.19);
    path_2.cubicTo(42.99, 78.64, 42.98, 78.2, 43.91, 77.73);
    path_2.cubicTo(43.62, 78.36, 43.44, 78.75, 43.23, 79.19);
    path_2.close();
    path_2.moveTo(54.75, 59.74);
    path_2.cubicTo(54.46, 60.46, 54.15, 60.68, 53.61, 60.84);
    path_2.cubicTo(53.78, 60.22, 54.14, 60.05, 54.75, 59.74);
    path_2.close();
    path_2.moveTo(21.8, 111.81);
    path_2.cubicTo(21.66, 111.7, 21.67, 111.5, 21.76, 111.32);
    path_2.cubicTo(21.85, 111.14, 22.01, 111, 22.15, 111.13);
    path_2.cubicTo(22.23, 111.22, 22.21, 111.44, 22.22, 111.53);
    path_2.cubicTo(22.08, 111.81, 21.95, 111.93, 21.8, 111.8);
    path_2.lineTo(21.8, 111.81);
    path_2.close();
    path_2.moveTo(27.73, 108.24);
    path_2.cubicTo(27.78, 108.19, 28.01, 108.22, 28.02, 108.27);
    path_2.cubicTo(28.13, 108.75, 27.72, 109.05, 27.58, 109.46);
    path_2.cubicTo(27.7, 109.05, 27.37, 108.62, 27.74, 108.24);
    path_2.lineTo(27.73, 108.24);
    path_2.close();
    path_2.moveTo(55.68, 69.92);
    path_2.cubicTo(55.68, 69.92, 55.89, 70.09, 55.87, 70.17);
    path_2.cubicTo(55.78, 70.56, 55.47, 70.7, 55.02, 70.89);
    path_2.cubicTo(55.02, 70.3, 55.34, 70.09, 55.68, 69.92);
    path_2.close();
    path_2.moveTo(62.91, 40.51);
    path_2.cubicTo(62.7, 40.57, 62.44, 40.82, 62.31, 40.55);
    path_2.cubicTo(62.23, 40.39, 62.31, 40.2, 62.51, 40.09);
    path_2.cubicTo(62.75, 39.96, 62.96, 39.98, 63.15, 40.09);
    path_2.cubicTo(63.23, 40.28, 63.15, 40.43, 62.92, 40.51);
    path_2.lineTo(62.91, 40.51);
    path_2.close();
    path_2.moveTo(9.34004, 157.08);
    path_2.cubicTo(9.10004, 156.65, 9.30004, 156.26, 9.36004, 155.89);
    path_2.cubicTo(9.59004, 156.29, 9.72004, 156.67, 9.34004, 157.08);
    path_2.close();
    path_2.moveTo(53.09, 74.14);
    path_2.cubicTo(52.98, 74.28, 52.82, 74.42, 52.7, 74.26);
    path_2.cubicTo(52.55, 74.05, 52.66, 73.77, 52.79, 73.55);
    path_2.cubicTo(52.89, 73.38, 53.05, 73.35, 53.2, 73.43);
    path_2.cubicTo(53.3, 73.68, 53.27, 73.91, 53.09, 74.14);
    path_2.close();
    path_2.moveTo(65.32, 39.68);
    path_2.cubicTo(64.8, 39.86, 64.42, 39.99, 64.04, 40.12);
    path_2.cubicTo(64.39, 39.43, 64.78, 39.46, 65.32, 39.68);
    path_2.close();
    path_2.moveTo(10.39, 198.62);
    path_2.cubicTo(10.38, 198.55, 10.53, 198.4, 10.62, 198.4);
    path_2.cubicTo(11.03, 198.4, 11.13, 198.78, 11.25, 199.32);
    path_2.cubicTo(10.82, 199.15, 10.47, 199.13, 10.39, 198.63);
    path_2.lineTo(10.39, 198.62);
    path_2.close();
    path_2.moveTo(27, 98.53);
    path_2.cubicTo(26.88, 97.97, 27.15, 97.63, 27.6, 97.36);
    path_2.cubicTo(27.41, 97.73, 27.22, 98.1, 27, 98.53);
    path_2.close();
    path_2.moveTo(22.82, 133.38);
    path_2.cubicTo(22.82, 133.56, 22.73, 133.77, 22.54, 133.67);
    path_2.cubicTo(22.44, 133.62, 22.37, 133.4, 22.36, 133.25);
    path_2.cubicTo(22.35, 133.06, 22.46, 132.93, 22.73, 132.96);
    path_2.cubicTo(22.76, 133.08, 22.82, 133.23, 22.82, 133.39);
    path_2.lineTo(22.82, 133.38);
    path_2.close();
    path_2.moveTo(24.38, 130.51);
    path_2.cubicTo(24.42, 130.59, 24.37, 130.85, 24.32, 130.87);
    path_2.cubicTo(23.98, 131, 23.89, 130.59, 23.3, 130.4);
    path_2.cubicTo(23.9, 130.5, 24.2, 130.13, 24.38, 130.51);
    path_2.close();
    path_2.moveTo(29.4, 97.5);
    path_2.cubicTo(29.66, 98.12, 29.38, 98.4, 28.87, 98.67);
    path_2.cubicTo(28.82, 98.12, 29, 97.79, 29.4, 97.5);
    path_2.close();
    path_2.moveTo(26, 91.94);
    path_2.cubicTo(25.88, 92.05, 25.67, 92.15, 25.57, 92.1);
    path_2.cubicTo(25.36, 92, 25.41, 91.75, 25.56, 91.54);
    path_2.cubicTo(25.71, 91.31, 25.84, 91.47, 25.97, 91.52);
    path_2.cubicTo(26.13, 91.62, 26.17, 91.79, 26, 91.94);
    path_2.close();
    path_2.moveTo(11.07, 128.58);
    path_2.cubicTo(11.37, 129.07, 11.32, 129.38, 10.91, 129.75);
    path_2.cubicTo(10.79, 129.25, 10.95, 128.98, 11.07, 128.58);
    path_2.close();
    path_2.moveTo(50.87, 56.72);
    path_2.cubicTo(50.74, 56.63, 50.62, 56.52, 50.8, 56.33);
    path_2.cubicTo(50.94, 56.17, 51.13, 56.11, 51.23, 56.26);
    path_2.cubicTo(51.31, 56.37, 51.29, 56.56, 51.31, 56.67);
    path_2.cubicTo(51.09, 56.96, 50.98, 56.81, 50.87, 56.73);
    path_2.lineTo(50.87, 56.72);
    path_2.close();
    path_2.moveTo(26.24, 101.14);
    path_2.cubicTo(26.17, 101.27, 26.04, 101.33, 25.95, 101.2);
    path_2.cubicTo(25.81, 100.99, 25.96, 100.79, 26.09, 100.61);
    path_2.cubicTo(26.17, 100.49, 26.28, 100.41, 26.4, 100.55);
    path_2.cubicTo(26.5, 100.76, 26.35, 100.96, 26.25, 101.15);
    path_2.lineTo(26.24, 101.14);
    path_2.close();
    path_2.moveTo(26.68, 115.78);
    path_2.cubicTo(26.68, 115.78, 26.55, 115.81, 26.48, 115.83);
    path_2.cubicTo(26.48, 115.66, 26.47, 115.5, 26.48, 115.33);
    path_2.cubicTo(26.48, 115.32, 26.61, 115.3, 26.74, 115.27);
    path_2.cubicTo(26.72, 115.45, 26.72, 115.62, 26.68, 115.78);
    path_2.close();
    path_2.moveTo(17.9, 191.38);
    path_2.cubicTo(17.9, 191.38, 18.14, 191.48, 18.18, 191.57);
    path_2.cubicTo(18.33, 191.98, 18.02, 192.1, 17.83, 192.45);
    path_2.cubicTo(17.62, 191.89, 17.72, 191.6, 17.91, 191.38);
    path_2.lineTo(17.9, 191.38);
    path_2.close();
    path_2.moveTo(13.43, 201.75);
    path_2.cubicTo(13.5, 201.67, 13.55, 201.57, 13.63, 201.53);
    path_2.cubicTo(13.68, 201.51, 13.8, 201.57, 13.83, 201.63);
    path_2.cubicTo(13.91, 201.79, 13.83, 201.88, 13.67, 201.93);
    path_2.cubicTo(13.61, 201.88, 13.52, 201.81, 13.43, 201.75);
    path_2.close();
    path_2.moveTo(41.41, 82.33);
    path_2.cubicTo(41.47, 82.23, 41.53, 82.05, 41.6, 82.04);
    path_2.cubicTo(41.91, 81.99, 42.11, 82.13, 42.19, 82.57);
    path_2.cubicTo(41.8, 82.69, 41.64, 82.41, 41.41, 82.33);
    path_2.close();
    path_2.moveTo(22.41, 185.25);
    path_2.cubicTo(22.47, 185.33, 22.56, 185.4, 22.59, 185.5);
    path_2.cubicTo(22.61, 185.54, 22.52, 185.62, 22.49, 185.68);
    path_2.cubicTo(22.42, 185.61, 22.35, 185.54, 22.26, 185.45);
    path_2.cubicTo(22.33, 185.36, 22.37, 185.3, 22.42, 185.25);
    path_2.lineTo(22.41, 185.25);
    path_2.close();
    path_2.moveTo(17.26, 191.17);
    path_2.cubicTo(17.29, 191.32, 17.24, 191.57, 17.06, 191.5);
    path_2.cubicTo(16.96, 191.46, 16.89, 191.21, 16.84, 191.04);
    path_2.cubicTo(16.8, 190.91, 16.81, 190.76, 17.03, 190.77);
    path_2.cubicTo(17.1, 190.88, 17.23, 191.02, 17.26, 191.17);
    path_2.close();
    path_2.moveTo(20.04, 127.62);
    path_2.cubicTo(20.04, 127.62, 19.91, 127.64, 19.85, 127.65);
    path_2.cubicTo(19.87, 127.53, 19.87, 127.41, 19.9, 127.29);
    path_2.cubicTo(19.9, 127.27, 20.02, 127.28, 20.13, 127.27);
    path_2.cubicTo(20.1, 127.4, 20.09, 127.52, 20.04, 127.62);
    path_2.close();
    path_2.moveTo(13.56, 199.66);
    path_2.cubicTo(13.58, 199.73, 13.55, 199.85, 13.5, 199.89);
    path_2.cubicTo(13.38, 199.99, 13.28, 199.89, 13.25, 199.74);
    path_2.cubicTo(13.23, 199.63, 13.29, 199.51, 13.34, 199.29);
    path_2.cubicTo(13.45, 199.47, 13.53, 199.56, 13.55, 199.66);
    path_2.lineTo(13.56, 199.66);
    path_2.close();
    path_2.moveTo(68.94, 47.53);
    path_2.cubicTo(69.08, 48.02, 68.6, 48.06, 68.17, 48.44);
    path_2.cubicTo(68.37, 47.87, 68.6, 47.67, 68.94, 47.53);
    path_2.close();
    path_2.moveTo(29.11, 115.26);
    path_2.cubicTo(29.08, 115.42, 28.93, 115.46, 28.85, 115.35);
    path_2.cubicTo(28.79, 115.28, 28.81, 115.12, 28.83, 115);
    path_2.cubicTo(28.83, 114.97, 28.95, 114.94, 29.04, 114.9);
    path_2.cubicTo(29.07, 115.02, 29.13, 115.14, 29.11, 115.25);
    path_2.lineTo(29.11, 115.26);
    path_2.close();
    path_2.moveTo(20.17, 189.93);
    path_2.cubicTo(20.44, 190.32, 20.09, 190.59, 20.15, 191.04);
    path_2.cubicTo(19.98, 190.57, 19.83, 190.23, 20.17, 189.93);
    path_2.close();

    Paint paint2Fill = Paint()..style = PaintingStyle.fill;
    paint2Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_2, paint2Fill);

    Path path_3 = Path();
    path_3.moveTo(82.84, 287.71);
    path_3.cubicTo(83, 288.14, 82.83, 288.61, 83.62, 288.89);
    path_3.cubicTo(85.24, 289.42, 86.83, 290.04, 88.17, 291.16);
    path_3.cubicTo(88.4, 291.35, 88.67, 291.42, 88.79, 291.23);
    path_3.cubicTo(89.1, 290.74, 89.73, 290.27, 89.33, 289.61);
    path_3.cubicTo(88.9, 288.88, 88.97, 288.52, 89.53, 288.04);
    path_3.cubicTo(90.04, 287.6, 90.75, 286.95, 89.36, 286.2);
    path_3.cubicTo(89.01, 286.01, 88.84, 285.48, 89.39, 285.49);
    path_3.cubicTo(90.09, 285.5, 90.7, 285.23, 91.53, 285.61);
    path_3.cubicTo(92.6, 286.1, 93.02, 286.4, 92.23, 287.22);
    path_3.cubicTo(91.68, 287.78, 92.14, 288.91, 93.06, 289.34);
    path_3.cubicTo(94.45, 290.02, 94.96, 291.03, 94.68, 292.25);
    path_3.cubicTo(94.54, 292.86, 94.87, 293.71, 93.49, 293.12);
    path_3.cubicTo(93.14, 292.97, 92.97, 293.36, 92.81, 293.59);
    path_3.cubicTo(92.61, 293.87, 92.29, 294.15, 91.9, 293.94);
    path_3.cubicTo(91.08, 293.5, 90.67, 293.91, 90.11, 294.12);
    path_3.cubicTo(89.67, 294.29, 88.94, 294.68, 89.2, 293.59);
    path_3.cubicTo(89.31, 293.13, 88.92, 292.74, 88.45, 292.49);
    path_3.cubicTo(85.91, 291.1, 83.42, 289.59, 80.59, 289.01);
    path_3.cubicTo(79.33, 288.77, 78.29, 287.5, 76.9, 287.84);
    path_3.cubicTo(76.72, 287.88, 76.39, 287.54, 76.28, 287.25);
    path_3.cubicTo(75.91, 286.33, 75.42, 285.8, 74.2, 285.58);
    path_3.cubicTo(72.88, 285.34, 72.52, 285.4, 72.89, 286.62);
    path_3.cubicTo(73.06, 287.19, 73.15, 287.76, 73.35, 288.33);
    path_3.cubicTo(73.66, 289.23, 74.82, 289.87, 75.4, 289.45);
    path_3.cubicTo(75.74, 289.2, 75.94, 288.56, 76.54, 288.97);
    path_3.cubicTo(77.1, 289.36, 76.48, 289.78, 76.44, 290.2);
    path_3.cubicTo(76.42, 290.42, 76.09, 290.57, 76.41, 290.89);
    path_3.cubicTo(77.44, 291.13, 78.28, 291.55, 79.21, 292.28);
    path_3.cubicTo(80.2, 293.03, 80.81, 294.15, 82.01, 294.66);
    path_3.lineTo(81.98, 294.66);
    path_3.cubicTo(82.41, 294.46, 82.59, 293.39, 83.21, 294.06);
    path_3.cubicTo(84.28, 295.21, 85.69, 296.08, 86.68, 297.29);
    path_3.cubicTo(88.04, 298.98, 90.27, 298.76, 92.02, 299.6);
    path_3.cubicTo(92.11, 299.64, 92.28, 299.54, 92.4, 299.48);
    path_3.cubicTo(92.68, 299.34, 92.96, 299.15, 93.31, 299.52);
    path_3.cubicTo(93.54, 299.77, 93.54, 300.06, 93.35, 300.22);
    path_3.cubicTo(93.02, 300.52, 92.89, 300.77, 93.5, 301.13);
    path_3.cubicTo(94.02, 301.43, 94.47, 301.37, 94.69, 301.05);
    path_3.cubicTo(95.3, 300.18, 96.81, 300.2, 97.35, 299.27);
    path_3.cubicTo(97.55, 298.93, 98.07, 299, 98.39, 299.3);
    path_3.cubicTo(99.72, 300.52, 101.45, 300.46, 102.99, 300.83);
    path_3.cubicTo(103.95, 301.03, 103.71, 301.72, 104.31, 301.96);
    path_3.cubicTo(104.06, 302.35, 103.67, 302.38, 103.15, 302.14);
    path_3.cubicTo(102.82, 301.99, 102.56, 302.06, 102.29, 302.31);
    path_3.cubicTo(102.67, 302.71, 103.51, 302.9, 103.33, 303.65);
    path_3.cubicTo(103.27, 303.9, 103.86, 304.72, 104.75, 304.71);
    path_3.cubicTo(105.19, 304.71, 105.54, 304.59, 105.55, 304.19);
    path_3.cubicTo(105.55, 304.03, 104.94, 303.7, 105.64, 303.77);
    path_3.cubicTo(105.89, 303.79, 106.19, 304.03, 106.14, 304.23);
    path_3.cubicTo(105.88, 305.51, 107.14, 305.68, 108.17, 305.97);
    path_3.cubicTo(109.95, 306.46, 111.79, 306.7, 113.54, 307.25);
    path_3.cubicTo(114.79, 307.61, 116, 307.57, 117.21, 307.84);
    path_3.cubicTo(117.83, 307.98, 118.44, 308.63, 119.05, 308.19);
    path_3.cubicTo(119.87, 307.59, 118.3, 307.72, 118.41, 307.29);
    path_3.cubicTo(118.45, 307.14, 118.52, 306.98, 118.48, 306.83);
    path_3.cubicTo(118.43, 306.61, 118.15, 306.4, 117.92, 306.5);
    path_3.cubicTo(116.15, 307.29, 114.5, 305.31, 112.69, 305.82);
    path_3.cubicTo(112.23, 305.95, 111.33, 305.6, 111.1, 305.12);
    path_3.cubicTo(110.89, 304.67, 111.61, 304.56, 112.01, 304.36);
    path_3.cubicTo(112.17, 304.28, 112.34, 304.17, 112.39, 304.03);
    path_3.cubicTo(112.77, 302.85, 113.84, 302.91, 115.12, 303.2);
    path_3.cubicTo(115.6, 303.31, 116.21, 303.58, 116.57, 303.08);
    path_3.cubicTo(117.64, 301.58, 118.54, 301.45, 120.38, 302.59);
    path_3.cubicTo(120.98, 302.96, 121.58, 302.97, 121.78, 302.54);
    path_3.cubicTo(122.44, 301.17, 122.63, 302.01, 123.06, 302.73);
    path_3.cubicTo(123.27, 303.09, 123.76, 303.4, 124.34, 303.22);
    path_3.cubicTo(124.69, 303.11, 125.23, 302.98, 125.02, 302.61);
    path_3.cubicTo(124.56, 301.79, 124.63, 301.13, 125.21, 300.48);
    path_3.cubicTo(125.37, 300.3, 125.11, 300.07, 124.86, 300.02);
    path_3.cubicTo(124.14, 299.89, 123.77, 299.29, 123.13, 299.08);
    path_3.cubicTo(123.33, 300.4, 122.67, 300.93, 121.2, 300.64);
    path_3.cubicTo(120.93, 300.59, 120.71, 300.51, 120.64, 300.29);
    path_3.cubicTo(120.54, 300, 120.8, 300, 121.04, 299.95);
    path_3.cubicTo(121.83, 299.79, 122.29, 299.16, 123.15, 299.11);
    path_3.cubicTo(122.91, 297.96, 121.78, 297.27, 120.96, 296.46);
    path_3.cubicTo(120.46, 295.97, 120.52, 295.56, 120.72, 295.13);
    path_3.cubicTo(121.01, 294.52, 121.45, 295.08, 121.84, 295.12);
    path_3.cubicTo(122.48, 295.18, 123.6, 295.53, 122.97, 294.29);
    path_3.cubicTo(122.87, 294.09, 122.95, 293.86, 123.26, 293.85);
    path_3.cubicTo(123.84, 293.83, 124.49, 293.87, 124.86, 294.28);
    path_3.cubicTo(125.38, 294.86, 125.94, 295.58, 125.78, 296.28);
    path_3.cubicTo(125.68, 296.74, 124.97, 296.62, 124.42, 296.43);
    path_3.cubicTo(124.04, 296.3, 123.77, 296.43, 123.73, 296.8);
    path_3.cubicTo(123.69, 297.24, 123.6, 297.71, 124.04, 298.08);
    path_3.cubicTo(124.43, 298.41, 124.62, 298.05, 124.84, 297.88);
    path_3.cubicTo(125.69, 297.24, 126.52, 297.07, 127.77, 297.57);
    path_3.cubicTo(129.02, 298.09, 129.78, 297.64, 129.9, 296.54);
    path_3.cubicTo(129.93, 296.27, 130.03, 296.07, 130.29, 295.96);
    path_3.cubicTo(130.99, 295.67, 131.1, 295.36, 130.32, 294.95);
    path_3.cubicTo(130.05, 294.81, 129.88, 294.57, 130.09, 294.34);
    path_3.cubicTo(130.33, 294.07, 130.58, 294.29, 130.8, 294.44);
    path_3.cubicTo(131.21, 294.74, 131.66, 294.95, 131.98, 294.46);
    path_3.cubicTo(132.25, 294.04, 132.71, 294.24, 133.07, 294.14);
    path_3.cubicTo(134.02, 293.89, 134.78, 294.35, 135.61, 294.62);
    path_3.cubicTo(136.27, 294.83, 136.91, 294.77, 137.41, 294.3);
    path_3.cubicTo(137.82, 293.91, 137.63, 293.54, 137.28, 293.23);
    path_3.cubicTo(136.21, 292.28, 136.29, 291.36, 137.12, 290.38);
    path_3.cubicTo(137.34, 290.12, 137.4, 289.78, 137.1, 289.49);
    path_3.cubicTo(136.86, 289.25, 136.55, 289.27, 136.22, 289.32);
    path_3.cubicTo(134.46, 289.61, 132.84, 289.88, 131.64, 291.15);
    path_3.cubicTo(131.49, 291.3, 131.24, 291.36, 131.01, 291.27);
    path_3.cubicTo(130.66, 291.13, 130.69, 290.88, 130.86, 290.67);
    path_3.cubicTo(131.25, 290.22, 130.97, 290.07, 130.49, 289.92);
    path_3.cubicTo(130.16, 289.82, 129.81, 289.7, 129.72, 289.3);
    path_3.cubicTo(129.42, 287.93, 128.57, 287.03, 127.08, 286.44);
    path_3.cubicTo(126.38, 286.17, 125.94, 285.75, 126.76, 285.12);
    path_3.cubicTo(127.23, 284.76, 127, 284.45, 126.37, 284.39);
    path_3.cubicTo(125.34, 284.29, 124.42, 284.68, 123.43, 284.82);
    path_3.cubicTo(122.55, 284.95, 122.17, 285.39, 122.78, 286.18);
    path_3.cubicTo(123.11, 286.6, 123.25, 287.06, 123.12, 287.56);
    path_3.cubicTo(122.96, 288.14, 123.36, 288.45, 123.84, 288.76);
    path_3.cubicTo(124.34, 289.08, 125.16, 289.25, 125.01, 289.99);
    path_3.cubicTo(124.87, 290.67, 124.31, 291.07, 123.51, 291.17);
    path_3.cubicTo(122.96, 291.24, 122.48, 291.34, 122.71, 291.98);
    path_3.cubicTo(122.79, 292.21, 122.78, 292.41, 122.45, 292.38);
    path_3.cubicTo(122.29, 292.37, 121.99, 292.18, 122.01, 292.13);
    path_3.cubicTo(122.27, 291.22, 121.14, 290.72, 121.01, 290.04);
    path_3.cubicTo(120.77, 288.72, 119.39, 288.7, 118.91, 288.8);
    path_3.cubicTo(117.46, 289.08, 116.01, 288.61, 114.58, 288.76);
    path_3.cubicTo(113.81, 288.83, 113.48, 288.45, 113.68, 287.87);
    path_3.cubicTo(114.11, 286.62, 112.62, 285.5, 113.06, 284.26);
    path_3.cubicTo(113.13, 284.07, 112.76, 283.85, 112.48, 283.79);
    path_3.cubicTo(111.51, 283.58, 110.5, 283.26, 109.73, 284.06);
    path_3.cubicTo(109.45, 284.35, 109.08, 284.5, 108.86, 284.09);
    path_3.cubicTo(108.43, 283.23, 107.62, 283.15, 106.84, 282.9);
    path_3.cubicTo(106.25, 282.71, 105.68, 282.43, 105.39, 281.92);
    path_3.cubicTo(105.67, 281.39, 107.13, 282.15, 106.56, 280.96);
    path_3.cubicTo(106.27, 280.36, 105.61, 280.53, 105.12, 280.64);
    path_3.cubicTo(104.61, 280.75, 103.9, 280.67, 103.82, 281.39);
    path_3.cubicTo(103.68, 282.83, 103.97, 283.18, 105.64, 283.65);
    path_3.cubicTo(106.02, 283.76, 106.55, 283.78, 106.55, 284.28);
    path_3.cubicTo(106.55, 284.73, 106.07, 284.77, 105.66, 284.81);
    path_3.cubicTo(105.02, 284.89, 104.25, 284.68, 103.83, 285.29);
    path_3.cubicTo(103.66, 285.54, 103.62, 285.95, 103.06, 285.66);
    path_3.cubicTo(102.64, 285.44, 102.02, 285.22, 102.08, 284.81);
    path_3.cubicTo(102.25, 283.45, 100.88, 282, 101.66, 280.65);
    path_3.cubicTo(101.83, 280.35, 101.64, 279.96, 101.35, 279.75);
    path_3.cubicTo(100.95, 279.47, 100.65, 279.8, 100.48, 280.02);
    path_3.cubicTo(100.16, 280.43, 99.75, 280.63, 99.24, 280.38);
    path_3.cubicTo(98.69, 280.11, 99.1, 279.76, 99.17, 279.43);
    path_3.cubicTo(99.32, 278.77, 98.76, 278.37, 98.29, 277.98);
    path_3.cubicTo(98.13, 277.84, 97.87, 277.73, 97.67, 277.87);
    path_3.cubicTo(97.15, 278.26, 97.62, 278.7, 97.78, 279.09);
    path_3.cubicTo(98.03, 279.74, 97.95, 279.88, 97.15, 279.71);
    path_3.cubicTo(96.45, 279.58, 95.76, 279.72, 95.03, 279.54);
    path_3.cubicTo(94.54, 279.41, 94.24, 279.6, 94.44, 280.24);
    path_3.cubicTo(94.59, 280.74, 95, 281.3, 94.68, 281.81);
    path_3.cubicTo(94.29, 282.41, 94.41, 282.77, 95.29, 282.95);
    path_3.cubicTo(95.8, 283.04, 96.44, 284.98, 96.1, 285.27);
    path_3.cubicTo(95.98, 285.37, 95.76, 285.47, 95.62, 285.43);
    path_3.cubicTo(94.78, 285.19, 93.72, 285.38, 93.19, 284.52);
    path_3.cubicTo(92.72, 283.79, 92.15, 282.97, 93.08, 282.28);
    path_3.cubicTo(93.45, 282.01, 93.53, 281.53, 92.7, 281.49);
    path_3.cubicTo(92.42, 281.47, 92.08, 281.49, 92.08, 281.15);
    path_3.cubicTo(92.08, 280.73, 92.42, 280.83, 92.77, 280.89);
    path_3.cubicTo(93.53, 281.03, 93.93, 280.41, 93.43, 280.1);
    path_3.cubicTo(92.4, 279.47, 92.6, 278.41, 91.83, 277.77);
    path_3.cubicTo(91.56, 277.55, 91.18, 277.28, 91.44, 276.93);
    path_3.cubicTo(91.64, 276.65, 92.01, 276.88, 92.31, 276.91);
    path_3.cubicTo(93.66, 277.03, 94.99, 277.16, 96.29, 277.01);
    path_3.cubicTo(96.61, 276.97, 96.87, 276.83, 96.83, 276.47);
    path_3.cubicTo(96.8, 276.21, 96.54, 276.08, 96.34, 276.16);
    path_3.cubicTo(94.99, 276.67, 93.7, 275.98, 92.4, 275.56);
    path_3.cubicTo(91.68, 275.33, 91.17, 275.32, 90.65, 275.86);
    path_3.cubicTo(89.99, 276.55, 88.63, 276.31, 88.35, 275.41);
    path_3.cubicTo(87.98, 274.24, 87.65, 273.32, 86.22, 272.9);
    path_3.cubicTo(85.73, 272.76, 85.79, 271.91, 85.2, 271.56);
    path_3.cubicTo(83.93, 270.83, 82.82, 269.82, 81.28, 269.65);
    path_3.cubicTo(80.83, 269.6, 80.44, 269.3, 80.12, 268.96);
    path_3.cubicTo(78.75, 267.46, 78.75, 267.46, 77.33, 268.73);
    path_3.cubicTo(77.51, 269.03, 77.9, 269.24, 78.12, 269.2);
    path_3.cubicTo(79.38, 268.99, 79.47, 270, 79.86, 270.68);
    path_3.cubicTo(80.09, 271.11, 80.11, 271.57, 79.7, 271.79);
    path_3.cubicTo(79.19, 272.05, 79.05, 271.48, 78.78, 271.22);
    path_3.cubicTo(78.32, 270.71, 78.02, 270.06, 77.3, 269.79);
    path_3.cubicTo(76.8, 269.6, 76.29, 269.42, 76.08, 269.99);
    path_3.cubicTo(75.88, 270.54, 75.59, 271.08, 74.9, 270.5);
    path_3.cubicTo(74.34, 270.03, 73.93, 269.32, 74.65, 268.74);
    path_3.cubicTo(75.16, 268.33, 75.1, 267.78, 74.82, 267.15);
    path_3.cubicTo(74.48, 266.44, 74.08, 265.66, 74.08, 264.93);
    path_3.cubicTo(74.07, 264.25, 73.76, 263.9, 73.33, 263.49);
    path_3.cubicTo(72.16, 262.37, 72.04, 261.63, 72.82, 260.25);
    path_3.cubicTo(72.97, 260.54, 73.08, 260.82, 73.25, 261.07);
    path_3.cubicTo(73.48, 261.41, 73.5, 261.97, 74.07, 262.02);
    path_3.cubicTo(74.46, 262.05, 74.62, 261.72, 74.8, 261.46);
    path_3.cubicTo(75.13, 260.97, 74.79, 260.4, 74.47, 260.23);
    path_3.cubicTo(73.47, 259.69, 73.1, 258.62, 72.35, 258.04);
    path_3.cubicTo(71.06, 256.99, 69.84, 255.84, 68.5, 254.84);
    path_3.cubicTo(68.12, 254.56, 67.72, 254.28, 67.39, 254.73);
    path_3.cubicTo(67.11, 255.1, 67.23, 255.52, 67.63, 255.85);
    path_3.cubicTo(67.93, 256.09, 68.42, 256.25, 68.09, 256.72);
    path_3.cubicTo(67.75, 257.2, 67.4, 257.62, 66.62, 257.58);
    path_3.cubicTo(66.06, 257.55, 65.94, 257.34, 65.81, 256.93);
    path_3.cubicTo(65.47, 255.79, 64.37, 255.83, 63.6, 255.44);
    path_3.cubicTo(63.14, 255.2, 62.71, 255.96, 63.14, 256.31);
    path_3.cubicTo(63.73, 256.78, 64.25, 258.14, 65.37, 257.08);
    path_3.cubicTo(64.32, 259, 66.69, 259.66, 67.14, 260.96);
    path_3.cubicTo(65.75, 260.17, 64.33, 259.37, 62.94, 258.59);
    path_3.cubicTo(62.58, 258.38, 61.97, 258.25, 61.68, 258.4);
    path_3.cubicTo(60.68, 258.93, 59.96, 258.29, 59.19, 257.63);
    path_3.lineTo(59.22, 257.63);
    path_3.cubicTo(59.16, 257.74, 59.08, 257.83, 59.04, 257.95);
    path_3.cubicTo(58.85, 258.49, 58.76, 259.2, 57.95, 259);
    path_3.cubicTo(57.13, 258.8, 57.11, 258.06, 57.07, 257.46);
    path_3.cubicTo(57, 256.54, 56.27, 256.14, 55.61, 255.73);
    path_3.cubicTo(55.2, 255.48, 54.44, 255.47, 54.91, 254.82);
    path_3.cubicTo(55.2, 254.42, 55.27, 253.29, 56.35, 254.12);
    path_3.cubicTo(57, 254.63, 57.37, 254.33, 57.2, 253.74);
    path_3.cubicTo(56.73, 252.08, 57.49, 252.32, 58.55, 252.8);
    path_3.cubicTo(58.91, 252.96, 59.32, 253.06, 59.68, 253.05);
    path_3.cubicTo(60.14, 253.04, 60.58, 252.86, 61.02, 253.29);
    path_3.cubicTo(61.3, 253.57, 61.77, 254.08, 61.96, 253.65);
    path_3.cubicTo(62.27, 252.94, 63.53, 253.06, 63.31, 252);
    path_3.cubicTo(63.22, 251.58, 63.08, 251.08, 62.59, 250.97);
    path_3.cubicTo(61.99, 250.83, 62.01, 251.35, 61.91, 251.75);
    path_3.cubicTo(61.66, 252.76, 61.18, 252.71, 60.3, 252.13);
    path_3.cubicTo(58.77, 251.11, 57.77, 249.11, 55.61, 249.12);
    path_3.cubicTo(55.39, 249.12, 54.59, 248.93, 54.9, 248.44);
    path_3.cubicTo(55.19, 247.97, 53.7, 248.66, 54.06, 248.29);
    path_3.cubicTo(54.69, 248.43, 55.85, 248.31, 56.59, 247.92);
    path_3.cubicTo(57.1, 247.65, 57.89, 248.07, 57.99, 247.75);
    path_3.cubicTo(58.58, 245.78, 59.26, 247.71, 59.77, 247.94);
    path_3.cubicTo(60.49, 248.27, 61.03, 249.1, 62.01, 249.13);
    path_3.cubicTo(61.19, 247.9, 60.18, 247.11, 59.14, 246.27);
    path_3.cubicTo(58.25, 245.56, 57.85, 245.33, 57.26, 246.24);
    path_3.cubicTo(57.06, 246.55, 55.24, 248.1, 54.81, 247.93);
    path_3.cubicTo(54.46, 247.79, 54.46, 247.44, 54.4, 247.14);
    path_3.cubicTo(54.23, 246.17, 54.22, 246.17, 53.33, 246.29);
    path_3.cubicTo(52.98, 246.34, 52.93, 245.98, 52.75, 245.82);
    path_3.cubicTo(50.81, 244.06, 49.16, 243.21, 47.44, 242.47);
    path_3.cubicTo(45.58, 241.66, 43.9, 241.63, 42.15, 241.95);
    path_3.cubicTo(41.39, 242.09, 40.29, 242.25, 39.75, 241.5);
    path_3.cubicTo(39.3, 240.87, 40.06, 240.15, 40.48, 239.59);
    path_3.cubicTo(40.66, 239.35, 40.8, 239.07, 40.66, 238.74);
    path_3.cubicTo(40.43, 238.23, 40.15, 238.6, 39.91, 238.63);
    path_3.cubicTo(39.48, 238.69, 39.25, 238.52, 39.17, 238.05);
    path_3.cubicTo(39.12, 237.73, 39.04, 237.26, 38.71, 237.26);
    path_3.cubicTo(37.43, 237.24, 37.14, 235.96, 36.45, 235.2);
    path_3.cubicTo(36.22, 234.94, 35.87, 234.56, 36.12, 234.21);
    path_3.cubicTo(36.37, 233.87, 36.77, 233.96, 37.15, 234.21);
    path_3.cubicTo(37.88, 234.69, 38.63, 235.11, 39.21, 235.84);
    path_3.cubicTo(39.79, 236.54, 40.54, 236.3, 41.1, 236.14);
    path_3.cubicTo(41.4, 236.05, 41.44, 235.28, 41.02, 234.98);
    path_3.cubicTo(40.04, 234.22, 39.91, 233.03, 39.36, 232.07);
    path_3.cubicTo(38.5, 230.57, 38.98, 229.37, 40.47, 229.16);
    path_3.cubicTo(40.83, 229.11, 41.25, 229.24, 41.49, 228.89);
    path_3.cubicTo(41.92, 228.26, 42.39, 228.01, 43.11, 228.75);
    path_3.cubicTo(43.46, 229.12, 43.69, 228.94, 43.77, 228.48);
    path_3.cubicTo(43.82, 228.17, 43.95, 227.88, 44.06, 227.55);
    path_3.cubicTo(43.68, 227.44, 43.35, 227.6, 42.99, 227.22);
    path_3.cubicTo(42.41, 226.6, 42.42, 225.96, 42.49, 225.25);
    path_3.cubicTo(42.59, 224.14, 42.59, 224.18, 41.53, 223.89);
    path_3.cubicTo(41.23, 223.81, 40.94, 223.43, 41.06, 223.04);
    path_3.cubicTo(41.18, 222.65, 41.02, 222.26, 41.07, 221.89);
    path_3.cubicTo(41.19, 221.04, 40.78, 220.3, 40.32, 219.7);
    path_3.cubicTo(39.73, 218.95, 39.93, 220.12, 39.63, 220.13);
    path_3.cubicTo(38.86, 220.17, 37.54, 218.18, 37.79, 217.38);
    path_3.cubicTo(38.1, 216.39, 37.62, 215.9, 36.62, 215.67);
    path_3.cubicTo(35.64, 215.45, 34.87, 215.8, 33.9, 216.05);
    path_3.cubicTo(34.03, 215.74, 34.05, 215.58, 34.13, 215.52);
    path_3.cubicTo(34.6, 215.21, 35.25, 214.92, 34.95, 214.17);
    path_3.cubicTo(34.59, 213.25, 34.06, 212.28, 33.13, 211.93);
    path_3.cubicTo(31.83, 211.44, 31.27, 211.98, 31.36, 213.47);
    path_3.cubicTo(31.37, 213.7, 31.4, 213.93, 31.45, 214.15);
    path_3.cubicTo(31.63, 214.92, 31.45, 215.25, 30.7, 215.4);
    path_3.cubicTo(29.81, 215.58, 29.14, 216.18, 29.37, 217.49);
    path_3.cubicTo(29.49, 218.13, 29.3, 218.36, 28.65, 218.27);
    path_3.cubicTo(27.47, 218.1, 27.12, 218.63, 27.45, 220);
    path_3.cubicTo(27.58, 220.51, 27.68, 221.02, 27.79, 221.53);
    path_3.cubicTo(27.85, 221.8, 28.07, 222.13, 27.84, 222.31);
    path_3.cubicTo(27.56, 222.52, 27.29, 222.2, 27.04, 221.99);
    path_3.cubicTo(26.78, 221.77, 26.64, 221.48, 26.48, 221.16);
    path_3.cubicTo(25.39, 218.86, 25.48, 218.87, 23.92, 220.21);
    path_3.cubicTo(23.22, 220.82, 23.29, 221.33, 24.05, 222.02);
    path_3.cubicTo(24.5, 222.44, 24.91, 222.93, 24.69, 223.76);
    path_3.cubicTo(24.01, 222.9, 23.25, 222.19, 22.52, 221.48);
    path_3.cubicTo(21.81, 220.77, 21.08, 220.08, 20.4, 219.32);
    path_3.cubicTo(20.08, 218.96, 19.64, 218.63, 19.23, 218.87);
    path_3.cubicTo(18.86, 219.09, 19.11, 219.53, 19.27, 219.9);
    path_3.cubicTo(19.9767, 221.52, 19.6367, 222.353, 18.25, 222.4);
    path_3.cubicTo(17.86, 222.41, 17.33, 222.21, 17.24, 222.84);
    path_3.cubicTo(17.16, 223.41, 17.45, 223.92, 17.83, 224.37);
    path_3.cubicTo(18, 224.57, 18.39, 224.54, 18.35, 224.93);
    path_3.cubicTo(18.14, 225.32, 17.51, 224.63, 17.51, 225.16);
    path_3.cubicTo(17.51, 225.62, 17.95, 225.94, 18.39, 226.03);
    path_3.cubicTo(18.65, 226.09, 19.18, 225.92, 19.09, 226.42);
    path_3.cubicTo(18.84, 227.84, 19.77, 229.02, 20.12, 230.32);
    path_3.cubicTo(20.5, 231.77, 21.17, 232.23, 22.25, 232.04);
    path_3.cubicTo(22.25, 232.71, 21.95, 233.09, 21.54, 233.34);
    path_3.cubicTo(21.83, 233.72, 22.07, 233.78, 22.34, 233.78);
    path_3.cubicTo(22.89, 233.78, 23.49, 233.99, 23.51, 234.74);
    path_3.cubicTo(23.53, 235.36, 23.74, 236.44, 22.55, 235.91);
    path_3.cubicTo(22.08, 235.7, 21.36, 235.73, 21.5, 236.36);
    path_3.cubicTo(21.92, 238.27, 20.33, 237.9, 19.76, 238.66);
    path_3.cubicTo(19.57, 238.92, 19.1, 238.83, 19.26, 239.48);
    path_3.cubicTo(19.43, 240.14, 19.79, 239.98, 20.11, 240.05);
    path_3.cubicTo(21.62, 240.39, 22.41, 241.06, 23.15, 242.64);
    path_3.cubicTo(23.19, 242.73, 23.28, 242.88, 23.32, 242.89);
    path_3.cubicTo(24.36, 242.94, 24.21, 243.77, 24.4, 244.48);
    path_3.cubicTo(24.7, 245.66, 25.46, 246.5, 26.29, 246.87);
    path_3.cubicTo(27.12, 247.24, 28.01, 247.15, 28.67, 246.46);
    path_3.cubicTo(28.93, 246.19, 29.22, 246.17, 29.6, 246.37);
    path_3.cubicTo(30.07, 246.62, 30.24, 246.32, 30.37, 246);
    path_3.cubicTo(30.54, 245.58, 30.22, 245.29, 29.9, 245);
    path_3.cubicTo(29.56, 244.7, 29.19, 244.42, 28.88, 244.07);
    path_3.cubicTo(28.48, 243.63, 28.48, 243.15, 28.67, 242.72);
    path_3.cubicTo(28.78, 242.47, 28.94, 242.32, 29.27, 242.45);
    path_3.cubicTo(29.74, 242.65, 30.05, 242.97, 30.25, 243.51);
    path_3.cubicTo(30.98, 245.4, 32.46, 246.53, 34.02, 246.96);
    path_3.cubicTo(35.01, 247.24, 35.01, 247.96, 34.86, 248.18);
    path_3.cubicTo(34.42, 248.81, 34.84, 249.22, 35.23, 249.79);
    path_3.cubicTo(35.87, 250.72, 35.99, 251.53, 34.92, 251.77);
    path_3.cubicTo(34.61, 251.84, 34.69, 252.07, 34.83, 252.28);
    path_3.cubicTo(35.09, 252.66, 35.39, 252.8, 35.79, 252.73);
    path_3.cubicTo(36.97, 252.53, 37.86, 253.12, 38.38, 254.32);
    path_3.cubicTo(38.55, 254.67, 38.88, 254.99, 39.03, 255.34);
    path_3.cubicTo(39.39, 256.2, 40.47, 257.3, 38.95, 257.64);
    path_3.cubicTo(38.67, 257.7, 38.45, 258.25, 38.65, 258.31);
    path_3.cubicTo(39.53, 258.59, 40.09, 259.86, 40.9, 259.73);
    path_3.cubicTo(42.06, 259.55, 43.62, 258.67, 43.43, 259.55);
    path_3.cubicTo(43.34, 260.02, 43.34, 260.2, 43.98, 260.72);
    path_3.cubicTo(44.83, 261.42, 46.43, 261.93, 46.27, 263.5);
    path_3.cubicTo(46.21, 264.04, 46.26, 264.64, 46.08, 265.11);
    path_3.cubicTo(45.68, 266.16, 46.66, 266.74, 47.32, 267.17);
    path_3.cubicTo(48.16, 267.75, 48.19, 267.01, 48.29, 266.46);
    path_3.cubicTo(48.39, 265.95, 48.89, 265.96, 49.36, 266.12);
    path_3.cubicTo(50.12, 266.37, 49.67, 266.7, 49.63, 267.05);
    path_3.cubicTo(49.44, 268.62, 50.26, 269.48, 52.04, 269.6);
    path_3.cubicTo(52.39, 269.62, 52.63, 269.73, 52.9, 270.05);
    path_3.cubicTo(53.07, 270.27, 53.44, 270.49, 53.65, 270.49);
    path_3.cubicTo(54.61, 270.46, 54.95, 270.75, 55.14, 271.95);
    path_3.cubicTo(54.63, 271.62, 54.15, 271.2, 53.68, 271.31);
    path_3.cubicTo(53.31, 272.55, 56.39, 272.53, 55.02, 273.99);
    path_3.cubicTo(55.73, 274.18, 56.25, 273.99, 56.83, 274.33);
    path_3.cubicTo(57.29, 274.59, 57.4, 274.35, 57.6, 274.02);
    path_3.cubicTo(58.06, 273.27, 58.79, 272.73, 59.6, 272.36);
    path_3.cubicTo(59.95, 272.21, 61, 272.51, 60.98, 272.75);
    path_3.cubicTo(60.88, 273.82, 62, 273.99, 62.49, 274.59);
    path_3.cubicTo(62.76, 274.92, 63.3, 275.1, 63.05, 275.56);
    path_3.cubicTo(62.8, 276.02, 62.29, 275.66, 61.93, 275.5);
    path_3.cubicTo(61.25, 275.2, 60.61, 274.72, 59.93, 274.44);
    path_3.cubicTo(59.04, 274.08, 58.37, 274.13, 58.86, 275.25);
    path_3.cubicTo(59.12, 275.82, 58.72, 275.7, 58.47, 275.77);
    path_3.cubicTo(58.05, 275.89, 57.64, 275.65, 57.23, 275.45);
    path_3.cubicTo(56.88, 275.28, 56.56, 275.27, 56.37, 275.53);
    path_3.cubicTo(56.16, 275.81, 56.37, 276.13, 56.62, 276.42);
    path_3.cubicTo(57.54, 277.48, 58.51, 278.59, 60.08, 278.15);
    path_3.cubicTo(59.62, 277.49, 58.76, 276.54, 60.46, 276.95);
    path_3.cubicTo(60.64, 276.99, 60.84, 276.88, 60.79, 276.67);
    path_3.cubicTo(60.69, 276.22, 60.75, 276.05, 61.26, 276.41);
    path_3.cubicTo(62.62, 277.38, 63.69, 276.98, 64.53, 276.36);
    path_3.cubicTo(65.34, 275.77, 66.53, 276.11, 67.29, 275.7);
    path_3.cubicTo(68.75, 274.91, 69.02, 276.26, 69.77, 276.88);
    path_3.cubicTo(70.09, 277.15, 70.51, 277.49, 70.93, 277.25);
    path_3.cubicTo(71.36, 277, 70.99, 276.6, 70.92, 276.22);
    path_3.cubicTo(70.69, 275.05, 69.22, 274.45, 68.98, 273.3);
    path_3.cubicTo(69.65, 273.28, 70.28, 273.32, 70.73, 273.87);
    path_3.cubicTo(71.45, 274.73, 72.27, 275.3, 73.39, 275.38);
    path_3.cubicTo(73.99, 275.43, 74.08, 275.96, 74.2, 276.38);
    path_3.cubicTo(74.34, 276.89, 74.02, 276.87, 73.58, 276.82);
    path_3.cubicTo(73.14, 276.77, 72.69, 276.88, 72.29, 277);
    path_3.cubicTo(71.81, 277.14, 71.6, 277.45, 72.05, 277.98);
    path_3.cubicTo(72.97, 279.1, 74.12, 279.92, 75.52, 280.36);
    path_3.cubicTo(75.8, 280.45, 76.25, 280.53, 76.32, 280.68);
    path_3.cubicTo(76.98, 282.05, 77.83, 281.59, 78.65, 281.3);
    path_3.cubicTo(79, 282.78, 79.16, 283.03, 79.8, 282.71);
    path_3.cubicTo(81.1, 282.07, 82.37, 282.71, 83.65, 283.06);
    path_3.cubicTo(84.32, 283.25, 85.2, 283.56, 84.79, 284.39);
    path_3.cubicTo(84.14, 285.7, 84.14, 285.82, 85.93, 286.32);
    path_3.cubicTo(86.9, 286.57, 87.25, 287.31, 87.28, 287.92);
    path_3.cubicTo(87.31, 288.49, 86.49, 288.23, 85.98, 288.18);
    path_3.cubicTo(84.89, 288.07, 83.79, 287.36, 82.75, 287.78);
    path_3.lineTo(82.78, 287.78);
    path_3.lineTo(82.84, 287.71);
    path_3.close();
    path_3.moveTo(44.57, 257.5);
    path_3.cubicTo(43.65, 256.85, 42.15, 258.17, 43.01, 257.76);
    path_3.cubicTo(42.85, 257.23, 42.42, 256.98, 42.02, 256.69);
    path_3.cubicTo(41.64, 256.41, 41.12, 256.3, 40.86, 255.62);
    path_3.cubicTo(41.55, 255.68, 42.18, 255.75, 42.8, 255.77);
    path_3.cubicTo(43.31, 255.79, 43.64, 256.02, 43.57, 256.53);
    path_3.cubicTo(43.5, 256.98, 44.28, 258.07, 43.02, 257.74);
    path_3.cubicTo(42.81, 258.04, 44.45, 257.09, 44.59, 257.5);
    path_3.lineTo(44.57, 257.5);
    path_3.close();
    path_3.moveTo(105.92, 295.75);
    path_3.cubicTo(105.99, 296.27, 105.57, 296.33, 105.26, 296.51);
    path_3.cubicTo(104.88, 296.73, 104.45, 296.73, 104.06, 296.37);
    path_3.cubicTo(103.05, 295.45, 101.81, 295.17, 100.65, 295.37);
    path_3.cubicTo(100.02, 295.48, 99.25, 294.43, 99.04, 295.24);
    path_3.cubicTo(98.87, 295.9, 100.01, 295.67, 100.48, 296.1);
    path_3.cubicTo(101.52, 297.03, 102.86, 297.7, 104.21, 298.31);
    path_3.cubicTo(102.95, 299.12, 101.7, 297.95, 100.88, 297.54);
    path_3.cubicTo(99.79, 296.98, 98.92, 297.08, 97.97, 296.96);
    path_3.cubicTo(96.82, 296.83, 95.85, 296.43, 95, 295.69);
    path_3.cubicTo(94.75, 295.48, 94.31, 295.33, 94.48, 294.97);
    path_3.cubicTo(94.61, 294.7, 94.89, 294.59, 95.25, 294.56);
    path_3.cubicTo(95.7, 294.52, 96.41, 294.87, 96.56, 294.44);
    path_3.cubicTo(96.75, 293.9, 95.87, 293.9, 95.6, 293.58);
    path_3.cubicTo(94.89, 292.74, 95.83, 292.75, 96.27, 292.54);
    path_3.cubicTo(96.67, 292.35, 97.71, 292.86, 97.48, 292.03);
    path_3.cubicTo(97.28, 291.29, 97.29, 290.43, 96.33, 289.84);
    path_3.cubicTo(95.86, 289.55, 94.84, 289.44, 95.18, 288.75);
    path_3.cubicTo(95.54, 288.02, 96.32, 288.4, 96.96, 288.87);
    path_3.cubicTo(97.39, 289.18, 97.85, 289.22, 98.33, 289.19);
    path_3.cubicTo(99.49, 289.11, 99.69, 289.58, 99.31, 290.38);
    path_3.cubicTo(99.28, 290.45, 99.24, 290.53, 99.23, 290.61);
    path_3.cubicTo(99.22, 291.18, 98.19, 291.67, 99.21, 292.32);
    path_3.cubicTo(100.33, 293.04, 101.53, 293.69, 102.72, 292.83);
    path_3.cubicTo(102.87, 292.72, 102.84, 292.46, 103.17, 292.48);
    path_3.cubicTo(104.37, 292.53, 105.43, 292.36, 106.21, 291.95);
    path_3.cubicTo(106.4, 291.85, 106.55, 291.83, 106.7, 291.97);
    path_3.cubicTo(106.97, 292.22, 107.31, 292.56, 107.17, 292.85);
    path_3.cubicTo(106.84, 293.55, 107.06, 294.15, 107.75, 294.79);
    path_3.cubicTo(106.04, 294.31, 105.76, 294.43, 105.94, 295.76);
    path_3.lineTo(105.92, 295.75);
    path_3.close();
    path_3.moveTo(72.97, 270.48);
    path_3.cubicTo(72.86, 270.89, 73.29, 271.06, 73.69, 271.14);
    path_3.cubicTo(74.01, 271.2, 74.49, 271.03, 74.46, 271.63);
    path_3.cubicTo(74.44, 272.1, 74.4, 272.54, 73.71, 272.52);
    path_3.cubicTo(72.73, 272.5, 71.75, 272.61, 70.84, 271.78);
    path_3.cubicTo(70.13, 271.15, 69.48, 270.94, 68.86, 271.6);
    path_3.cubicTo(68.53, 271.96, 68.05, 271.9, 67.51, 271.69);
    path_3.cubicTo(66.41, 271.25, 65.48, 270.43, 64.32, 270.04);
    path_3.cubicTo(63.66, 269.82, 63.22, 268.85, 63.48, 268.32);
    path_3.cubicTo(63.7, 267.85, 64.51, 268.3, 65.06, 268.5);
    path_3.cubicTo(65.51, 268.68, 65.83, 269.07, 66.1, 269.47);
    path_3.cubicTo(67.03, 270.85, 67.89, 270.88, 68.65, 269.57);
    path_3.cubicTo(68.82, 269.28, 69.26, 269.32, 69.31, 268.82);
    path_3.cubicTo(69.51, 266.97, 70.12, 266.86, 71.84, 268.33);
    path_3.cubicTo(72.15, 269.01, 73.26, 269.44, 72.99, 270.49);
    path_3.lineTo(72.97, 270.48);
    path_3.close();
    path_3.moveTo(66.13, 265.53);
    path_3.cubicTo(66.88, 266.19, 66.92, 267.43, 66.14, 267.82);
    path_3.cubicTo(65.6, 268.09, 64.95, 268.21, 64.6, 267.28);
    path_3.cubicTo(64.27, 266.4, 63.71, 265.74, 62.8, 265.35);
    path_3.cubicTo(62.6, 265.26, 62.29, 265.05, 62.27, 264.91);
    path_3.cubicTo(62.15, 263.78, 61.32, 263.38, 60.4, 262.89);
    path_3.cubicTo(59.81, 262.59, 59.21, 262.01, 59.23, 261.23);
    path_3.cubicTo(59.25, 260.65, 59.62, 260.38, 60.14, 260.22);
    path_3.cubicTo(61.15, 259.9, 61.35, 261.03, 61.95, 261.42);
    path_3.cubicTo(63.73, 262.43, 64.68, 264.19, 66.12, 265.53);
    path_3.lineTo(66.13, 265.53);
    path_3.close();
    path_3.moveTo(107.52, 288.49);
    path_3.cubicTo(108.07, 288.6, 108.02, 288.96, 107.88, 289.11);
    path_3.cubicTo(107.4, 289.61, 107.38, 290.39, 105.96, 290.25);
    path_3.cubicTo(104.53, 290.1, 103.37, 289.29, 101.96, 289.21);
    path_3.cubicTo(101.39, 289.18, 100.72, 288.82, 100.22, 288.41);
    path_3.cubicTo(99.72, 288, 99.42, 287.5, 99.56, 287.28);
    path_3.cubicTo(100.06, 286.46, 101.15, 286.49, 102.17, 286.48);
    path_3.cubicTo(102.57, 286.48, 102.99, 286.63, 103.5, 286.72);
    path_3.cubicTo(104.48, 287.98, 106.06, 288.15, 107.52, 288.49);
    path_3.close();
    path_3.moveTo(34.41, 234.56);
    path_3.cubicTo(35.16, 234.52, 36.08, 234.91, 35.88, 236.22);
    path_3.cubicTo(35.78, 236.89, 36.34, 237.34, 36.69, 237.85);
    path_3.cubicTo(36.88, 238.1, 37.28, 238.35, 36.98, 238.66);
    path_3.cubicTo(36.76, 238.88, 36.39, 238.75, 36.12, 238.56);
    path_3.cubicTo(35.85, 238.38, 35.67, 238.07, 35.46, 237.81);
    path_3.cubicTo(35.02, 237.26, 34.75, 236.56, 33.91, 236.51);
    path_3.cubicTo(33.48, 236.49, 33.09, 235.79, 33.13, 235.41);
    path_3.cubicTo(33.19, 234.82, 32.73, 234.47, 32.53, 233.78);
    path_3.cubicTo(33.27, 234.26, 33.72, 234.61, 34.41, 234.57);
    path_3.lineTo(34.41, 234.56);
    path_3.close();
    path_3.moveTo(87.96, 281.2);
    path_3.cubicTo(87.79, 280.99, 88.31, 278.26, 88.54, 278.17);
    path_3.cubicTo(88.65, 278.12, 88.77, 278.05, 88.89, 278.05);
    path_3.cubicTo(89.21, 278.06, 90.87, 279.71, 90.85, 280.14);
    path_3.cubicTo(90.81, 280.84, 90.49, 281.34, 89.53, 281.25);
    path_3.cubicTo(89.04, 281.2, 88.55, 281.29, 88.07, 281.3);
    path_3.cubicTo(88.03, 281.27, 87.99, 281.24, 87.96, 281.2);
    path_3.close();
    path_3.moveTo(86.77, 276.68);
    path_3.cubicTo(87.2, 277.07, 87.28, 277.92, 87.32, 278.54);
    path_3.cubicTo(87.36, 279.08, 86.88, 278.9, 86.56, 278.64);
    path_3.cubicTo(85.82, 278.02, 85.27, 277.26, 85.08, 276.43);
    path_3.cubicTo(84.93, 275.8, 84.62, 275.56, 83.98, 275.47);
    path_3.cubicTo(83.47, 275.39, 82.84, 275.47, 82.59, 274.82);
    path_3.cubicTo(82.52, 274.64, 82.7, 274.31, 82.88, 274.21);
    path_3.cubicTo(83.47, 273.87, 83.94, 274.5, 84.45, 274.65);
    path_3.cubicTo(85.28, 275.28, 86.01, 276, 86.75, 276.67);
    path_3.lineTo(86.77, 276.68);
    path_3.close();
    path_3.moveTo(109.71, 286.93);
    path_3.cubicTo(109.64, 286.7, 110.22, 286.47, 110.43, 286.73);
    path_3.cubicTo(110.87, 287.27, 112.67, 287.23, 111.57, 288.52);
    path_3.cubicTo(111.35, 288.77, 111.83, 289.23, 111.08, 289.59);
    path_3.cubicTo(110.15, 290.04, 110.12, 290.09, 109.97, 289.14);
    path_3.cubicTo(109.85, 288.41, 108.99, 288.35, 108.09, 288.16);
    path_3.cubicTo(108.98, 287.81, 110.1, 288.11, 109.71, 286.94);
    path_3.lineTo(109.71, 286.93);
    path_3.close();
    path_3.moveTo(51.76, 258.46);
    path_3.cubicTo(52.07, 258.22, 51.41, 257.56, 51.88, 257.18);
    path_3.cubicTo(52.39, 257.78, 52.78, 258.67, 53.76, 258.44);
    path_3.cubicTo(53.97, 258.39, 54.35, 259.04, 54.32, 259.33);
    path_3.cubicTo(54.28, 259.74, 53.72, 259.56, 53.43, 259.54);
    path_3.cubicTo(52.19, 259.43, 52.18, 259.39, 52.16, 260.77);
    path_3.cubicTo(51.69, 260.01, 50.73, 259.24, 51.75, 258.46);
    path_3.lineTo(51.76, 258.46);
    path_3.close();
    path_3.moveTo(81.66, 272.04);
    path_3.cubicTo(82.17, 272.46, 82.28, 273.01, 81.99, 273.51);
    path_3.cubicTo(81.62, 274.15, 81.13, 273.81, 80.56, 273.5);
    path_3.cubicTo(79.44, 272.88, 81.11, 272.69, 80.45, 272.29);
    path_3.cubicTo(80.84, 271.86, 81.23, 271.69, 81.67, 272.05);
    path_3.lineTo(81.66, 272.04);
    path_3.close();
    path_3.moveTo(133.75, 290.91);
    path_3.cubicTo(134.62, 291.24, 134.6, 291.96, 134.65, 292.56);
    path_3.cubicTo(134.68, 292.95, 134.13, 293.06, 133.8, 292.89);
    path_3.cubicTo(133.09, 292.55, 133.06, 291.89, 132.91, 291.36);
    path_3.cubicTo(133.06, 290.94, 133.34, 290.75, 133.75, 290.9);
    path_3.lineTo(133.75, 290.91);
    path_3.close();
    path_3.moveTo(53.77, 252.57);
    path_3.cubicTo(53.44, 252.79, 53.01, 252.7, 52.7, 252.33);
    path_3.cubicTo(52.32, 251.87, 52.1, 251.28, 52.52, 250.93);
    path_3.cubicTo(52.83, 250.68, 53.32, 251.17, 53.74, 251.21);
    path_3.cubicTo(53.8, 251.71, 54.27, 252.24, 53.77, 252.57);
    path_3.close();
    path_3.moveTo(50.13, 265.8);
    path_3.cubicTo(49.24, 264.88, 50.56, 265.64, 50.47, 265.26);
    path_3.cubicTo(50.4, 264.97, 50.52, 264.68, 50.58, 264.4);
    path_3.cubicTo(50.64, 264.09, 50.47, 263.64, 50.86, 263.52);
    path_3.cubicTo(50.95, 263.49, 51.21, 263.67, 51.3, 263.8);
    path_3.cubicTo(51.61, 264.24, 51.89, 264.72, 51.7, 265.17);
    path_3.cubicTo(51.59, 265.42, 51.33, 265.57, 51.09, 265.82);
    path_3.cubicTo(50.93, 266.23, 50.65, 266.35, 50.12, 265.81);
    path_3.lineTo(50.13, 265.8);
    path_3.close();
    path_3.moveTo(22.1, 229.62);
    path_3.cubicTo(21.93, 229.12, 22.11, 228.66, 22.49, 228.43);
    path_3.cubicTo(22.84, 228.23, 23.02, 228.5, 23.16, 228.89);
    path_3.cubicTo(23.36, 229.45, 23.52, 229.96, 23.03, 230.32);
    path_3.cubicTo(22.65, 230.29, 22.22, 230.04, 22.09, 229.61);
    path_3.lineTo(22.1, 229.62);
    path_3.close();
    path_3.moveTo(36.52, 241.82);
    path_3.cubicTo(36.76, 242.41, 36.94, 243.08, 36.63, 243.53);
    path_3.cubicTo(36.46, 243.78, 36.07, 243.4, 35.86, 243.12);
    path_3.cubicTo(35.43, 242.53, 35.59, 242.06, 35.87, 241.64);
    path_3.cubicTo(36.11, 241.45, 36.36, 241.45, 36.51, 241.81);
    path_3.lineTo(36.52, 241.82);
    path_3.close();
    path_3.moveTo(65.17, 262.07);
    path_3.cubicTo(65.37, 262.35, 65.44, 262.69, 65.1, 262.82);
    path_3.cubicTo(64.84, 262.92, 64.54, 262.68, 64.46, 262.43);
    path_3.cubicTo(64.26, 261.78, 63.66, 261.2, 63.78, 260.28);
    path_3.cubicTo(64.34, 260.99, 64.78, 261.51, 65.17, 262.06);
    path_3.lineTo(65.17, 262.07);
    path_3.close();
    path_3.moveTo(31.16, 223.96);
    path_3.cubicTo(31.24, 223.76, 30.98, 223.29, 31.41, 223.38);
    path_3.cubicTo(31.71, 223.44, 31.79, 223.74, 31.9, 224.11);
    path_3.cubicTo(32.12, 224.86, 31.56, 225.13, 31.5, 225.66);
    path_3.lineTo(31.5, 225.77);
    path_3.cubicTo(31.5, 225.77, 31.43, 225.72, 31.38, 225.69);
    path_3.cubicTo(31.18, 225.14, 30.94, 224.55, 31.16, 223.97);
    path_3.lineTo(31.16, 223.96);
    path_3.close();
    path_3.moveTo(119.02, 292.8);
    path_3.cubicTo(117.95, 292.63, 116.96, 292.13, 115.86, 292.08);
    path_3.cubicTo(117.14, 291.39, 117.99, 292.42, 119.02, 292.8);
    path_3.close();
    path_3.moveTo(61.97, 270.11);
    path_3.cubicTo(62.3, 270.38, 62.85, 270.15, 63.04, 270.68);
    path_3.cubicTo(63.15, 270.99, 62.82, 270.92, 62.61, 270.95);
    path_3.cubicTo(61.97, 271.05, 61.54, 270.79, 61.34, 270.13);
    path_3.cubicTo(61.31, 270.04, 61.31, 269.95, 61.24, 269.59);
    path_3.cubicTo(61.6, 269.85, 61.79, 269.97, 61.97, 270.11);
    path_3.close();
    path_3.moveTo(118.96, 300.51);
    path_3.cubicTo(119.29, 300.68, 119.75, 300.91, 119.56, 301.24);
    path_3.cubicTo(119.41, 301.51, 118.94, 301.58, 118.52, 301.44);
    path_3.cubicTo(118.11, 301.3, 118.09, 301.02, 118.17, 300.72);
    path_3.cubicTo(118.3, 300.42, 118.59, 300.32, 118.96, 300.52);
    path_3.lineTo(118.96, 300.51);
    path_3.close();
    path_3.moveTo(113.37, 290.54);
    path_3.cubicTo(114.34, 290.79, 114.6, 291.56, 115.27, 292.05);
    path_3.cubicTo(114.23, 291.9, 113.41, 291.63, 113.37, 290.54);
    path_3.close();
    path_3.moveTo(85.66, 292.04);
    path_3.cubicTo(86.08, 292.35, 86.15, 292.73, 85.95, 293.05);
    path_3.cubicTo(85.83, 293.25, 85.53, 293.16, 85.33, 292.99);
    path_3.cubicTo(85, 292.71, 84.91, 292.39, 85.03, 292.08);
    path_3.cubicTo(85.21, 291.92, 85.43, 291.87, 85.67, 292.05);
    path_3.lineTo(85.66, 292.04);
    path_3.close();
    path_3.moveTo(78.26, 278.53);
    path_3.cubicTo(78.26, 278.92, 78.84, 279.21, 78.62, 279.59);
    path_3.cubicTo(78.59, 279.65, 78.36, 279.66, 78.26, 279.61);
    path_3.cubicTo(77.76, 279.34, 77.63, 278.95, 77.67, 278.5);
    path_3.cubicTo(77.68, 278.35, 77.61, 278.17, 77.56, 277.89);
    path_3.cubicTo(77.98, 278.1, 78.26, 278.28, 78.26, 278.54);
    path_3.lineTo(78.26, 278.53);
    path_3.close();
    path_3.moveTo(90.99, 297.21);
    path_3.cubicTo(91.55, 295.98, 91.57, 295.98, 92.51, 297.01);
    path_3.cubicTo(92.08, 297.26, 91.52, 297.16, 90.99, 297.21);
    path_3.close();
    path_3.moveTo(125.65, 293.14);
    path_3.cubicTo(127.08, 293.25, 127.18, 293.39, 126.83, 294.38);
    path_3.cubicTo(126.47, 294, 126.1, 293.62, 125.65, 293.14);
    path_3.close();
    path_3.moveTo(109.41, 292.82);
    path_3.cubicTo(109.59, 294.13, 109.31, 294.25, 107.82, 293.65);
    path_3.cubicTo(108.58, 293.77, 109.08, 293.51, 109.41, 292.82);
    path_3.close();
    path_3.moveTo(26.88, 223.99);
    path_3.cubicTo(26.97, 224.32, 26.89, 224.66, 26.6, 224.73);
    path_3.cubicTo(26.49, 224.76, 26.22, 224.51, 26.12, 224.33);
    path_3.cubicTo(25.94, 224, 26.12, 223.82, 26.36, 223.73);
    path_3.cubicTo(26.57, 223.7, 26.81, 223.71, 26.88, 223.98);
    path_3.lineTo(26.88, 223.99);
    path_3.close();
    path_3.moveTo(67.14, 268.58);
    path_3.cubicTo(67.28, 268.38, 67.51, 268.43, 67.69, 268.63);
    path_3.cubicTo(67.89, 268.84, 68.05, 269.09, 67.87, 269.32);
    path_3.cubicTo(67.72, 269.51, 67.51, 269.43, 67.3, 269.28);
    path_3.cubicTo(67.09, 269.05, 66.97, 268.81, 67.14, 268.59);
    path_3.lineTo(67.14, 268.58);
    path_3.close();
    path_3.moveTo(19.04, 224.33);
    path_3.cubicTo(19.5867, 224.197, 19.9567, 224.507, 20.15, 225.26);
    path_3.cubicTo(19.78, 224.95, 19.42, 224.65, 19.04, 224.33);
    path_3.close();
    path_3.moveTo(72.09, 267.45);
    path_3.cubicTo(72.19, 267.21, 72.41, 267.26, 72.61, 267.41);
    path_3.cubicTo(72.84, 267.58, 73.04, 267.8, 72.86, 268.04);
    path_3.cubicTo(72.72, 268.23, 72.5, 268.15, 72.29, 268.02);
    path_3.cubicTo(72.1, 267.85, 72.01, 267.65, 72.09, 267.45);
    path_3.close();
    path_3.moveTo(41.08, 226.98);
    path_3.cubicTo(41.16, 227, 41.31, 227.17, 41.3, 227.25);
    path_3.cubicTo(41.27, 227.68, 40.92, 227.69, 40.44, 227.88);
    path_3.cubicTo(40.52, 227.3, 40.57, 226.88, 41.07, 226.98);
    path_3.lineTo(41.08, 226.98);
    path_3.close();
    path_3.moveTo(93.63, 285.94);
    path_3.cubicTo(93.73, 285.68, 93.99, 285.73, 94.17, 285.92);
    path_3.cubicTo(94.33, 286.07, 94.77, 286.2, 94.47, 286.47);
    path_3.cubicTo(94.34, 286.59, 94.08, 286.61, 93.92, 286.67);
    path_3.cubicTo(93.57, 286.42, 93.54, 286.17, 93.63, 285.95);
    path_3.lineTo(93.63, 285.94);
    path_3.close();
    path_3.moveTo(102.84, 299.29);
    path_3.cubicTo(103.65, 299.65, 104.24, 299.85, 104.81, 300.08);
    path_3.cubicTo(104.01, 300.29, 103.44, 300.04, 102.84, 299.29);
    path_3.close();
    path_3.moveTo(44.51, 255.21);
    path_3.cubicTo(44.74, 255.47, 44.75, 255.73, 44.63, 255.95);
    path_3.cubicTo(44.53, 256.13, 44.33, 256.02, 44.21, 255.85);
    path_3.cubicTo(44.03, 255.61, 43.93, 255.34, 44.06, 255.1);
    path_3.cubicTo(44.22, 255, 44.37, 255.05, 44.52, 255.21);
    path_3.lineTo(44.51, 255.21);
    path_3.close();
    path_3.moveTo(42.2, 243.74);
    path_3.cubicTo(41.75, 243.56, 41.28, 243.39, 40.62, 243.11);
    path_3.cubicTo(41.4, 242.79, 41.82, 243.16, 42.2, 243.74);
    path_3.close();
    path_3.moveTo(110.27, 300.36);
    path_3.cubicTo(110.2, 300.44, 110.14, 300.56, 110.04, 300.6);
    path_3.cubicTo(109.55, 300.82, 109.44, 300.4, 109.15, 300.17);
    path_3.cubicTo(109.58, 300, 109.92, 300.18, 110.26, 300.36);
    path_3.lineTo(110.27, 300.36);
    path_3.close();
    path_3.moveTo(78.65, 272.75);
    path_3.cubicTo(78.54, 273, 78.3, 272.89, 78.09, 272.75);
    path_3.cubicTo(77.92, 272.64, 77.76, 272.5, 77.85, 272.33);
    path_3.cubicTo(77.97, 272.09, 78.2, 272.2, 78.5, 272.36);
    path_3.cubicTo(78.54, 272.46, 78.7, 272.65, 78.66, 272.75);
    path_3.lineTo(78.65, 272.75);
    path_3.close();
    path_3.moveTo(107.94, 302.96);
    path_3.cubicTo(108, 302.99, 108.03, 303.23, 107.97, 303.3);
    path_3.cubicTo(107.74, 303.55, 107.41, 303.52, 106.86, 303.14);
    path_3.cubicTo(107.31, 303.07, 107.51, 302.77, 107.94, 302.97);
    path_3.lineTo(107.94, 302.96);
    path_3.close();
    path_3.moveTo(114.07, 294.2);
    path_3.cubicTo(114.03, 294.1, 114.07, 293.89, 114.11, 293.89);
    path_3.cubicTo(114.46, 293.87, 114.76, 293.99, 115.1, 294.41);
    path_3.cubicTo(114.66, 294.43, 114.28, 294.7, 114.07, 294.2);
    path_3.close();
    path_3.moveTo(108.65, 303.31);
    path_3.cubicTo(109.15, 303.1, 109.49, 303.56, 109.87, 303.63);
    path_3.cubicTo(109.42, 303.73, 108.96, 303.89, 108.65, 303.31);
    path_3.close();
    path_3.moveTo(36.59, 246.72);
    path_3.cubicTo(37.17, 246.59, 37.46, 247.05, 38.05, 247.81);
    path_3.cubicTo(37.31, 247.34, 36.87, 247.2, 36.59, 246.72);
    path_3.close();
    path_3.moveTo(59.27, 267.95);
    path_3.cubicTo(59.85, 267.99, 60.06, 268.38, 60.37, 268.78);
    path_3.cubicTo(59.88, 268.67, 59.53, 268.48, 59.27, 267.95);
    path_3.close();
    path_3.moveTo(106.69, 298.76);
    path_3.cubicTo(106.31, 298.76, 105.94, 299, 105.55, 298.45);
    path_3.cubicTo(106.04, 298.32, 106.35, 298.52, 106.69, 298.76);
    path_3.close();
    path_3.moveTo(35.75, 248.94);
    path_3.cubicTo(36.4, 249.14, 36.7, 249.38, 36.56, 249.99);
    path_3.cubicTo(36.05, 249.74, 36.09, 249.32, 35.75, 248.94);
    path_3.close();
    path_3.moveTo(29.47, 229.04);
    path_3.cubicTo(29.62, 228.55, 29.91, 228.5, 30.23, 228.5);
    path_3.cubicTo(30.17, 228.91, 29.87, 228.93, 29.47, 229.04);
    path_3.close();
    path_3.moveTo(23.73, 238.48);
    path_3.cubicTo(24.3, 238.74, 24.41, 239.12, 24.6, 239.65);
    path_3.cubicTo(24.05, 239.38, 23.93, 238.99, 23.73, 238.48);
    path_3.close();
    path_3.moveTo(22.66, 237.36);
    path_3.cubicTo(22.77, 237.58, 22.67, 237.74, 22.51, 237.78);
    path_3.cubicTo(22.42, 237.8, 22.25, 237.76, 22.19, 237.67);
    path_3.cubicTo(22.04, 237.48, 22.1, 237.31, 22.24, 237.21);
    path_3.cubicTo(22.39, 237.13, 22.56, 237.14, 22.66, 237.37);
    path_3.lineTo(22.66, 237.36);
    path_3.close();
    path_3.moveTo(46.17, 247.76);
    path_3.cubicTo(46.61, 248.02, 46.62, 248.31, 46.41, 248.78);
    path_3.cubicTo(46.17, 248.36, 46.02, 248.09, 46.17, 247.76);
    path_3.close();
    path_3.moveTo(68.85, 257.41);
    path_3.cubicTo(68.93, 257.53, 68.99, 257.71, 68.95, 257.83);
    path_3.cubicTo(68.91, 257.97, 68.76, 257.89, 68.68, 257.79);
    path_3.cubicTo(68.58, 257.67, 68.43, 257.55, 68.55, 257.35);
    path_3.cubicTo(68.64, 257.37, 68.81, 257.35, 68.84, 257.41);
    path_3.lineTo(68.85, 257.41);
    path_3.close();
    path_3.moveTo(39.43, 254.5);
    path_3.cubicTo(39.47, 253.97, 39.7, 254.51, 39.82, 254.59);
    path_3.cubicTo(39.92, 254.66, 39.97, 254.82, 40.06, 254.96);
    path_3.cubicTo(39.68, 255.03, 39.42, 254.72, 39.44, 254.5);
    path_3.lineTo(39.43, 254.5);
    path_3.close();
    path_3.moveTo(37.82, 251.19);
    path_3.cubicTo(37.82, 251.19, 37.73, 251.33, 37.68, 251.32);
    path_3.cubicTo(37.44, 251.28, 37.28, 251.09, 37.08, 250.7);
    path_3.cubicTo(37.42, 250.8, 37.69, 250.85, 37.82, 251.18);
    path_3.lineTo(37.82, 251.19);
    path_3.close();
    path_3.moveTo(41.61, 253.33);
    path_3.cubicTo(41.44, 253.42, 41.27, 253.28, 41.15, 253.12);
    path_3.cubicTo(41.05, 252.99, 41, 252.82, 41.19, 252.82);
    path_3.cubicTo(41.35, 252.82, 41.53, 252.91, 41.77, 252.98);
    path_3.cubicTo(41.71, 253.15, 41.7, 253.29, 41.62, 253.33);
    path_3.lineTo(41.61, 253.33);
    path_3.close();
    path_3.moveTo(47.38, 252.65);
    path_3.cubicTo(47.38, 252.65, 47.36, 252.77, 47.34, 252.84);
    path_3.cubicTo(47.24, 252.78, 47.13, 252.73, 47.05, 252.65);
    path_3.cubicTo(47.03, 252.63, 47.07, 252.53, 47.1, 252.42);
    path_3.cubicTo(47.2, 252.5, 47.31, 252.56, 47.38, 252.65);
    path_3.close();
    path_3.moveTo(116.47, 296.46);
    path_3.cubicTo(116.58, 296.43, 116.72, 296.36, 116.81, 296.4);
    path_3.cubicTo(116.9, 296.44, 117.04, 296.61, 117.01, 296.65);
    path_3.cubicTo(116.96, 296.74, 116.81, 296.79, 116.66, 296.88);
    path_3.cubicTo(116.57, 296.67, 116.52, 296.57, 116.47, 296.46);
    path_3.close();

    Paint paint3Fill = Paint()..style = PaintingStyle.fill;
    paint3Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_3, paint3Fill);

    Path path_4 = Path();
    path_4.moveTo(283.46, 174.49);
    path_4.cubicTo(282.98, 175.38, 282.93, 176.23, 283.19, 177.26);
    path_4.cubicTo(283.46, 178.3, 283.8, 179.48, 282.9, 180.51);
    path_4.cubicTo(282.84, 180.58, 282.88, 180.77, 282.87, 180.9);
    path_4.cubicTo(283.68, 181.5, 282.94, 181.99, 282.69, 182.51);
    path_4.cubicTo(282.69, 181.96, 282.61, 181.41, 282.89, 180.89);
    path_4.cubicTo(282.11, 180.85, 281.98, 180.09, 281.53, 179.46);
    path_4.cubicTo(281.66, 180.65, 280.67, 181.43, 280.76, 182.51);
    path_4.cubicTo(280.82, 183.32, 280.73, 183.97, 280.01, 184.4);
    path_4.cubicTo(279.61, 184.65, 279.27, 185.07, 279.65, 185.44);
    path_4.cubicTo(280.35, 186.11, 280.67, 187.23, 281.56, 187.61);
    path_4.cubicTo(282.18, 187.87, 282.22, 188.3, 282.26, 188.85);
    path_4.cubicTo(282.36, 190.25, 282.62, 190.45, 283.85, 190.03);
    path_4.cubicTo(284.54, 189.79, 285.12, 189.53, 285.25, 188.54);
    path_4.cubicTo(285.33, 187.93, 285.58, 187.21, 285.97, 186.8);
    path_4.cubicTo(286.79, 185.9, 286.74, 185.16, 286, 184.36);
    path_4.cubicTo(287.48, 184.07, 287.31, 185.25, 287.14, 186.26);
    path_4.cubicTo(287.63, 186.06, 287.72, 185.35, 288.32, 185.57);
    path_4.cubicTo(288.12, 186.46, 288.08, 187.33, 288.35, 188.2);
    path_4.cubicTo(288.54, 188.82, 288.84, 188.98, 289.33, 188.7);
    path_4.cubicTo(289.83, 188.43, 289.7, 188.13, 289.42, 187.73);
    path_4.cubicTo(289.08, 187.26, 289.13, 186.74, 289.83, 186.76);
    path_4.cubicTo(290.56, 186.78, 290.88, 186.37, 290.96, 185.59);
    path_4.cubicTo(290.99, 185.33, 291.02, 184.97, 291.29, 184.87);
    path_4.cubicTo(291.69, 184.72, 291.65, 185.24, 291.83, 185.43);
    path_4.cubicTo(292.02, 185.63, 292.08, 186.29, 292.52, 185.88);
    path_4.cubicTo(292.82, 185.6, 293.23, 185.32, 293.06, 184.7);
    path_4.cubicTo(293, 184.49, 292.54, 184.29, 292.97, 184.07);
    path_4.cubicTo(293.59, 183.74, 293.61, 183, 293.98, 182.35);
    path_4.cubicTo(294.23, 182.89, 294.44, 183.34, 294.65, 183.8);
    path_4.cubicTo(294.13, 183.21, 293.94, 183.62, 293.86, 184.18);
    path_4.cubicTo(293.75, 184.92, 293.35, 185.61, 293.1, 186.32);
    path_4.cubicTo(292.82, 187.03, 292.68, 187.75, 293.12, 188.59);
    path_4.cubicTo(293.16, 188.67, 293.01, 188.94, 292.91, 189.1);
    path_4.cubicTo(292.07, 190.45, 292.68, 191.9, 292.19, 193.48);
    path_4.cubicTo(292.77, 193, 293, 192.62, 293.2, 192.16);
    path_4.cubicTo(293.58, 191.28, 294.19, 191.18, 294.63, 191.92);
    path_4.cubicTo(294.76, 192.14, 294.82, 192.44, 294.94, 192.68);
    path_4.cubicTo(295.25, 193.32, 295.47, 193.9, 296.08, 192.72);
    path_4.cubicTo(296.39, 192.11, 296.65, 191.29, 297.42, 190.84);
    path_4.cubicTo(297.06, 191.51, 297.67, 191.51, 297.67, 191.92);
    path_4.cubicTo(297.67, 192.3, 297.6, 192.85, 298.12, 192.62);
    path_4.cubicTo(298.58, 192.41, 298.31, 191.9, 298.39, 191.55);
    path_4.cubicTo(298.68, 190.22, 297.69, 189.78, 297.5, 188.81);
    path_4.cubicTo(297.31, 187.81, 297.84, 187.27, 298.4, 186.94);
    path_4.cubicTo(299.11, 186.52, 298.81, 187.49, 298.95, 187.82);
    path_4.cubicTo(299.13, 188.24, 299.23, 188.79, 299.74, 188.69);
    path_4.cubicTo(300.11, 188.61, 300.55, 188.34, 300.56, 189.01);
    path_4.cubicTo(300.56, 189.66, 300.56, 190.78, 300.29, 190.94);
    path_4.cubicTo(298.69, 191.95, 299.82, 192.57, 300.14, 193.46);
    path_4.cubicTo(300.61, 194.79, 299.03, 195.12, 298.9, 196.26);
    path_4.cubicTo(298.87, 196.56, 298.67, 196.85, 298.36, 196.67);
    path_4.cubicTo(298.29, 196.63, 298.25, 196.54, 298.2, 196.47);
    path_4.cubicTo(298.02, 196.22, 297.78, 195.9, 297.52, 196.31);
    path_4.cubicTo(297.34, 196.6, 297.26, 197.11, 297.33, 197.44);
    path_4.cubicTo(297.43, 197.91, 297.85, 198.25, 297.45, 199.14);
    path_4.cubicTo(297.33, 198.11, 296.76, 198.07, 296.19, 198.03);
    path_4.cubicTo(295.74, 198, 295.19, 197.6, 294.97, 197.12);
    path_4.cubicTo(294.65, 196.44, 294.13, 196.42, 293.53, 196.64);
    path_4.cubicTo(292.91, 196.87, 292.32, 197.32, 291.74, 197.5);
    path_4.cubicTo(290.47, 197.9, 290.04, 198.23, 290.36, 199.68);
    path_4.cubicTo(290.65, 201.04, 289.49, 202.44, 290.23, 203.72);
    path_4.cubicTo(290.27, 203.79, 289.9, 204.15, 289.79, 204.4);
    path_4.cubicTo(289.4, 205.29, 288.61, 206.15, 288.84, 207.13);
    path_4.cubicTo(289.08, 208.26, 289.11, 209.2, 288.36, 210.33);
    path_4.cubicTo(287.87, 211.08, 287.65, 212.14, 288.38, 212.76);
    path_4.cubicTo(289.1, 213.39, 289.71, 212.88, 290.11, 211.9);
    path_4.cubicTo(290.57, 212.14, 289.97, 212.86, 290.48, 212.99);
    path_4.cubicTo(290.94, 213.1, 290.98, 212.58, 291.21, 212.31);
    path_4.cubicTo(291.39, 212.08, 291.62, 211.64, 291.94, 211.85);
    path_4.cubicTo(292.22, 212.04, 292.3, 212.37, 292.17, 212.84);
    path_4.cubicTo(291.73, 214.46, 291.43, 216.03, 291.42, 217.69);
    path_4.cubicTo(291.42, 218.44, 290.69, 219.5, 290.62, 220.51);
    path_4.cubicTo(290.62, 220.61, 290.35, 220.85, 290.22, 220.85);
    path_4.cubicTo(289.32, 220.87, 289, 221.65, 288.54, 222.96);
    path_4.cubicTo(288.49, 221.58, 288.12, 221.05, 287.13, 221.75);
    path_4.cubicTo(287.74, 220.61, 288.6, 220.03, 289.4, 219.41);
    path_4.cubicTo(290.2, 218.78, 289.94, 218.46, 289.48, 218.17);
    path_4.cubicTo(289.2, 217.99, 288.81, 217.99, 288.39, 217.89);
    path_4.cubicTo(289.11, 217.16, 288.95, 215.9, 290.01, 215.35);
    path_4.cubicTo(290.33, 215.19, 290.25, 214.67, 289.95, 214.39);
    path_4.cubicTo(289.26, 213.76, 288.76, 214.22, 288.29, 214.97);
    path_4.cubicTo(287.78, 215.83, 286.82, 216.71, 286.36, 216.6);
    path_4.cubicTo(284.87, 216.27, 284.31, 217.41, 283.68, 218.51);
    path_4.cubicTo(283.42, 218.97, 283.22, 219.35, 282.73, 219.33);
    path_4.cubicTo(282.03, 219.31, 282.49, 218.63, 282.37, 218.29);
    path_4.cubicTo(282.1, 217.55, 282.25, 216.16, 281.08, 216.56);
    path_4.cubicTo(280.14, 216.88, 279.41, 216.94, 278.71, 216.32);
    path_4.lineTo(278.73, 216.3);
    path_4.cubicTo(278.79, 217.09, 278.08, 216.85, 277.77, 217.18);
    path_4.cubicTo(277.69, 217.27, 277.59, 216.7, 277.47, 216.44);
    path_4.cubicTo(277.29, 216.02, 277.15, 215.21, 276.57, 215.59);
    path_4.cubicTo(275.91, 216.04, 275.14, 216.2, 274.46, 216.79);
    path_4.cubicTo(273.82, 217.35, 272.86, 217.51, 272.1, 217.1);
    path_4.cubicTo(271.81, 216.95, 271.79, 216.05, 271.32, 216.49);
    path_4.cubicTo(270.75, 217.01, 269.72, 217.57, 269.89, 218.35);
    path_4.cubicTo(270.11, 219.4, 269.57, 219.94, 269.03, 220.53);
    path_4.cubicTo(267.91, 221.79, 267.98, 222.15, 269.12, 223.06);
    path_4.cubicTo(269.42, 223.3, 270.67, 223.54, 269.87, 224.31);
    path_4.cubicTo(268.76, 225.38, 269.34, 226.05, 269.69, 226.9);
    path_4.cubicTo(269.88, 227.36, 270.41, 227.72, 269.93, 228.39);
    path_4.cubicTo(269.48, 229.02, 269.84, 229.12, 270.34, 229.17);
    path_4.cubicTo(271.59, 229.31, 272.64, 228.5, 273.78, 227.91);
    path_4.cubicTo(273.79, 228.71, 273.93, 229.57, 274.83, 229.09);
    path_4.cubicTo(275.71, 228.62, 276.08, 229.48, 276.76, 229.38);
    path_4.cubicTo(276.84, 229.37, 276.93, 229.18, 277.02, 229.07);
    path_4.cubicTo(277.79, 228.12, 278.18, 228, 279.15, 228.31);
    path_4.cubicTo(279.31, 228.36, 279.56, 228.23, 279.74, 228.12);
    path_4.cubicTo(280.04, 227.95, 280.09, 228.09, 280.13, 228.35);
    path_4.cubicTo(280.24, 228.99, 279.26, 231.51, 278.68, 231.81);
    path_4.cubicTo(278.09, 232.12, 277.68, 232.64, 277.44, 233.16);
    path_4.cubicTo(276.84, 234.53, 275.61, 235.45, 275.05, 236.83);
    path_4.cubicTo(274.92, 237.14, 274.61, 237.47, 274.21, 237.52);
    path_4.cubicTo(273.41, 237.62, 273.42, 238.13, 273.37, 238.81);
    path_4.cubicTo(273.27, 240.48, 273.19, 242.29, 271.13, 243.19);
    path_4.cubicTo(270.77, 243.35, 270.62, 243.69, 270.73, 244.01);
    path_4.cubicTo(271.11, 245.04, 270.36, 245.52, 269.59, 245.98);
    path_4.cubicTo(268.92, 246.38, 268.44, 246.92, 268.92, 247.53);
    path_4.cubicTo(269.91, 248.78, 269.85, 250.31, 269.14, 252.04);
    path_4.cubicTo(269.99, 252.08, 270.38, 251.38, 270.89, 250.94);
    path_4.cubicTo(271.32, 250.57, 272.02, 249.91, 272.24, 250.55);
    path_4.cubicTo(272.68, 251.91, 270.75, 252.66, 270.51, 253.96);
    path_4.cubicTo(270.46, 254.24, 269.96, 254.61, 269.66, 254.18);
    path_4.cubicTo(269.64, 254.15, 269.61, 254.11, 269.57, 254.1);
    path_4.cubicTo(269.3, 254.01, 269.02, 254.12, 268.83, 254.38);
    path_4.cubicTo(268.56, 254.73, 268.85, 254.85, 269.02, 255.01);
    path_4.cubicTo(269.55, 255.51, 270.08, 256, 269.77, 257.01);
    path_4.cubicTo(269.67, 257.33, 269.84, 257.55, 270.11, 257.58);
    path_4.cubicTo(270.51, 257.64, 270.72, 257.31, 270.81, 256.96);
    path_4.cubicTo(270.93, 256.42, 271.24, 256.09, 271.73, 255.83);
    path_4.cubicTo(272.06, 255.66, 272.53, 255.51, 272.54, 255.02);
    path_4.cubicTo(272.54, 254.47, 272.09, 254.53, 271.67, 254.6);
    path_4.cubicTo(271.42, 254.64, 271.21, 254.67, 271.17, 254.39);
    path_4.cubicTo(271.12, 253.97, 271.52, 253.9, 271.72, 253.83);
    path_4.cubicTo(272.28, 253.64, 273.06, 253.13, 273.04, 252.8);
    path_4.cubicTo(272.9, 250.99, 274.46, 251.4, 275.15, 250.7);
    path_4.cubicTo(275.38, 250.46, 275.77, 250.25, 275.88, 250.74);
    path_4.cubicTo(275.97, 251.14, 276.01, 251.57, 275.52, 251.9);
    path_4.cubicTo(275.23, 252.09, 274.91, 252.2, 274.6, 252.33);
    path_4.cubicTo(274.34, 252.44, 273.89, 252.78, 274.14, 252.86);
    path_4.cubicTo(275.32, 253.24, 274.42, 254.12, 273.99, 254.98);
    path_4.cubicTo(274.78, 254.48, 275.27, 253.95, 275.77, 253.41);
    path_4.cubicTo(276.03, 253.13, 276.42, 252.64, 276.7, 253.01);
    path_4.cubicTo(277.01, 253.42, 277.25, 253.99, 277.86, 253.17);
    path_4.cubicTo(278.38, 252.48, 279.54, 251.84, 278.88, 250.83);
    path_4.cubicTo(278.7, 250.53, 279.5, 247.83, 279.82, 247.72);
    path_4.cubicTo(280.3, 247.54, 281, 247.5, 280.82, 246.79);
    path_4.cubicTo(280.7, 246.3, 280.38, 245.82, 279.65, 245.76);
    path_4.cubicTo(278.47, 245.66, 277.31, 245.84, 276.15, 246.29);
    path_4.cubicTo(275.54, 246.52, 275.43, 246.46, 275.53, 245.88);
    path_4.cubicTo(275.68, 245, 275.9, 244.21, 276.94, 244.61);
    path_4.cubicTo(277.22, 244.72, 277.44, 244.51, 277.66, 244.28);
    path_4.cubicTo(277.46, 243.4, 278.07, 243.43, 278.68, 243.3);
    path_4.cubicTo(278.28, 243.68, 277.95, 243.98, 277.63, 244.29);
    path_4.cubicTo(278.25, 244.24, 278.8, 244.32, 279.26, 244.71);
    path_4.cubicTo(280.42, 245.69, 281.88, 244.95, 283.36, 244.43);
    path_4.cubicTo(283.4, 244.54, 282.84, 244.91, 283.22, 245.15);
    path_4.cubicTo(283.42, 244.93, 283.77, 244.69, 283.79, 244.49);
    path_4.cubicTo(283.94, 243.16, 284.64, 242.8, 285.66, 242.55);
    path_4.cubicTo(286.03, 242.46, 286.6, 241.87, 286.42, 241.24);
    path_4.cubicTo(286.21, 240.49, 286.69, 239.9, 287.13, 239.34);
    path_4.cubicTo(287.69, 238.65, 288.15, 238.05, 288.29, 237.06);
    path_4.cubicTo(288.43, 236.07, 289.48, 235.19, 290.2, 235.45);
    path_4.cubicTo(291.09, 235.78, 291.79, 235.19, 292.57, 234.8);
    path_4.cubicTo(293.45, 234.36, 293.44, 233.65, 293.11, 233.07);
    path_4.cubicTo(292.58, 232.14, 292.53, 230.08, 293.08, 228.94);
    path_4.cubicTo(293.9, 227.17, 294.44, 225.32, 295.36, 223.58);
    path_4.cubicTo(295.5, 223.32, 295.52, 223.07, 295.36, 222.9);
    path_4.cubicTo(295.2, 222.73, 295.01, 222.78, 294.79, 222.94);
    path_4.cubicTo(294.18, 223.4, 293.59, 223.86, 293.1, 224.56);
    path_4.cubicTo(292.88, 224.85, 292.56, 225.55, 292.15, 225.2);
    path_4.cubicTo(291.86, 224.94, 292.21, 224.37, 292.25, 223.95);
    path_4.cubicTo(292.28, 223.49, 292.63, 223.26, 292.92, 222.99);
    path_4.cubicTo(293.25, 222.68, 293.67, 222.24, 293.53, 221.83);
    path_4.cubicTo(292.64, 219.43, 294.51, 217.31, 295.09, 215.16);
    path_4.cubicTo(295.61, 213.39, 295.33, 213.15, 294.17, 213.07);
    path_4.cubicTo(294.59, 212.48, 295.44, 212.24, 295.27, 211.65);
    path_4.cubicTo(294.94, 210.6, 295.56, 209.72, 295.68, 208.75);
    path_4.cubicTo(295.75, 208.28, 295.8, 207.5, 295.55, 207.59);
    path_4.cubicTo(294.43, 207.97, 294.68, 206.5, 294.05, 206.25);
    path_4.cubicTo(294.7, 206.01, 295.37, 204.88, 295.88, 206.18);
    path_4.cubicTo(296.05, 206.61, 296.52, 206.42, 296.88, 206.17);
    path_4.cubicTo(297.64, 205.66, 297.89, 206.02, 297.97, 206.88);
    path_4.cubicTo(298.08, 208.07, 298.02, 209.24, 297.55, 210.45);
    path_4.cubicTo(297.3, 211.05, 297.39, 211.66, 297.86, 211.98);
    path_4.cubicTo(298.16, 212.18, 298.49, 212.39, 298.89, 212.05);
    path_4.cubicTo(299.36, 211.64, 299.75, 211.1, 299.6, 210.44);
    path_4.cubicTo(299.23, 208.65, 299.97, 207.69, 301.3, 206.84);
    path_4.cubicTo(302.3, 206.2, 303.22, 205.28, 302.8, 203.7);
    path_4.cubicTo(302.76, 203.55, 302.84, 203.18, 302.91, 203.14);
    path_4.cubicTo(303.75, 202.74, 303.56, 201.15, 304.63, 200.86);
    path_4.cubicTo(305.03, 200.75, 304.92, 199.84, 304.76, 199.35);
    path_4.cubicTo(304.68, 199.1, 304.28, 199.26, 304.25, 198.86);
    path_4.cubicTo(304.1, 196.83, 302.26, 197.6, 301.5, 196.56);
    path_4.cubicTo(301.41, 196.44, 300.77, 196.97, 300.79, 196.33);
    path_4.cubicTo(300.82, 195.68, 300.42, 195.01, 300.92, 194.33);
    path_4.cubicTo(301.23, 193.91, 301.54, 193.63, 301.98, 193.96);
    path_4.cubicTo(302.49, 194.35, 302.87, 193.96, 303, 193.31);
    path_4.cubicTo(303.15, 192.55, 303.41, 191.96, 303.91, 191.45);
    path_4.cubicTo(304.14, 191.22, 304.25, 190.85, 304.15, 190.46);
    path_4.cubicTo(303.86, 189.33, 304.18, 189.02, 305, 188.28);
    path_4.cubicTo(305.51, 187.83, 306.16, 188.38, 306.5, 187.5);
    path_4.cubicTo(307.68, 184.47, 308.39, 181.33, 307.58, 178.14);
    path_4.cubicTo(307.42, 177.47, 307.65, 177, 307.91, 176.41);
    path_4.cubicTo(308.23, 175.68, 308.56, 174.9, 308.71, 174.12);
    path_4.cubicTo(308.84, 173.34, 308.74, 172.56, 308.25, 171.85);
    path_4.cubicTo(307.63, 170.95, 307.7, 170.26, 308.14, 169.45);
    path_4.cubicTo(308.64, 168.53, 308.81, 167.6, 308.78, 166.5);
    path_4.cubicTo(308.78, 165.88, 308.84, 165.37, 308.27, 165.18);
    path_4.cubicTo(307.67, 164.97, 307, 164.43, 306.53, 165.35);
    path_4.cubicTo(306.13, 166.15, 305.41, 166.66, 304.87, 167.01);
    path_4.cubicTo(303.56, 167.82, 304.26, 165.78, 303.69, 165.35);
    path_4.cubicTo(303.59, 165.27, 303.51, 165.14, 303.42, 165.05);
    path_4.cubicTo(303.09, 164.71, 303.09, 164.3, 303.19, 163.82);
    path_4.cubicTo(303.59, 161.97, 303.24, 161.32, 301.89, 160.49);
    path_4.cubicTo(300.68, 159.76, 299.31, 160.75, 298.14, 159.86);
    path_4.cubicTo(297.99, 159.75, 297.51, 159.89, 297.49, 160.47);
    path_4.cubicTo(297.47, 161.02, 297.35, 161.54, 297.91, 161.81);
    path_4.cubicTo(298.39, 162.04, 298.84, 162.35, 299.31, 162.59);
    path_4.cubicTo(299.61, 162.74, 299.82, 162.91, 299.61, 163.34);
    path_4.cubicTo(299.45, 163.67, 299.69, 164.41, 299.09, 164.27);
    path_4.cubicTo(298.63, 164.17, 297.97, 164.44, 297.84, 163.5);
    path_4.cubicTo(297.79, 163.12, 297.8, 162.53, 297.42, 162.58);
    path_4.cubicTo(296.75, 162.67, 296.46, 162.16, 296.04, 161.73);
    path_4.cubicTo(295.61, 161.28, 294.9, 161.39, 294.97, 162.08);
    path_4.cubicTo(295.16, 163.93, 294.27, 163.2, 293.59, 163.08);
    path_4.cubicTo(293.44, 163.05, 293.18, 162.95, 293.15, 163.01);
    path_4.cubicTo(292.5, 164.42, 291.34, 165.23, 290.43, 166.3);
    path_4.cubicTo(289.71, 167.17, 289.11, 168.78, 289.25, 170.32);
    path_4.cubicTo(289.49, 170.39, 289.92, 169.8, 289.95, 170.69);
    path_4.cubicTo(289.97, 171.32, 290.04, 171.94, 289.86, 172.58);
    path_4.cubicTo(289.83, 171.77, 289.77, 170.93, 289.27, 170.3);
    path_4.cubicTo(288.96, 170.6, 288.63, 171, 288.42, 170.21);
    path_4.cubicTo(288.3, 169.76, 288.28, 169.33, 288.42, 168.87);
    path_4.cubicTo(288.55, 168.48, 288.7, 168, 288.28, 167.78);
    path_4.cubicTo(287.76, 167.5, 287.59, 168.09, 287.4, 168.45);
    path_4.cubicTo(286.97, 169.26, 286.97, 170.28, 286.38, 171.02);
    path_4.cubicTo(285.79, 171.77, 285.47, 172.57, 285.88, 173.59);
    path_4.cubicTo(286.01, 173.93, 286.09, 174.8, 285.85, 174.8);
    path_4.cubicTo(285.05, 174.8, 284.06, 176.03, 283.45, 174.52);
    path_4.lineTo(283.48, 174.52);
    path_4.lineTo(283.46, 174.49);
    path_4.close();
    path_4.moveTo(305.8, 173.76);
    path_4.cubicTo(306.09, 173.34, 306.38, 172.73, 306.89, 173.11);
    path_4.cubicTo(307.48, 173.54, 306.89, 173.99, 306.74, 174.4);
    path_4.cubicTo(306.33, 175.53, 306.87, 176.64, 306.56, 177.76);
    path_4.cubicTo(306.43, 178.22, 306.86, 179.13, 306.21, 179.08);
    path_4.cubicTo(305.81, 179.05, 305.33, 178.23, 305.58, 177.38);
    path_4.cubicTo(305.87, 176.38, 305.84, 175.55, 305.12, 174.98);
    path_4.cubicTo(304.73, 174.86, 304.34, 174.73, 303.78, 174.55);
    path_4.cubicTo(304.57, 173.92, 304.96, 174.23, 305.29, 174.82);
    path_4.cubicTo(305.46, 174.46, 305.59, 174.06, 305.81, 173.74);
    path_4.lineTo(305.8, 173.76);
    path_4.close();
    path_4.moveTo(285.66, 178.06);
    path_4.cubicTo(285.33, 178.04, 285.25, 177.68, 285.34, 177.34);
    path_4.cubicTo(285.43, 177.01, 285.75, 176.65, 285.9, 176.98);
    path_4.cubicTo(286.14, 177.52, 286.79, 176.43, 286.8, 177.38);
    path_4.cubicTo(286.81, 177.96, 286.88, 178.52, 286.5, 179);
    path_4.cubicTo(287.76, 179, 288.7, 178.24, 289.5, 177.23);
    path_4.cubicTo(289.65, 177.05, 289.62, 176.69, 289.95, 176.68);
    path_4.cubicTo(290.39, 176.67, 290.31, 177.13, 290.38, 177.37);
    path_4.cubicTo(290.54, 177.93, 290.59, 178.44, 290.55, 178.88);
    path_4.cubicTo(290.49, 179.32, 290.33, 179.68, 290.1, 179.97);
    path_4.cubicTo(289.63, 180.54, 288.85, 180.76, 287.83, 180.56);
    path_4.cubicTo(287.6, 180.51, 287.39, 180.4, 287.14, 180.46);
    path_4.cubicTo(286.67, 180.59, 286.06, 180.83, 285.83, 180.29);
    path_4.cubicTo(285.57, 179.71, 286.33, 179.45, 286.53, 178.98);
    path_4.cubicTo(286.29, 178.62, 286.25, 178.08, 285.67, 178.05);
    path_4.lineTo(285.66, 178.06);
    path_4.close();
    path_4.moveTo(302.69, 183.79);
    path_4.cubicTo(302.56, 183.67, 302.37, 184.1, 302.36, 184.35);
    path_4.cubicTo(302.33, 184.95, 302.19, 185.62, 302.61, 186.04);
    path_4.cubicTo(302.83, 186.26, 303.12, 186.26, 303.34, 185.84);
    path_4.cubicTo(303.47, 185.6, 303.6, 185.16, 303.87, 185.52);
    path_4.cubicTo(304.1, 185.83, 303.95, 186.24, 303.7, 186.46);
    path_4.cubicTo(303.24, 186.87, 302.71, 187.1, 302.28, 187.63);
    path_4.cubicTo(302.15, 187.8, 301.37, 187.49, 301.43, 187.16);
    path_4.cubicTo(301.57, 186.4, 300.64, 186.21, 301.1, 185.32);
    path_4.cubicTo(301.61, 184.34, 302.12, 183.33, 302.55, 182.28);
    path_4.cubicTo(302.99, 181.23, 303.29, 180.13, 303.4, 178.94);
    path_4.cubicTo(303.44, 178.56, 303.41, 178.03, 303.82, 177.93);
    path_4.cubicTo(304.37, 177.8, 304.24, 178.51, 304.38, 178.85);
    path_4.cubicTo(304.71, 179.67, 304.32, 181.39, 305.86, 180.63);
    path_4.cubicTo(306.12, 180.52, 306.23, 183.21, 305.96, 183.63);
    path_4.cubicTo(305.65, 184.12, 305.38, 184.64, 305.09, 185.15);
    path_4.cubicTo(305.04, 183.14, 303.43, 184.48, 302.67, 183.77);
    path_4.lineTo(302.69, 183.79);
    path_4.close();
    path_4.moveTo(292.88, 199.7);
    path_4.cubicTo(292.5, 199.76, 292.3, 199.29, 292.23, 198.85);
    path_4.cubicTo(292.2, 198.65, 292.26, 198.47, 292.44, 198.37);
    path_4.cubicTo(292.81, 198.17, 293.06, 198.28, 293.39, 198.55);
    path_4.cubicTo(294.24, 199.24, 294.33, 200.28, 294.61, 201.42);
    path_4.cubicTo(295.03, 203.45, 294.73, 204.64, 292.87, 205.38);
    path_4.cubicTo(292.32, 205.6, 292.18, 206.21, 292.44, 206.85);
    path_4.cubicTo(292.61, 207.27, 292.52, 207.82, 292.1, 207.97);
    path_4.cubicTo(291.51, 208.18, 290.81, 208.24, 290.44, 207.63);
    path_4.cubicTo(290.22, 207.28, 290.12, 206.74, 290.55, 206.33);
    path_4.cubicTo(292.01, 204.92, 292.32, 202.71, 293.48, 201.16);
    path_4.cubicTo(293.61, 200.37, 294.05, 199.52, 292.89, 199.71);
    path_4.lineTo(292.88, 199.7);
    path_4.close();
    path_4.moveTo(274.77, 243.2);
    path_4.cubicTo(274.82, 242.92, 274.99, 242.61, 274.81, 242.42);
    path_4.cubicTo(273.97, 241.53, 274.81, 240.58, 275.23, 239.65);
    path_4.cubicTo(275.47, 239.13, 275.7, 238.59, 275.91, 238.05);
    path_4.cubicTo(276.07, 237.63, 275.84, 237.13, 276.43, 236.81);
    path_4.cubicTo(277.07, 236.46, 277.19, 236.97, 277.46, 237.27);
    path_4.cubicTo(277.59, 237.41, 277.77, 237.49, 277.93, 237.6);
    path_4.cubicTo(277.79, 237.97, 277.55, 237.99, 277.28, 238.08);
    path_4.cubicTo(276.37, 238.37, 275.82, 239, 275.89, 240.04);
    path_4.cubicTo(275.95, 240.84, 275.16, 241.88, 275.39, 242.34);
    path_4.cubicTo(276.23, 243.99, 275.07, 244.83, 273.93, 245.76);
    path_4.cubicTo(273.86, 245.82, 273.79, 245.88, 273.38, 246.25);
    path_4.cubicTo(273.86, 244.96, 274.61, 244.17, 274.77, 243.2);
    path_4.close();
    path_4.moveTo(296.78, 186.14);
    path_4.cubicTo(296.47, 186.35, 296.02, 185.63, 295.91, 185.18);
    path_4.cubicTo(295.75, 184.48, 295.27, 183.78, 295.59, 183.02);
    path_4.cubicTo(295.83, 182.44, 296.21, 183.08, 296.31, 183.19);
    path_4.cubicTo(297.05, 184.04, 297.7, 185.08, 298.75, 183.41);
    path_4.cubicTo(298.97, 183.05, 299.17, 183.55, 299.15, 183.62);
    path_4.cubicTo(298.64, 184.85, 299.43, 185.41, 300.03, 186.23);
    path_4.cubicTo(298.83, 186.3, 297.9, 185.38, 296.79, 186.15);
    path_4.lineTo(296.78, 186.14);
    path_4.close();
    path_4.moveTo(286.13, 223.23);
    path_4.cubicTo(285.63, 223.08, 285.24, 222.93, 284.83, 222.83);
    path_4.cubicTo(284.55, 222.76, 284.06, 223.07, 284.05, 222.53);
    path_4.cubicTo(284.04, 222.19, 284.39, 221.93, 284.67, 221.8);
    path_4.cubicTo(285.2, 221.54, 285.46, 221.16, 285.45, 220.56);
    path_4.cubicTo(285.43, 220.11, 285.69, 219.85, 286.05, 219.65);
    path_4.cubicTo(286.13, 220.83, 286.14, 221.97, 286.15, 223.23);
    path_4.lineTo(286.13, 223.23);
    path_4.close();
    path_4.moveTo(301.75, 165.94);
    path_4.cubicTo(301.7, 166.34, 301.33, 166.24, 301.2, 165.98);
    path_4.cubicTo(300.98, 165.51, 300.11, 165.18, 300.64, 164.49);
    path_4.cubicTo(301.13, 163.84, 301.41, 163.17, 301.5, 162.29);
    path_4.lineTo(301.91, 162.29);
    path_4.cubicTo(301.86, 163.51, 301.89, 164.73, 301.75, 165.93);
    path_4.lineTo(301.75, 165.94);
    path_4.close();
    path_4.moveTo(298.7, 169.33);
    path_4.cubicTo(299.18, 169.49, 299.42, 170.09, 299.39, 170.71);
    path_4.cubicTo(299.37, 171.21, 299.1, 171.53, 298.65, 171.41);
    path_4.cubicTo(298.11, 171.26, 298, 170.78, 298.08, 170.31);
    path_4.cubicTo(298.14, 169.72, 298.23, 169.18, 298.7, 169.34);
    path_4.lineTo(298.7, 169.33);
    path_4.close();
    path_4.moveTo(282.3, 227.88);
    path_4.cubicTo(282.9, 228.03, 281.78, 228.75, 282.34, 228.99);
    path_4.cubicTo(282.1, 229.41, 281.78, 229.31, 281.55, 229.22);
    path_4.cubicTo(281.08, 229.05, 281.33, 228.56, 281.39, 228.15);
    path_4.cubicTo(281.66, 227.73, 282.07, 227.81, 282.3, 227.87);
    path_4.lineTo(282.3, 227.88);
    path_4.close();
    path_4.moveTo(301.72, 173.46);
    path_4.cubicTo(302.06, 173.74, 302.25, 174.29, 302.2, 174.83);
    path_4.cubicTo(302.17, 175.15, 301.85, 175.5, 301.55, 175.32);
    path_4.cubicTo(301.14, 175.07, 301.25, 174.49, 301.24, 174.03);
    path_4.cubicTo(301.32, 173.69, 301.52, 173.3, 301.72, 173.46);
    path_4.close();
    path_4.moveTo(273.91, 246.67);
    path_4.cubicTo(274.11, 246.8, 274.03, 247.15, 273.83, 247.25);
    path_4.cubicTo(273.4, 247.46, 272.97, 248.03, 272.52, 247.71);
    path_4.cubicTo(272.38, 247.61, 272.35, 247.34, 272.78, 247.02);
    path_4.cubicTo(273.03, 246.8, 273.45, 246.38, 273.91, 246.67);
    path_4.close();
    path_4.moveTo(283.53, 188.07);
    path_4.cubicTo(283.63, 187.78, 283.83, 187.59, 284.08, 187.69);
    path_4.cubicTo(284.47, 187.86, 284.34, 188.26, 284.24, 188.6);
    path_4.cubicTo(284.17, 188.83, 284.02, 188.98, 283.78, 188.85);
    path_4.cubicTo(283.52, 188.67, 283.41, 188.42, 283.53, 188.07);
    path_4.close();
    path_4.moveTo(293.17, 174.47);
    path_4.cubicTo(292.48, 173.94, 292.73, 173.39, 293.05, 172.69);
    path_4.cubicTo(293.6, 173.28, 293.2, 173.83, 293.17, 174.47);
    path_4.close();
    path_4.moveTo(277.09, 221.54);
    path_4.cubicTo(276.77, 221.44, 276.92, 221.11, 277.04, 220.87);
    path_4.cubicTo(277.16, 220.63, 277.47, 220.32, 277.59, 220.58);
    path_4.cubicTo(277.68, 220.78, 277.76, 221.08, 277.82, 221.41);
    path_4.cubicTo(277.56, 221.46, 277.29, 221.59, 277.09, 221.53);
    path_4.lineTo(277.09, 221.54);
    path_4.close();
    path_4.moveTo(292.06, 202.26);
    path_4.cubicTo(291.95, 202.39, 291.76, 202.53, 291.66, 202.3);
    path_4.cubicTo(291.43, 201.75, 291.96, 201.37, 292.08, 200.88);
    path_4.cubicTo(292.4, 201.34, 292.44, 201.8, 292.05, 202.26);
    path_4.lineTo(292.06, 202.26);
    path_4.close();
    path_4.moveTo(280.6, 227.34);
    path_4.cubicTo(280.02, 227.37, 279.91, 226.81, 279.3, 226.6);
    path_4.cubicTo(280.47, 226.01, 280.62, 226.51, 280.6, 227.34);
    path_4.close();
    path_4.moveTo(299.39, 176.64);
    path_4.cubicTo(299.56, 176.71, 299.78, 176.83, 299.71, 177.15);
    path_4.cubicTo(299.65, 177.44, 299.44, 177.52, 299.25, 177.54);
    path_4.cubicTo(298.98, 177.56, 298.95, 177.3, 298.97, 177.03);
    path_4.cubicTo(299.05, 176.81, 299.15, 176.55, 299.39, 176.64);
    path_4.close();
    path_4.moveTo(299.85, 172.41);
    path_4.cubicTo(299.95, 172.2, 300.21, 172.1, 300.39, 171.95);
    path_4.cubicTo(300.47, 172.1, 300.59, 172.25, 300.61, 172.41);
    path_4.cubicTo(300.65, 172.84, 300.41, 172.87, 300.15, 172.83);
    path_4.cubicTo(300.02, 172.73, 299.69, 172.75, 299.86, 172.4);
    path_4.lineTo(299.85, 172.41);
    path_4.close();
    path_4.moveTo(279.28, 221.48);
    path_4.cubicTo(279.47, 220.82, 279.35, 220.24, 280.01, 219.91);
    path_4.cubicTo(279.71, 220.34, 279.91, 220.99, 279.28, 221.48);
    path_4.close();
    path_4.moveTo(288.42, 172.66);
    path_4.cubicTo(288.44, 172.42, 288.54, 172.19, 288.77, 172.21);
    path_4.cubicTo(289.07, 172.23, 289.09, 172.51, 289.06, 172.79);
    path_4.cubicTo(289.03, 173.05, 288.91, 173.19, 288.67, 173.15);
    path_4.cubicTo(288.41, 173.11, 288.41, 172.88, 288.43, 172.66);
    path_4.lineTo(288.42, 172.66);
    path_4.close();
    path_4.moveTo(294.55, 169.52);
    path_4.cubicTo(294.34, 169.58, 294.27, 169.46, 294.29, 169.23);
    path_4.cubicTo(294.32, 168.94, 294.37, 168.63, 294.68, 168.68);
    path_4.cubicTo(294.79, 168.7, 294.88, 168.9, 294.95, 168.98);
    path_4.cubicTo(294.91, 169.36, 294.74, 169.46, 294.55, 169.52);
    path_4.close();
    path_4.moveTo(296.26, 199.9);
    path_4.cubicTo(296.19, 200.08, 296.05, 200.3, 295.91, 200.12);
    path_4.cubicTo(295.79, 199.97, 295.71, 199.69, 295.73, 199.47);
    path_4.cubicTo(295.75, 199.22, 295.95, 199.22, 296.11, 199.3);
    path_4.cubicTo(296.3, 199.43, 296.38, 199.63, 296.27, 199.91);
    path_4.lineTo(296.26, 199.9);
    path_4.close();
    path_4.moveTo(277.27, 250.43);
    path_4.cubicTo(276.88, 250.15, 276.95, 249.8, 277.1, 249.29);
    path_4.cubicTo(277.54, 249.61, 277.5, 249.93, 277.27, 250.43);
    path_4.close();
    path_4.moveTo(281.91, 183.38);
    path_4.cubicTo(281.86, 183.47, 281.71, 183.49, 281.6, 183.54);
    path_4.cubicTo(281.47, 183.22, 281.46, 182.9, 281.64, 182.54);
    path_4.cubicTo(281.89, 182.78, 282.14, 182.99, 281.91, 183.38);
    path_4.close();
    path_4.moveTo(280.46, 217.6);
    path_4.cubicTo(280.5, 217.54, 280.73, 217.54, 280.77, 217.6);
    path_4.cubicTo(281, 217.97, 280.82, 218.25, 280.48, 218.53);
    path_4.cubicTo(280.36, 218.19, 280.25, 217.9, 280.46, 217.6);
    path_4.close();
    path_4.moveTo(296.64, 201.3);
    path_4.cubicTo(296.7, 201.96, 296.43, 202.34, 295.96, 202.66);
    path_4.cubicTo(296.05, 202.1, 296.31, 201.72, 296.64, 201.3);
    path_4.close();
    path_4.moveTo(296.58, 176.45);
    path_4.cubicTo(296.52, 176.68, 296.41, 176.92, 296.18, 176.86);
    path_4.cubicTo(295.99, 176.81, 296.07, 176.56, 296.09, 176.4);
    path_4.cubicTo(296.11, 176.23, 296.12, 176.01, 296.34, 176.05);
    path_4.cubicTo(296.47, 176.14, 296.63, 176.21, 296.57, 176.45);
    path_4.lineTo(296.58, 176.45);
    path_4.close();
    path_4.moveTo(291.09, 171.09);
    path_4.cubicTo(291.34, 171.5, 291.18, 171.84, 291.17, 172.37);
    path_4.cubicTo(290.74, 171.83, 290.78, 171.5, 291.09, 171.09);
    path_4.close();
    path_4.moveTo(291.68, 182.98);
    path_4.cubicTo(291.76, 182.83, 291.8, 182.57, 291.99, 182.65);
    path_4.cubicTo(292.17, 182.73, 292.31, 182.94, 292.22, 183.2);
    path_4.cubicTo(292.15, 183.41, 291.98, 183.44, 291.82, 183.36);
    path_4.cubicTo(291.63, 183.32, 291.56, 183.21, 291.68, 182.98);
    path_4.close();
    path_4.moveTo(291.96, 209.57);
    path_4.cubicTo(291.93, 209.64, 291.74, 209.72, 291.67, 209.69);
    path_4.cubicTo(291.54, 209.64, 291.35, 209.5, 291.36, 209.4);
    path_4.cubicTo(291.39, 209.15, 291.59, 209.19, 291.75, 209.22);
    path_4.cubicTo(291.89, 209.28, 292.06, 209.34, 291.96, 209.57);
    path_4.close();
    path_4.moveTo(291.29, 199.74);
    path_4.cubicTo(291.41, 199.63, 291.49, 199.51, 291.53, 199.52);
    path_4.cubicTo(291.89, 199.62, 292, 199.9, 291.82, 200.44);
    path_4.cubicTo(291.63, 200.18, 291.47, 199.96, 291.3, 199.74);
    path_4.lineTo(291.29, 199.74);
    path_4.close();
    path_4.moveTo(293.69, 178.64);
    path_4.cubicTo(293.65, 178.82, 293.55, 179.01, 293.37, 178.84);
    path_4.cubicTo(293.21, 178.69, 293.22, 178.44, 293.28, 178.22);
    path_4.cubicTo(293.31, 178.13, 293.41, 178.07, 293.48, 178);
    path_4.cubicTo(293.67, 178.2, 293.74, 178.4, 293.69, 178.64);
    path_4.close();
    path_4.moveTo(287.47, 223.5);
    path_4.cubicTo(287.59, 223.31, 287.76, 223.34, 287.9, 223.41);
    path_4.cubicTo(288.04, 223.48, 288.18, 223.6, 288.04, 223.81);
    path_4.cubicTo(287.93, 223.98, 287.76, 224.01, 287.53, 223.78);
    path_4.cubicTo(287.53, 223.78, 287.31, 223.74, 287.47, 223.49);
    path_4.lineTo(287.47, 223.5);
    path_4.close();
    path_4.moveTo(276.39, 219.32);
    path_4.cubicTo(276.59, 219.39, 276.51, 219.59, 276.41, 219.75);
    path_4.cubicTo(276.3, 219.92, 276.13, 219.95, 275.99, 219.86);
    path_4.cubicTo(275.85, 219.77, 275.83, 219.6, 276.01, 219.35);
    path_4.cubicTo(276.1, 219.35, 276.27, 219.28, 276.39, 219.32);
    path_4.close();
    path_4.moveTo(290.71, 174.44);
    path_4.cubicTo(290.64, 174.31, 290.53, 174.19, 290.5, 174.04);
    path_4.cubicTo(290.45, 173.84, 290.55, 173.65, 290.74, 173.7);
    path_4.cubicTo(290.87, 173.73, 290.96, 173.9, 291.1, 174.03);
    path_4.cubicTo(290.94, 174.2, 290.83, 174.32, 290.72, 174.44);
    path_4.lineTo(290.71, 174.44);
    path_4.close();
    path_4.moveTo(278.75, 235.27);
    path_4.cubicTo(278.88, 235.16, 279.11, 235.08, 279.24, 235.12);
    path_4.cubicTo(279.43, 235.19, 279.36, 235.4, 279.22, 235.58);
    path_4.cubicTo(279.09, 235.75, 278.96, 235.91, 278.92, 235.86);
    path_4.cubicTo(278.7, 235.59, 278.54, 235.45, 278.75, 235.27);
    path_4.close();
    path_4.moveTo(272.01, 245.34);
    path_4.cubicTo(272.09, 245.25, 272.26, 245.12, 272.32, 245.14);
    path_4.cubicTo(272.53, 245.22, 272.4, 245.41, 272.3, 245.57);
    path_4.cubicTo(272.2, 245.71, 272.1, 245.89, 271.91, 245.82);
    path_4.cubicTo(271.82, 245.66, 271.87, 245.49, 272.01, 245.34);
    path_4.close();

    Paint paint4Fill = Paint()..style = PaintingStyle.fill;
    paint4Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_4, paint4Fill);

    Path path_5 = Path();
    path_5.moveTo(211.75, 288.29);
    path_5.cubicTo(211.97, 287.31, 213.13, 286.97, 213.68, 286.2);
    path_5.cubicTo(213.8, 286.03, 214.27, 285.89, 214.63, 286.22);
    path_5.cubicTo(215.11, 286.67, 215.45, 287.19, 215.85, 287.68);
    path_5.cubicTo(216.58, 288.56, 216.51, 288.92, 215.2, 289.19);
    path_5.cubicTo(214.17, 289.4, 214.07, 289.76, 214.44, 290.4);
    path_5.cubicTo(214.58, 290.63, 214.78, 290.86, 214.63, 291.2);
    path_5.cubicTo(214.04, 291.42, 213.65, 291.08, 213.19, 290.98);
    path_5.cubicTo(212.34, 290.8, 212.03, 291.57, 211.45, 291.87);
    path_5.cubicTo(211.16, 292.01, 211.03, 292.32, 211.22, 292.52);
    path_5.cubicTo(211.59, 292.91, 212.17, 292.96, 212.77, 292.84);
    path_5.cubicTo(214.4, 292.55, 215.61, 291.84, 216.31, 290.36);
    path_5.cubicTo(216.61, 289.72, 217.4, 289.28, 218.23, 289.09);
    path_5.cubicTo(219.04, 288.88, 219.91, 288.93, 220.38, 289.35);
    path_5.cubicTo(220.58, 289.53, 220.36, 289.72, 220.31, 289.92);
    path_5.cubicTo(220.05, 291.08, 219.32, 292.02, 218.28, 292.45);
    path_5.cubicTo(219.78, 293.45, 221.67, 291.42, 223.24, 292.34);
    path_5.cubicTo(223.3, 292.37, 223.55, 292.28, 223.61, 292.2);
    path_5.cubicTo(224.47, 291.06, 225.81, 291.09, 226.97, 290.71);
    path_5.cubicTo(227.62, 290.46, 227.61, 290, 227.76, 289.6);
    path_5.cubicTo(227.88, 289.28, 227.6, 289.08, 227.3, 289.21);
    path_5.cubicTo(225.57, 290, 224.15, 289.05, 222.55, 289.23);
    path_5.cubicTo(222.3, 289.26, 222, 289.32, 221.98, 289.07);
    path_5.cubicTo(221.98, 288.9, 222.14, 288.66, 222.29, 288.5);
    path_5.cubicTo(222.89, 287.88, 223.77, 287.69, 224.5, 287.26);
    path_5.cubicTo(224.92, 287.02, 225.29, 286.79, 225.25, 286.34);
    path_5.cubicTo(225.21, 285.88, 224.8, 285.85, 224.39, 285.79);
    path_5.cubicTo(223.44, 285.63, 222.32, 285.96, 221.53, 285.33);
    path_5.cubicTo(221.29, 285.14, 220.72, 285.33, 220.48, 285.81);
    path_5.cubicTo(220.37, 286.03, 220.41, 286.53, 219.88, 286.31);
    path_5.cubicTo(219.63, 286.21, 219.34, 286.08, 219.54, 285.65);
    path_5.cubicTo(219.71, 285.29, 219.4, 284.83, 220.07, 284.56);
    path_5.cubicTo(220.99, 284.2, 222.08, 283.8, 222.79, 284.18);
    path_5.cubicTo(223.89, 284.78, 224.53, 284.43, 225.16, 283.48);
    path_5.cubicTo(225.4, 283.11, 225.84, 282.77, 226.04, 282.93);
    path_5.cubicTo(227.11, 283.76, 227.09, 282.65, 227.32, 282.21);
    path_5.cubicTo(227.63, 281.63, 227.97, 281.06, 227.59, 280.42);
    path_5.cubicTo(227.31, 279.95, 227.95, 279.48, 228.27, 279.05);
    path_5.cubicTo(228.41, 278.87, 228.69, 278.74, 228.87, 278.91);
    path_5.cubicTo(229.1, 279.13, 229.38, 279.55, 229.16, 279.78);
    path_5.cubicTo(228.17, 280.77, 228.86, 281.72, 228.54, 282.69);
    path_5.cubicTo(228.32, 283.34, 228.59, 283.91, 229.55, 283.63);
    path_5.cubicTo(230.26, 283.43, 231.53, 283.71, 231.24, 282.34);
    path_5.cubicTo(231.05, 281.43, 231.55, 280.56, 231.98, 279.71);
    path_5.cubicTo(232.21, 279.27, 232.76, 279.05, 233.2, 279.02);
    path_5.cubicTo(233.62, 279, 233.69, 279.41, 233.58, 279.77);
    path_5.cubicTo(233.37, 280.46, 233.81, 280.31, 234.32, 280.36);
    path_5.cubicTo(235.85, 280.5, 237.26, 279.14, 238.74, 279.31);
    path_5.cubicTo(239.03, 279.35, 239.51, 278.78, 239.66, 279.31);
    path_5.cubicTo(239.81, 279.81, 239.41, 280.14, 238.93, 280.41);
    path_5.cubicTo(238.44, 280.68, 237.97, 280.96, 237.46, 281.19);
    path_5.cubicTo(236.82, 281.5, 236.4, 282.03, 236.7, 282.47);
    path_5.cubicTo(236.95, 282.84, 237.63, 282.47, 237.98, 282.14);
    path_5.cubicTo(238.65, 281.54, 239.45, 281.03, 240.01, 280.39);
    path_5.cubicTo(240.7, 279.58, 241.32, 279.39, 242.15, 279.56);
    path_5.cubicTo(243.18, 279.76, 242.37, 280.61, 242.36, 281.15);
    path_5.cubicTo(244.01, 281.03, 245.38, 280.04, 246.69, 279.16);
    path_5.cubicTo(247.42, 278.69, 248.95, 278.7, 248.55, 277.25);
    path_5.cubicTo(248.51, 277.11, 248.7, 277.03, 248.85, 277.03);
    path_5.cubicTo(250.15, 277.01, 250.15, 276.06, 250.42, 275.3);
    path_5.cubicTo(250.58, 274.84, 250.59, 274.22, 251.32, 274.13);
    path_5.cubicTo(252.19, 274.03, 252.95, 274.25, 252.96, 275.19);
    path_5.cubicTo(252.96, 276.08, 252.18, 276.2, 251.5, 276.34);
    path_5.cubicTo(250.55, 276.55, 249.87, 276.93, 250.04, 277.95);
    path_5.cubicTo(250.15, 278.56, 249.64, 278.71, 249.14, 278.89);
    path_5.cubicTo(247.95, 279.32, 247.25, 280.3, 246.5, 281.21);
    path_5.cubicTo(246.1, 281.68, 246.21, 282.07, 246.57, 282.36);
    path_5.cubicTo(246.96, 282.68, 247.4, 282.95, 248.08, 282.53);
    path_5.cubicTo(248.51, 282.24, 248.93, 281.98, 248.69, 281.4);
    path_5.cubicTo(248.42, 280.74, 249.17, 280.22, 249.7, 279.79);
    path_5.cubicTo(250.04, 279.51, 250.36, 279.61, 250.27, 280.08);
    path_5.cubicTo(250.22, 280.38, 249.86, 280.7, 250.12, 281.01);
    path_5.cubicTo(251.15, 280.48, 252.44, 280.2, 252.46, 278.76);
    path_5.cubicTo(252.46, 278.53, 252.64, 278.42, 252.86, 278.4);
    path_5.cubicTo(254.73, 278.23, 255.86, 276.62, 257.26, 275.56);
    path_5.cubicTo(257.59, 275.3, 258.07, 274.94, 257.83, 274.62);
    path_5.cubicTo(257.51, 274.19, 257.19, 274.77, 256.92, 275.02);
    path_5.cubicTo(255.82, 276.03, 255.18, 275.34, 254.44, 275.06);
    path_5.cubicTo(254.02, 274.9, 254.01, 274.55, 254.4, 274.21);
    path_5.cubicTo(255.17, 273.53, 255.32, 271.95, 256.76, 272.29);
    path_5.cubicTo(258.01, 272.58, 258.48, 271.59, 258.27, 271);
    path_5.cubicTo(257.85, 269.82, 258.91, 269.08, 259.38, 268.19);
    path_5.cubicTo(259.65, 267.67, 260.18, 267.1, 260.5, 268.05);
    path_5.cubicTo(260.7, 268.68, 261.18, 268.03, 261.48, 267.79);
    path_5.cubicTo(261.8, 267.53, 262.22, 266.95, 261.8, 266.9);
    path_5.cubicTo(260.63, 266.74, 261.24, 265.69, 261.04, 265.06);
    path_5.cubicTo(260.3, 265.02, 259.94, 265.52, 259.58, 266.12);
    path_5.cubicTo(259.34, 266.52, 258.98, 266.87, 258.53, 266.62);
    path_5.cubicTo(258.06, 266.36, 258.48, 266.05, 258.71, 265.73);
    path_5.cubicTo(259.2, 265.05, 259.15, 264.3, 259.46, 263.6);
    path_5.cubicTo(259.56, 263.37, 259.63, 263.13, 259.9, 263.05);
    path_5.cubicTo(260.22, 262.96, 260.23, 263.23, 260.31, 263.41);
    path_5.lineTo(261.03, 265.08);
    path_5.cubicTo(261.96, 264.53, 262.5, 263.43, 263.62, 262.93);
    path_5.cubicTo(263.59, 263.24, 263.61, 263.42, 263.56, 263.6);
    path_5.cubicTo(262.89, 265.79, 262.87, 265.81, 264.66, 266.47);
    path_5.cubicTo(265.09, 266.63, 264.92, 266.89, 264.7, 267.23);
    path_5.cubicTo(264.36, 267.73, 263.96, 267.65, 263.54, 267.66);
    path_5.cubicTo(262.84, 267.66, 262.66, 268.25, 262.45, 268.75);
    path_5.cubicTo(262.3, 269.12, 262.14, 269.55, 262.51, 269.71);
    path_5.cubicTo(262.98, 269.91, 263.42, 269.55, 263.78, 269.13);
    path_5.cubicTo(264.1, 268.76, 264.55, 268.55, 264.86, 268.22);
    path_5.cubicTo(265.6, 267.43, 266.71, 266.67, 266.78, 265.66);
    path_5.cubicTo(266.86, 264.34, 267.53, 264, 268.58, 263.71);
    path_5.cubicTo(269.23, 263.53, 270.25, 263.12, 270.22, 262.52);
    path_5.cubicTo(270.08, 260.5, 271.63, 260.05, 272.84, 259.23);
    path_5.cubicTo(273.32, 258.9, 273.77, 258.6, 274.11, 258.1);
    path_5.cubicTo(274.62, 257.37, 276.13, 256.25, 273.94, 256.56);
    path_5.cubicTo(273.45, 256.62, 273.73, 255.84, 273.22, 255.76);
    path_5.cubicTo(272.32, 257.12, 270.44, 257.44, 269.95, 259.71);
    path_5.cubicTo(269.6, 258.26, 269.21, 257.74, 268.15, 258.97);
    path_5.cubicTo(267.79, 259.39, 267.48, 259.46, 267.02, 259.16);
    path_5.cubicTo(266.45, 258.79, 265.76, 259.28, 265.31, 260);
    path_5.cubicTo(265.08, 260.36, 265.23, 261.11, 264.53, 260.97);
    path_5.cubicTo(263.95, 260.85, 263.44, 260.37, 263.84, 259.63);
    path_5.cubicTo(264.13, 259.09, 263.89, 259.04, 263.66, 258.82);
    path_5.cubicTo(262.99, 258.22, 262.38, 257.58, 261.17, 258.42);
    path_5.cubicTo(260.91, 258.6, 260.52, 258.67, 260.29, 258.45);
    path_5.cubicTo(260.08, 258.24, 260.29, 257.94, 260.45, 257.71);
    path_5.cubicTo(260.84, 257.16, 260.76, 256.9, 260.18, 256.78);
    path_5.cubicTo(259.48, 256.63, 259.55, 255.97, 259.72, 255.41);
    path_5.cubicTo(259.91, 254.8, 260.33, 254.88, 260.79, 255.04);
    path_5.cubicTo(261.31, 255.22, 261.4, 254.92, 261.26, 254.46);
    path_5.cubicTo(261.1, 253.96, 260.79, 253.78, 260.26, 253.72);
    path_5.cubicTo(259.55, 253.64, 259.33, 254.21, 258.96, 254.62);
    path_5.cubicTo(258.72, 254.89, 258.62, 255.54, 258.07, 255.22);
    path_5.cubicTo(257.61, 254.95, 257.66, 254.6, 258.13, 254.16);
    path_5.cubicTo(258.4, 253.9, 258.75, 253.47, 258.19, 253.36);
    path_5.cubicTo(256.62, 253.05, 257.75, 252.31, 258.21, 251.75);
    path_5.cubicTo(258.47, 251.39, 259.22, 251.07, 258.95, 250.71);
    path_5.cubicTo(258.45, 250.03, 258.4, 249, 257.65, 248.57);
    path_5.cubicTo(257.05, 248.23, 256.33, 247.91, 256.09, 249.23);
    path_5.cubicTo(256.01, 249.73, 255.47, 250.12, 255.35, 250.5);
    path_5.cubicTo(254.91, 251.88, 254.21, 252.89, 252.73, 253.27);
    path_5.cubicTo(252.55, 253.32, 252.56, 253.66, 252.64, 253.86);
    path_5.cubicTo(252.79, 254.26, 252.5, 254.27, 252.24, 254.34);
    path_5.cubicTo(250.54, 254.78, 249.17, 255.66, 248.17, 257.23);
    path_5.cubicTo(247.57, 258.14, 246.67, 258.62, 245.67, 258.38);
    path_5.cubicTo(244.67, 258.14, 245.12, 257.44, 245.4, 256.75);
    path_5.cubicTo(245.5, 256.53, 245.4, 256.3, 245.16, 256.28);
    path_5.cubicTo(245.02, 256.27, 244.75, 256.38, 244.72, 256.46);
    path_5.cubicTo(244.47, 257.22, 244.09, 257.56, 243.34, 257.14);
    path_5.cubicTo(243.18, 257.05, 242.88, 257.27, 242.85, 257.5);
    path_5.cubicTo(242.68, 258.9, 241.44, 259.09, 240.49, 259.59);
    path_5.lineTo(240.49, 259.57);
    path_5.cubicTo(240.93, 259.78, 241.38, 259.68, 241.86, 259.51);
    path_5.cubicTo(242.17, 259.4, 242.63, 259.69, 242.32, 259.83);
    path_5.cubicTo(241.39, 260.26, 241.89, 262.85, 239.91, 261.6);
    path_5.cubicTo(239.83, 261.55, 239.57, 261.68, 239.42, 261.77);
    path_5.cubicTo(238.67, 262.27, 237.93, 262.72, 237.02, 262.83);
    path_5.cubicTo(236.61, 262.88, 236.18, 263.76, 235.81, 262.94);
    path_5.cubicTo(235.47, 262.2, 236.19, 262.01, 236.64, 261.7);
    path_5.cubicTo(236.9, 261.52, 237.2, 261.4, 237.43, 261.19);
    path_5.cubicTo(237.7, 260.94, 237.89, 260.61, 237.7, 260.28);
    path_5.cubicTo(237.52, 259.97, 237.18, 259.85, 236.83, 259.96);
    path_5.cubicTo(236.27, 260.14, 235.4, 260.29, 235.24, 260.64);
    path_5.cubicTo(234.65, 261.92, 233.62, 262.44, 232.41, 262.82);
    path_5.cubicTo(231.22, 263.2, 230.41, 264.57, 228.92, 264.28);
    path_5.cubicTo(228.47, 264.19, 227.82, 264.81, 227.65, 265.3);
    path_5.cubicTo(227.29, 266.3, 226.63, 267.08, 225.94, 267.89);
    path_5.cubicTo(225.78, 268.08, 225.85, 268.58, 225.36, 268.4);
    path_5.cubicTo(225.07, 268.29, 225.12, 268.04, 225.2, 267.77);
    path_5.cubicTo(225.28, 267.51, 225.21, 267.24, 224.95, 267.16);
    path_5.cubicTo(224.57, 267.04, 224.48, 267.52, 224.29, 267.6);
    path_5.cubicTo(223.63, 267.85, 223.1, 268.19, 222.75, 268.8);
    path_5.cubicTo(222.75, 268.82, 222.67, 268.8, 222.63, 268.8);
    path_5.cubicTo(221.36, 268.98, 221.36, 268.96, 220.97, 270.13);
    path_5.cubicTo(220.95, 270.2, 220.85, 270.26, 220.78, 270.31);
    path_5.cubicTo(219.8, 270.96, 219.07, 272, 217.8, 272.21);
    path_5.cubicTo(216.54, 272.43, 215.39, 273.1, 213.94, 273.06);
    path_5.cubicTo(212.94, 273, 211.97, 274.91, 210.38, 274.72);
    path_5.cubicTo(210.34, 274.72, 210.26, 274.98, 210.19, 275.12);
    path_5.cubicTo(209.69, 276.06, 209.01, 276.61, 207.78, 276.45);
    path_5.cubicTo(206.71, 276.31, 206.11, 277.15, 206.54, 278.01);
    path_5.cubicTo(206.68, 278.29, 206.79, 278.52, 206.5, 278.78);
    path_5.cubicTo(206.18, 279.08, 205.83, 279.01, 205.55, 278.78);
    path_5.cubicTo(205.27, 278.55, 204.86, 278.03, 204.79, 278.06);
    path_5.cubicTo(203.93, 278.56, 203.05, 278.85, 202.08, 279.13);
    path_5.cubicTo(201.3, 279.35, 201.65, 280.94, 202.61, 281.37);
    path_5.cubicTo(203.12, 281.6, 203.54, 281.83, 202.72, 282.24);
    path_5.cubicTo(201.76, 282.71, 202.28, 282.96, 202.75, 283.22);
    path_5.cubicTo(203.68, 283.73, 203.53, 284.31, 202.72, 284.97);
    path_5.cubicTo(201.67, 285.85, 201.54, 287.02, 202.54, 287.78);
    path_5.cubicTo(203.28, 288.32, 204.15, 287.77, 204.9, 287.52);
    path_5.cubicTo(205.64, 287.28, 205.11, 286.88, 204.98, 286.54);
    path_5.cubicTo(204.86, 286.23, 205.09, 285.81, 205.39, 285.91);
    path_5.cubicTo(206.46, 286.26, 206.99, 285.6, 207.61, 285.01);
    path_5.cubicTo(207.87, 284.76, 208.32, 284.59, 208.62, 284.83);
    path_5.cubicTo(208.89, 285.04, 208.85, 285.41, 208.58, 285.72);
    path_5.cubicTo(208.46, 285.85, 208.28, 285.96, 208.2, 286.1);
    path_5.cubicTo(207.76, 286.92, 208.15, 287.61, 208.47, 288.29);
    path_5.cubicTo(208.63, 288.63, 209.12, 288.86, 209.51, 288.59);
    path_5.cubicTo(210.32, 288.03, 211.03, 288.3, 211.8, 288.26);
    path_5.lineTo(211.78, 288.28);
    path_5.lineTo(211.75, 288.29);
    path_5.close();
    path_5.moveTo(244.52, 275.15);
    path_5.cubicTo(244.61, 275.09, 244.85, 275.1, 244.86, 275.15);
    path_5.cubicTo(245.03, 275.65, 244.68, 276.05, 244.25, 276.42);
    path_5.cubicTo(244.24, 276.59, 244.29, 276.86, 244.21, 276.92);
    path_5.cubicTo(243.25, 277.62, 242.24, 278.27, 241.23, 278.89);
    path_5.cubicTo(240.91, 279.08, 240.57, 279.01, 240.49, 278.65);
    path_5.cubicTo(240.42, 278.35, 240.14, 278, 240.64, 277.74);
    path_5.cubicTo(241.8, 277.12, 242.91, 276.03, 244.28, 276.42);
    path_5.cubicTo(244.44, 275.99, 243.78, 275.6, 244.52, 275.15);
    path_5.close();
    path_5.moveTo(208.7, 280.52);
    path_5.cubicTo(208.77, 280.48, 209.08, 280.63, 209.09, 280.73);
    path_5.cubicTo(209.2, 281.51, 208.31, 281.41, 207.94, 281.79);
    path_5.cubicTo(208.11, 282.76, 207.07, 283.12, 206.6, 283.75);
    path_5.cubicTo(206.36, 284.08, 206.02, 283.88, 205.8, 283.67);
    path_5.cubicTo(205.53, 283.41, 205.27, 283.16, 204.84, 283.11);
    path_5.cubicTo(204.32, 283.04, 203.83, 282.89, 204.01, 282.3);
    path_5.cubicTo(204.17, 281.78, 203.98, 281.09, 204.75, 280.81);
    path_5.cubicTo(205.39, 280.58, 205.98, 280.7, 206.45, 281.15);
    path_5.cubicTo(206.85, 281.52, 207.03, 282.34, 207.96, 281.8);
    path_5.cubicTo(208.05, 281.31, 208.18, 280.82, 208.7, 280.53);
    path_5.lineTo(208.7, 280.52);
    path_5.close();
    path_5.moveTo(244.08, 266.08);
    path_5.cubicTo(244.2, 265.18, 244.82, 264.78, 245.4, 264.35);
    path_5.cubicTo(245.26, 263.58, 244.94, 263.04, 244.03, 262.91);
    path_5.cubicTo(243.24, 262.8, 242.98, 261.64, 243.46, 260.96);
    path_5.cubicTo(243.58, 260.8, 243.71, 260.68, 243.9, 260.71);
    path_5.cubicTo(244.81, 260.86, 245.69, 260.83, 246.53, 260.56);
    path_5.cubicTo(247.38, 260.31, 248.16, 259.79, 248.86, 258.98);
    path_5.cubicTo(249.21, 258.58, 249.55, 258.75, 249.54, 259.2);
    path_5.cubicTo(249.53, 259.66, 249.39, 260.14, 249.27, 260.62);
    path_5.cubicTo(249.21, 260.87, 248.93, 261.27, 249.19, 261.34);
    path_5.cubicTo(250.49, 261.7, 249.36, 262.66, 249.11, 262.98);
    path_5.cubicTo(248.64, 263.65, 247.9, 264.38, 246.95, 264.23);
    path_5.cubicTo(246.43, 264.15, 245.93, 264.13, 245.39, 264.35);
    path_5.cubicTo(245.61, 265.28, 245.09, 265.76, 244.08, 266.08);
    path_5.close();
    path_5.moveTo(251.54, 272.23);
    path_5.cubicTo(251.47, 272.3, 251.31, 272.4, 251.31, 272.39);
    path_5.cubicTo(250.18, 270.97, 249.52, 273.86, 248.41, 273.29);
    path_5.cubicTo(248.19, 273.18, 248.05, 273.57, 248.1, 273.76);
    path_5.cubicTo(248.36, 274.68, 247.67, 274.62, 247.04, 274.78);
    path_5.cubicTo(246.14, 275.01, 246.15, 274.67, 246.6, 274.09);
    path_5.cubicTo(246.87, 273.75, 247.11, 273.55, 246.73, 273.23);
    path_5.cubicTo(245.93, 272.55, 246.14, 271.66, 247.38, 271.01);
    path_5.cubicTo(248.37, 270.5, 248.68, 270.1, 248.02, 269.36);
    path_5.cubicTo(247.79, 269.1, 247.8, 268.56, 248.18, 268.25);
    path_5.cubicTo(249.69, 267.01, 248.72, 266.55, 247.67, 265.86);
    path_5.cubicTo(248.99, 265.8, 250.03, 264.99, 251.11, 265.43);
    path_5.cubicTo(251.64, 265.64, 252.31, 265.21, 252.56, 264.73);
    path_5.cubicTo(253.4, 263.17, 253.93, 264.07, 254.45, 264.54);
    path_5.cubicTo(254.71, 264.77, 254.81, 265.2, 255.29, 265.11);
    path_5.cubicTo(256.14, 264.95, 256.2, 265.66, 255.98, 266.07);
    path_5.cubicTo(255.68, 266.61, 255.5, 267.54, 254.61, 267.57);
    path_5.cubicTo(254.03, 267.57, 253.51, 267.66, 253.01, 268.07);
    path_5.cubicTo(252.45, 268.52, 251.88, 268.99, 251.99, 269.71);
    path_5.cubicTo(252.1, 270.35, 252.49, 270.7, 253.25, 270.63);
    path_5.cubicTo(253.36, 270.62, 253.46, 270.73, 253.71, 270.86);
    path_5.cubicTo(252.89, 271.43, 252.1, 271.63, 251.52, 272.23);
    path_5.lineTo(251.54, 272.23);
    path_5.close();
    path_5.moveTo(212.84, 278.41);
    path_5.cubicTo(212.19, 278.69, 212.09, 279.15, 212.33, 279.64);
    path_5.cubicTo(212.58, 280.16, 213.07, 279.87, 213.5, 279.74);
    path_5.cubicTo(214.94, 279.22, 216.34, 278.33, 217.86, 279.14);
    path_5.cubicTo(218.27, 279.36, 218.84, 279.5, 218.58, 280.07);
    path_5.cubicTo(218.35, 280.59, 217.82, 280.47, 217.38, 280.41);
    path_5.cubicTo(216.72, 280.32, 216.05, 280.77, 215.38, 280.62);
    path_5.cubicTo(215.17, 280.57, 214.88, 280.85, 215, 281.04);
    path_5.cubicTo(215.71, 282.12, 214.54, 282.48, 213.86, 282.99);
    path_5.cubicTo(213.57, 283.22, 213.27, 283.44, 212.98, 283.68);
    path_5.cubicTo(212.77, 283.86, 212.49, 284.09, 212.74, 284.31);
    path_5.cubicTo(212.96, 284.51, 213.27, 284.31, 213.46, 284.1);
    path_5.cubicTo(213.78, 283.74, 214.1, 283.45, 214.65, 283.6);
    path_5.cubicTo(215.31, 283.79, 215.72, 283.55, 215.86, 282.88);
    path_5.cubicTo(215.92, 282.6, 216.15, 282.42, 216.47, 282.44);
    path_5.cubicTo(216.76, 282.46, 216.96, 282.6, 217.04, 282.85);
    path_5.cubicTo(217.14, 283.15, 216.87, 283.3, 216.63, 283.46);
    path_5.cubicTo(215.66, 284.18, 214.63, 284.78, 213.65, 285.46);
    path_5.cubicTo(213, 285.9, 212.5, 285.69, 212.28, 285.27);
    path_5.cubicTo(211.8, 284.37, 211.02, 284.07, 209.91, 284.19);
    path_5.cubicTo(209.41, 284.24, 208.98, 284.13, 208.88, 283.66);
    path_5.cubicTo(208.77, 283.13, 209.23, 282.95, 209.7, 282.78);
    path_5.cubicTo(210.41, 282.53, 211.13, 282.25, 210.96, 281.37);
    path_5.cubicTo(210.94, 281.27, 211.05, 281.14, 211.1, 281.02);
    path_5.cubicTo(211.28, 280.66, 212.11, 280.53, 211.78, 280.06);
    path_5.cubicTo(211.43, 279.56, 210.83, 279.9, 210.33, 280.12);
    path_5.cubicTo(210.25, 280.16, 210.12, 280.2, 210.08, 280.17);
    path_5.cubicTo(209.62, 279.81, 209.64, 279.22, 209.97, 278.86);
    path_5.cubicTo(210.42, 278.38, 209.77, 277.06, 211.05, 277.39);
    path_5.cubicTo(212.59, 277.81, 213.67, 276.42, 215.06, 276.5);
    path_5.cubicTo(215.27, 276.51, 215.62, 276.19, 215.47, 275.95);
    path_5.cubicTo(215.13, 275.39, 215.56, 275.22, 215.99, 275.06);
    path_5.cubicTo(216.34, 274.93, 216.46, 275.18, 216.51, 275.42);
    path_5.cubicTo(216.59, 275.8, 216.81, 276.2, 216.24, 276.51);
    path_5.cubicTo(215.96, 276.67, 215.69, 276.83, 215.31, 277.05);
    path_5.cubicTo(214.28, 276.95, 213.73, 277.97, 212.84, 278.4);
    path_5.lineTo(212.84, 278.41);
    path_5.close();
    path_5.moveTo(224.83, 275.38);
    path_5.cubicTo(224.44, 275.34, 223.74, 275.45, 223.63, 276.05);
    path_5.cubicTo(223.56, 276.43, 223.3, 276.95, 223.7, 277.22);
    path_5.cubicTo(224.13, 277.51, 224.63, 277.22, 225.36, 276.64);
    path_5.cubicTo(224.92, 277.51, 224.8, 278.2, 223.98, 278.14);
    path_5.cubicTo(222.88, 278.06, 222.43, 277.25, 222.13, 276.41);
    path_5.cubicTo(221.92, 275.83, 222.31, 275.5, 222.91, 275.11);
    path_5.cubicTo(223.89, 274.48, 224.91, 274.54, 225.89, 274.43);
    path_5.cubicTo(226.37, 274.37, 226.8, 274.24, 227.27, 274.15);
    path_5.cubicTo(226.45, 274.55, 225.93, 275.52, 224.84, 275.38);
    path_5.lineTo(224.83, 275.38);
    path_5.close();
    path_5.moveTo(222.19, 282.02);
    path_5.cubicTo(222.17, 281.44, 221.58, 280.71, 222.69, 280.3);
    path_5.cubicTo(223.33, 280.07, 224.31, 279.4, 224.64, 280.12);
    path_5.cubicTo(225.14, 281.23, 223.55, 281.43, 223.06, 282.08);
    path_5.cubicTo(222.67, 282.24, 222.21, 282.62, 222.19, 282.02);
    path_5.close();
    path_5.moveTo(265.98, 263.79);
    path_5.cubicTo(265.75, 263.99, 265.52, 264.2, 265.31, 264.43);
    path_5.cubicTo(265.01, 264.75, 264.69, 265.35, 264.33, 264.92);
    path_5.cubicTo(264.08, 264.63, 264.13, 264.01, 264.63, 263.68);
    path_5.cubicTo(265.34, 263.21, 265.53, 262.5, 265.93, 261.9);
    path_5.cubicTo(267.22, 262.43, 267.22, 262.76, 265.98, 263.79);
    path_5.close();
    path_5.moveTo(253.64, 256.65);
    path_5.cubicTo(253.91, 256.92, 253.99, 257.3, 253.59, 257.69);
    path_5.cubicTo(253.3, 257.98, 251.49, 257.52, 251.19, 257.08);
    path_5.cubicTo(251.03, 256.85, 251.13, 256.61, 251.3, 256.35);
    path_5.cubicTo(252.16, 256.23, 253.03, 256.06, 253.64, 256.65);
    path_5.close();
    path_5.moveTo(257.76, 267.91);
    path_5.cubicTo(258.09, 268.53, 257.58, 269.3, 257.06, 269.95);
    path_5.cubicTo(256.76, 270.32, 256.41, 270.33, 256.31, 269.99);
    path_5.cubicTo(256.16, 269.48, 255.8, 268.92, 256.63, 268.31);
    path_5.cubicTo(257.03, 268.17, 257.45, 267.31, 257.76, 267.91);
    path_5.close();
    path_5.moveTo(255.41, 261.11);
    path_5.cubicTo(255.72, 261.01, 256.09, 260.92, 256.24, 261.2);
    path_5.cubicTo(256.38, 261.45, 256.09, 261.69, 255.88, 261.88);
    path_5.cubicTo(255.43, 262.28, 255.06, 262.84, 254.16, 263);
    path_5.cubicTo(254.64, 262.24, 254.45, 261.4, 255.42, 261.1);
    path_5.lineTo(255.41, 261.11);
    path_5.close();
    path_5.moveTo(234.5, 272.38);
    path_5.cubicTo(234.97, 272.02, 235.4, 272.38, 235.64, 272.54);
    path_5.cubicTo(235.94, 272.75, 235.48, 273.13, 235.21, 273.35);
    path_5.cubicTo(234.82, 273.67, 234.38, 273.7, 233.97, 273.57);
    path_5.cubicTo(233.94, 273.09, 234.12, 272.68, 234.5, 272.38);
    path_5.close();
    path_5.moveTo(246.37, 267.41);
    path_5.cubicTo(246.47, 267.87, 246.39, 268.45, 245.92, 268.89);
    path_5.cubicTo(245.58, 269.21, 245.46, 268.95, 245.33, 268.75);
    path_5.cubicTo(245.02, 268.28, 245.27, 267.91, 245.73, 267.52);
    path_5.cubicTo(245.95, 267.36, 246.29, 267.06, 246.37, 267.41);
    path_5.close();
    path_5.moveTo(230.88, 270.78);
    path_5.cubicTo(230.8, 270.8, 230.71, 270.78, 230.57, 270.79);
    path_5.cubicTo(230.91, 270.14, 231.55, 269.9, 232.15, 269.6);
    path_5.cubicTo(231.66, 269.91, 231.5, 270.6, 230.88, 270.78);
    path_5.close();
    path_5.moveTo(230.09, 266.7);
    path_5.cubicTo(230.37, 266.85, 230.26, 267.03, 230.12, 267.2);
    path_5.cubicTo(229.66, 267.74, 229.42, 267.08, 228.99, 267.17);
    path_5.cubicTo(229.34, 266.79, 229.61, 266.45, 230.09, 266.7);
    path_5.close();
    path_5.moveTo(217.29, 287.57);
    path_5.cubicTo(217.25, 287.14, 217.54, 286.82, 217.94, 286.17);
    path_5.cubicTo(217.96, 286.93, 217.99, 287.33, 217.29, 287.57);
    path_5.close();
    path_5.moveTo(244.83, 277.81);
    path_5.cubicTo(244.91, 278.33, 244.83, 278.64, 244.24, 279.03);
    path_5.cubicTo(244.12, 278.52, 244.34, 278.25, 244.83, 277.81);
    path_5.close();
    path_5.moveTo(227.8, 272.97);
    path_5.lineTo(229.06, 272.49);
    path_5.cubicTo(228.74, 272.9, 228.33, 273.13, 227.8, 272.97);
    path_5.close();
    path_5.moveTo(236.86, 271.84);
    path_5.cubicTo(236.92, 271.79, 237.07, 271.84, 237.19, 271.84);
    path_5.cubicTo(237.15, 271.99, 237.15, 272.16, 237.06, 272.3);
    path_5.cubicTo(236.97, 272.43, 236.84, 272.41, 236.67, 272.08);
    path_5.cubicTo(236.65, 272.11, 236.73, 271.95, 236.87, 271.84);
    path_5.lineTo(236.86, 271.84);
    path_5.close();
    path_5.moveTo(231.54, 277.92);
    path_5.cubicTo(231.57, 278, 231.49, 278.22, 231.46, 278.22);
    path_5.cubicTo(231.29, 278.24, 231.09, 278.27, 230.97, 278.2);
    path_5.cubicTo(230.82, 278.12, 230.97, 278, 231.09, 277.91);
    path_5.cubicTo(231.26, 277.83, 231.45, 277.71, 231.53, 277.91);
    path_5.lineTo(231.54, 277.92);
    path_5.close();

    Paint paint5Fill = Paint()..style = PaintingStyle.fill;
    paint5Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_5, paint5Fill);

    Path path_6 = Path();
    path_6.moveTo(108.88, 13.72);
    path_6.cubicTo(109.18, 13.61, 109.48, 13.45, 109.5, 13.16);
    path_6.cubicTo(109.52, 12.79, 109.15, 12.76, 108.79, 12.73);
    path_6.cubicTo(107.77, 12.66, 106.78, 12.73, 105.89, 13.45);
    path_6.cubicTo(105.66, 13.64, 105.35, 13.82, 105.08, 13.6);
    path_6.cubicTo(104.86, 13.43, 104.84, 13.2, 104.99, 12.93);
    path_6.cubicTo(105.33, 12.32, 108.16, 11.1, 108.64, 11.47);
    path_6.cubicTo(109.83, 12.37, 111.25, 11.63, 112.5, 11.39);
    path_6.cubicTo(113.44, 11.22, 114.55, 10.37, 114.35, 9.65001);
    path_6.cubicTo(114.14, 8.91001, 112.9, 9.44001, 112.07, 9.61001);
    path_6.cubicTo(111.92, 9.64001, 111.78, 9.73001, 111.63, 9.78001);
    path_6.cubicTo(111.1, 9.94001, 110.79, 9.84001, 110.54, 9.45001);
    path_6.cubicTo(109.88, 8.45001, 109.38, 8.41001, 108.28, 9.43001);
    path_6.cubicTo(107.79, 9.89001, 106.89, 10.2, 107.1, 11.02);
    path_6.cubicTo(107.19, 11.38, 106.65, 11.58, 106.19, 11.5);
    path_6.cubicTo(105.53, 11.38, 105.06, 11.1, 104.89, 10.55);
    path_6.cubicTo(104.68, 9.89001, 104.22, 9.56001, 103.19, 9.93001);
    path_6.cubicTo(102.85, 10.05, 102.45, 10.07, 102.1, 10.07);
    path_6.cubicTo(101.27, 10.05, 100.27, 9.06001, 99.77, 10.71);
    path_6.cubicTo(99.77, 10.74, 99.47, 10.8, 99.35, 10.78);
    path_6.cubicTo(98.05, 10.54, 98.02, 11.32, 98.04, 11.93);
    path_6.cubicTo(98.07, 12.64, 98.02, 13.15, 96.88, 13.33);
    path_6.cubicTo(96.23, 13.43, 96, 13.8, 96.2, 14.29);
    path_6.cubicTo(96.57, 15.18, 95.83, 15.2, 95.11, 15.13);
    path_6.cubicTo(94.61, 15.08, 94.18, 14.92, 93.9, 14.61);
    path_6.cubicTo(93.54, 14.21, 93.07, 14.06, 92.54, 14.61);
    path_6.cubicTo(92.04, 15.12, 91.5, 16.1, 91.96, 16.23);
    path_6.cubicTo(93.27, 16.6, 94.76, 16.56, 96.19, 16.77);
    path_6.cubicTo(96.25, 16.77, 96.37, 16.67, 96.43, 16.6);
    path_6.cubicTo(97.11, 15.79, 97.95, 16.45, 98.71, 16.1);
    path_6.cubicTo(99.76, 15.62, 100.14, 16.18, 100.45, 16.8);
    path_6.cubicTo(100.54, 16.99, 100.8, 17.14, 101.04, 17);
    path_6.cubicTo(102.52, 16.11, 102.53, 17.06, 103.12, 17.7);
    path_6.cubicTo(103.78, 18.43, 102.78, 19.03, 102.97, 19.73);
    path_6.cubicTo(103.58, 19.47, 104.12, 19.29, 104.29, 18.7);
    path_6.cubicTo(104.38, 18.38, 104.74, 18.03, 105.03, 18.22);
    path_6.cubicTo(105.69, 18.66, 106.3, 18.32, 106.95, 18.11);
    path_6.cubicTo(107.32, 17.99, 107.66, 17.99, 107.82, 18.3);
    path_6.cubicTo(107.97, 18.59, 107.67, 18.74, 107.43, 18.92);
    path_6.cubicTo(106.44, 19.65, 105.53, 20.39, 105.44, 21.55);
    path_6.cubicTo(105.39, 22.17, 104.87, 22.37, 104.17, 22.27);
    path_6.cubicTo(102.29, 22.02, 100.39, 21.82, 98.43, 22.98);
    path_6.cubicTo(96.74, 24.05, 95.01, 25.23, 94.38, 26.88);
    path_6.cubicTo(94.02, 27.84, 93.98, 28.21, 92.65, 28.49);
    path_6.cubicTo(91.95, 28.67, 91.18, 28.89, 90.42, 29.01);
    path_6.cubicTo(90.15, 29.05, 89.64, 29.08, 89.73, 29.32);
    path_6.cubicTo(90.23, 30.75, 88.84, 30.39, 88.24, 30.54);
    path_6.cubicTo(87.25, 30.79, 86.87, 31.25, 87.32, 31.88);
    path_6.cubicTo(87.7, 32.42, 88, 33.13, 88.76, 33.31);
    path_6.cubicTo(89.8, 33.56, 89.23, 34.04, 88.88, 34.47);
    path_6.cubicTo(88.42, 35.01, 87.79, 35.13, 87.17, 35.21);
    path_6.cubicTo(86.9, 34.73, 87.95, 33.97, 87.03, 33.78);
    path_6.cubicTo(86.32, 33.63, 85.52, 33.63, 84.75, 33.67);
    path_6.cubicTo(84.19, 33.7, 83.93, 34, 84.34, 34.41);
    path_6.cubicTo(84.54, 34.6, 84.8, 34.75, 85.05, 34.88);
    path_6.cubicTo(85.77, 35.27, 85.8, 35.63, 84.91, 36.15);
    path_6.cubicTo(84.44, 36.42, 83.82, 36.49, 83.39, 37.13);
    path_6.cubicTo(84.36, 37.06, 84.07, 38.53, 85.23, 38.06);
    path_6.cubicTo(86.01, 37.75, 87.02, 37.7, 87.37, 36.68);
    path_6.cubicTo(87.5, 36.31, 87.9, 36.34, 88.2, 36.28);
    path_6.cubicTo(88.42, 36.23, 88.52, 36.4, 88.47, 36.59);
    path_6.cubicTo(88.22, 37.42, 88.85, 38.65, 87.06, 38.76);
    path_6.cubicTo(86.71, 38.78, 86.51, 39.12, 86.37, 39.38);
    path_6.cubicTo(85.62, 40.74, 84.88, 42.04, 84.23, 43.45);
    path_6.cubicTo(84.09, 43.74, 83.96, 44.07, 84.2, 44.27);
    path_6.cubicTo(84.55, 44.56, 84.72, 44.11, 84.94, 43.94);
    path_6.cubicTo(86.03, 43.11, 87.14, 41.92, 88.52, 43.16);
    path_6.cubicTo(88.59, 43.23, 88.94, 43.18, 88.98, 43.11);
    path_6.cubicTo(89.53, 42.22, 90.66, 42.11, 91.38, 41.42);
    path_6.cubicTo(90.65, 41.03, 90.41, 40.39, 90.17, 39.71);
    path_6.cubicTo(89.95, 39.08, 89.89, 38.7, 90.59, 38.01);
    path_6.cubicTo(91.36, 37.24, 92.35, 37.02, 93.04, 36.44);
    path_6.cubicTo(94.56, 35.16, 94.66, 36.43, 95.14, 37);
    path_6.cubicTo(95.81, 37.8, 94.78, 37.91, 94.37, 38.25);
    path_6.cubicTo(93.99, 38.56, 93.67, 38.84, 94, 39.29);
    path_6.cubicTo(94.48, 39.95, 95.26, 39.93, 95.86, 39.52);
    path_6.cubicTo(96.54, 39.06, 97.72, 38.42, 97.23, 37.59);
    path_6.cubicTo(96.81, 36.9, 97.02, 36.37, 97.23, 35.81);
    path_6.cubicTo(97.41, 35.34, 97.55, 34.92, 97.36, 34.48);
    path_6.cubicTo(97.69, 34.42, 97.82, 34.51, 97.9, 34.65);
    path_6.cubicTo(98.17, 35.1, 98.46, 35.63, 99.12, 35.56);
    path_6.cubicTo(99.86, 35.48, 99.94, 34.82, 100.07, 34.29);
    path_6.cubicTo(100.18, 33.86, 100.47, 33.59, 100.9, 33.5);
    path_6.cubicTo(101.37, 33.4, 101.24, 33.87, 101.43, 34.04);
    path_6.cubicTo(101.72, 34.3, 101.82, 34.63, 101.83, 35.01);
    path_6.cubicTo(101.83, 35.33, 101.83, 35.81, 102.31, 35.69);
    path_6.cubicTo(102.79, 35.57, 102.58, 35.14, 102.51, 34.85);
    path_6.cubicTo(102.44, 34.55, 102.14, 34.27, 102.58, 33.97);
    path_6.cubicTo(102.93, 33.74, 103.29, 33.86, 103.62, 33.97);
    path_6.cubicTo(103.99, 34.1, 104.32, 34.31, 104.7, 34.38);
    path_6.cubicTo(105.3, 34.5, 105.57, 34.28, 105.35, 33.7);
    path_6.cubicTo(104.97, 32.71, 104.63, 31.68, 102.96, 32.33);
    path_6.cubicTo(102.77, 32.4, 102.5, 32.4, 102.29, 31.95);
    path_6.cubicTo(104.11, 31.88, 104.29, 30.57, 104.83, 29.47);
    path_6.cubicTo(104.94, 29.24, 105.14, 29.03, 105.29, 28.81);
    path_6.cubicTo(105.79, 28.1, 105.75, 27.62, 104.87, 27.26);
    path_6.cubicTo(103.24, 26.6, 103.27, 25.78, 104.93, 24.66);
    path_6.cubicTo(105.28, 24.42, 105.98, 24.1, 105.78, 23.84);
    path_6.cubicTo(104.8, 22.58, 106.39, 22.49, 107.06, 22.05);
    path_6.cubicTo(107.55, 21.72, 108.07, 21.59, 107.73, 20.91);
    path_6.cubicTo(107.24, 19.93, 107.75, 19.49, 109.09, 19.57);
    path_6.cubicTo(109.75, 19.61, 110.07, 19.91, 110.3, 20.37);
    path_6.cubicTo(110.58, 20.93, 111.26, 21.15, 111.81, 20.73);
    path_6.cubicTo(113.12, 19.74, 114.87, 19.42, 116.1, 18.33);
    path_6.cubicTo(116.48, 18, 116.8, 17.78, 117.17, 18.17);
    path_6.cubicTo(117.47, 18.49, 117.64, 18.86, 117.25, 19.28);
    path_6.cubicTo(116.77, 19.79, 116.12, 20.07, 115.42, 19.97);
    path_6.cubicTo(114, 19.77, 113.24, 20.38, 112.74, 21.45);
    path_6.cubicTo(113.28, 21.56, 113.68, 21.2, 114.14, 21.13);
    path_6.cubicTo(114.99, 20.99, 115.41, 21.09, 114.94, 21.92);
    path_6.cubicTo(114.81, 22.14, 114.73, 22.39, 114.71, 22.63);
    path_6.cubicTo(114.63, 23.48, 114.28, 23.77, 113.16, 23.76);
    path_6.cubicTo(110.34, 23.84, 109.04, 25.66, 110.15, 27.83);
    path_6.cubicTo(111.23, 26.28, 111.24, 26.29, 113.46, 25.92);
    path_6.cubicTo(114.66, 25.73, 115.38, 24.65, 116.67, 24.48);
    path_6.cubicTo(117.14, 24.42, 116.8, 23.68, 117.01, 23.25);
    path_6.cubicTo(117.37, 22.5, 117.84, 22.34, 118.29, 22.97);
    path_6.cubicTo(118.98, 23.92, 119.94, 23.72, 121, 23.5);
    path_6.cubicTo(122.06, 23.27, 123.11, 22.97, 124.18, 22.76);
    path_6.cubicTo(124.55, 22.69, 125.13, 22.53, 125.18, 23.07);
    path_6.cubicTo(125.22, 23.52, 124.93, 23.84, 124.34, 23.89);
    path_6.cubicTo(123.55, 23.96, 122.75, 24.03, 121.96, 24.15);
    path_6.cubicTo(121.52, 24.22, 120.85, 24.32, 121.27, 24.89);
    path_6.cubicTo(121.64, 25.41, 122.09, 25.97, 122.9, 26.03);
    path_6.cubicTo(123.76, 26.1, 123.84, 25.38, 124.25, 24.81);
    path_6.cubicTo(124.57, 25.63, 125.19, 26.17, 126.09, 25.79);
    path_6.cubicTo(127.57, 25.18, 126.41, 24.24, 126.55, 23.3);
    path_6.cubicTo(127.17, 24.41, 128.21, 25.01, 129.44, 25.45);
    path_6.cubicTo(129.73, 25.55, 129.6, 25.88, 129.7, 26.09);
    path_6.cubicTo(130.13, 26.99, 130.93, 27.33, 132.05, 27.34);
    path_6.cubicTo(133.57, 27.36, 134.92, 26.1, 136.5, 26.75);
    path_6.cubicTo(136.68, 26.82, 136.96, 26.71, 137.07, 26.5);
    path_6.cubicTo(137.22, 26.21, 136.99, 26.03, 136.76, 25.91);
    path_6.cubicTo(136.46, 25.75, 136.11, 25.57, 135.77, 25.55);
    path_6.cubicTo(134.73, 25.48, 134.32, 24.85, 133.9, 24.21);
    path_6.cubicTo(133.77, 24.01, 133.54, 23.79, 133.9, 23.6);
    path_6.cubicTo(134.17, 23.45, 134.52, 23.35, 134.82, 23.37);
    path_6.cubicTo(135.27, 23.39, 135.05, 23.71, 135.04, 23.92);
    path_6.cubicTo(135.03, 24.19, 134.93, 24.48, 135.31, 24.68);
    path_6.cubicTo(135.96, 24.45, 136.14, 23.79, 136.8, 23.49);
    path_6.cubicTo(138.12, 22.89, 138.98, 23.85, 140.06, 23.96);
    path_6.cubicTo(140.63, 24.02, 140.14, 24.64, 140.16, 25);
    path_6.cubicTo(140.19, 25.71, 140.65, 25.74, 141.28, 25.57);
    path_6.cubicTo(142.32, 25.32, 143.36, 25.05, 144.43, 24.92);
    path_6.cubicTo(145.28, 24.82, 146.13, 24.74, 146.99, 24.67);
    path_6.lineTo(148.27, 24.56);
    path_6.lineTo(149.55, 24.51);
    path_6.cubicTo(149.87, 24.49, 150.15, 24.25, 150.2, 23.96);
    path_6.cubicTo(150.34, 23.18, 150.86, 22.76, 151.75, 22.63);
    path_6.cubicTo(152.12, 22.58, 152.2, 22.33, 152.34, 22.05);
    path_6.cubicTo(153.06, 20.63, 153.29, 20.6, 154.71, 21.59);
    path_6.cubicTo(155.23, 21.94, 157.97, 21.68, 158.26, 21.18);
    path_6.cubicTo(158.31, 21.09, 158.3, 20.92, 158.23, 20.86);
    path_6.cubicTo(157.04, 19.71, 158.47, 19.95, 159.05, 19.75);
    path_6.cubicTo(159.25, 19.68, 159.6, 19.72, 159.59, 19.47);
    path_6.cubicTo(159.59, 19.31, 159.39, 19.11, 159.21, 19);
    path_6.cubicTo(158.72, 18.71, 158.13, 18.73, 157.56, 18.69);
    path_6.cubicTo(156.58, 18.63, 155.59, 18.52, 154.61, 18.49);
    path_6.cubicTo(155, 18.24, 155.37, 18.26, 155.74, 18.29);
    path_6.cubicTo(156.12, 18.32, 156.5, 18.35, 156.88, 18.36);
    path_6.cubicTo(157.43, 18.38, 159.3, 17.19, 159.23, 16.79);
    path_6.cubicTo(159.1, 16.08, 158.37, 15.78, 157.64, 15.53);
    path_6.cubicTo(157.55, 15.5, 157.45, 15.51, 157.35, 15.5);
    path_6.cubicTo(157.09, 15.46, 156.87, 15.35, 156.86, 15.13);
    path_6.cubicTo(156.86, 14.84, 157.2, 14.92, 157.4, 14.85);
    path_6.cubicTo(157.73, 14.74, 157.99, 14.88, 158.3, 14.93);
    path_6.cubicTo(159.85, 15.2, 161.57, 15.04, 162.42, 13.99);
    path_6.cubicTo(163.02, 13.26, 163.5, 12.18, 163.22, 11.04);
    path_6.cubicTo(163.09, 10.54, 162.84, 10.48, 162.38, 10.41);
    path_6.cubicTo(161.65, 10.28, 161.32, 9.97001, 161.54, 9.30001);
    path_6.cubicTo(161.83, 8.41001, 161.81, 7.59001, 160.3, 7.26001);
    path_6.cubicTo(159.5, 7.09001, 159.11, 6.46001, 158.48, 5.89001);
    path_6.cubicTo(160.13, 5.57001, 161.97, 5.80001, 162.96, 4.49001);
    path_6.cubicTo(163.04, 4.38001, 163.46, 4.37001, 163.68, 4.42001);
    path_6.cubicTo(165.04, 4.74001, 166.46, 4.44001, 167.83, 4.89001);
    path_6.cubicTo(168.65, 5.16001, 169.61, 4.81001, 169.62, 4.18001);
    path_6.cubicTo(169.62, 3.65001, 168.55, 3.75001, 168, 3.78001);
    path_6.cubicTo(166.06, 3.90001, 164.31, 3.26001, 162.48, 2.94001);
    path_6.cubicTo(160.75, 2.66001, 159.13, 1.88001, 157.25, 2.09001);
    path_6.cubicTo(156.57, 2.16001, 155.58, 1.92001, 155.66, 2.82001);
    path_6.cubicTo(155.73, 3.54001, 156.34, 3.88001, 157.29, 3.84001);
    path_6.cubicTo(157.84, 3.82001, 158.45, 3.64001, 158.95, 4.21001);
    path_6.cubicTo(157.91, 4.44001, 157.36, 4.94001, 156.82, 5.67001);
    path_6.cubicTo(156.29, 6.39001, 155.53, 7.54001, 153.67, 6.92001);
    path_6.cubicTo(152.89, 6.65001, 152.12, 7.06001, 151.99, 7.80001);
    path_6.cubicTo(151.89, 8.36001, 151.44, 8.51001, 150.84, 8.59001);
    path_6.cubicTo(149.06, 8.82001, 148.98, 8.90001, 149.98, 10.07);
    path_6.cubicTo(150.23, 10.37, 150.3, 10.71, 150.58, 10.98);
    path_6.cubicTo(151.05, 11.44, 150.65, 13.51, 150.09, 13.81);
    path_6.cubicTo(149.79, 13.97, 149.46, 13.95, 149.34, 13.69);
    path_6.cubicTo(148.83, 12.61, 147.65, 12.9, 146.68, 12.9);
    path_6.cubicTo(146.25, 12.89, 145.82, 13.03, 145.39, 12.82);
    path_6.cubicTo(144.35, 12.3, 144.3, 11.81, 145.31, 10.77);
    path_6.cubicTo(145.77, 10.3, 146.21, 9.78001, 145.98, 9.23001);
    path_6.cubicTo(145.75, 8.70001, 145, 9.01001, 144.49, 8.99001);
    path_6.cubicTo(143.1, 8.94001, 141.7, 8.99001, 140.32, 8.88001);
    path_6.cubicTo(138.94, 8.79001, 137.61, 8.64001, 136.33, 8.05001);
    path_6.cubicTo(135.62, 7.72001, 134.74, 7.74001, 133.94, 8.05001);
    path_6.cubicTo(132.64, 8.57001, 133.17, 9.38001, 133.44, 10.05);
    path_6.cubicTo(133.78, 10.9, 134.42, 10.36, 134.97, 10.08);
    path_6.cubicTo(135.19, 9.97001, 135.43, 9.88001, 135.68, 9.83001);
    path_6.cubicTo(136.03, 9.76001, 136.43, 9.71001, 136.67, 9.96001);
    path_6.cubicTo(136.96, 10.26, 136.68, 10.57, 136.54, 10.87);
    path_6.cubicTo(136.37, 11.23, 135.88, 11.24, 135.57, 11.44);
    path_6.cubicTo(134.9, 11.88, 134.57, 12.33, 135.06, 13);
    path_6.cubicTo(136.46, 14.92, 136.41, 14.92, 133.98, 16.06);
    path_6.cubicTo(133.31, 16.36, 132.67, 16.61, 131.9, 16.57);
    path_6.cubicTo(131.6, 16.55, 131.11, 16.58, 131.19, 17);
    path_6.cubicTo(131.25, 17.34, 131.43, 17.73, 132.05, 17.51);
    path_6.cubicTo(132.42, 17.38, 132.81, 17.25, 133.18, 17.35);
    path_6.cubicTo(133.38, 17.4, 133.59, 17.55, 133.68, 17.71);
    path_6.cubicTo(133.79, 17.89, 133.55, 17.99, 133.37, 18.05);
    path_6.cubicTo(131.95, 18.46, 130.68, 19.36, 129.09, 19.13);
    path_6.cubicTo(128.43, 19.03, 127.98, 19.15, 127.76, 19.76);
    path_6.cubicTo(127.64, 20.09, 127.25, 20.12, 126.91, 20.02);
    path_6.cubicTo(126.41, 19.87, 126.68, 19.65, 126.85, 19.37);
    path_6.cubicTo(127.36, 18.54, 127.22, 17.87, 126.03, 17.64);
    path_6.cubicTo(125.11, 17.49, 124.76, 16.68, 123.89, 16.43);
    path_6.cubicTo(123.59, 16.34, 123.48, 15.81, 124.1, 15.7);
    path_6.cubicTo(125.88, 15.36, 126.17, 13.99, 127.08, 13.09);
    path_6.cubicTo(127.59, 12.58, 127.67, 11.78, 126.24, 12.16);
    path_6.cubicTo(125.86, 12.26, 125.61, 12.2, 125.29, 12.02);
    path_6.cubicTo(123.96, 11.27, 122.84, 11.68, 122.08, 13.03);
    path_6.cubicTo(121.84, 13.45, 122.22, 14.21, 121.2, 14.23);
    path_6.cubicTo(120.57, 14.24, 119.86, 14.36, 119.32, 14.03);
    path_6.cubicTo(118.87, 13.75, 118.37, 13.6, 117.85, 13.54);
    path_6.cubicTo(117.33, 13.5, 116.78, 13.56, 116.21, 13.67);
    path_6.cubicTo(115.42, 13.82, 114.62, 13.93, 114.7, 12.97);
    path_6.cubicTo(114.72, 12.7, 114.62, 12.48, 114.24, 12.5);
    path_6.cubicTo(113.97, 12.5, 113.74, 12.65, 113.62, 12.86);
    path_6.cubicTo(113.36, 13.31, 112.92, 13.8, 112.93, 14.23);
    path_6.cubicTo(112.93, 14.9, 113.12, 15.35, 111.87, 15.39);
    path_6.cubicTo(111.28, 15.4, 110.59, 16.12, 110.71, 16.6);
    path_6.cubicTo(110.82, 17.06, 111.54, 16.65, 112, 16.54);
    path_6.cubicTo(112.76, 16.35, 112.94, 16.75, 112.77, 17.18);
    path_6.cubicTo(112.42, 18.04, 111.31, 18.24, 110.52, 18.56);
    path_6.cubicTo(109.92, 18.79, 109.81, 18.03, 109.68, 17.57);
    path_6.cubicTo(109.37, 16.47, 109.54, 15, 107.27, 15.38);
    path_6.cubicTo(107.03, 15.42, 106.78, 15.21, 106.44, 15.08);
    path_6.cubicTo(107.25, 14.44, 108.09, 14.06, 108.97, 13.74);
    path_6.lineTo(108.88, 13.72);
    path_6.close();
    path_6.moveTo(156.18, 14.13);
    path_6.cubicTo(156.1, 14.36, 155.81, 14.4, 155.59, 14.35);
    path_6.cubicTo(154.98, 14.22, 155.1, 13.88, 155.26, 13.54);
    path_6.cubicTo(154.21, 14.16, 153.56, 13.17, 152.64, 13.14);
    path_6.cubicTo(152.49, 13.14, 152.68, 12.61, 153.03, 12.5);
    path_6.cubicTo(153.62, 12.31, 154.22, 12.18, 154.83, 12.12);
    path_6.cubicTo(155.44, 12.07, 156.06, 12.12, 156.68, 12.24);
    path_6.cubicTo(156.99, 12.3, 157.24, 12.46, 157.21, 12.74);
    path_6.cubicTo(157.19, 13.01, 156.92, 13.14, 156.62, 13.2);
    path_6.cubicTo(156.22, 13.28, 155.69, 13.11, 155.48, 13.55);
    path_6.cubicTo(155.81, 13.67, 156.34, 13.65, 156.17, 14.13);
    path_6.lineTo(156.18, 14.13);
    path_6.close();
    path_6.moveTo(141.03, 16.2);
    path_6.cubicTo(141.99, 15.83, 142.86, 15.3, 143.8, 14.87);
    path_6.cubicTo(144.39, 14.6, 145.12, 14.46, 145.57, 14.87);
    path_6.cubicTo(146.03, 15.28, 145.21, 15.5, 145.03, 15.83);
    path_6.cubicTo(144.93, 16.01, 144.79, 16.19, 144.77, 16.38);
    path_6.cubicTo(144.62, 17.85, 143.83, 18.47, 142.14, 18.28);
    path_6.cubicTo(141.63, 18.22, 141.39, 18.55, 140.96, 18.59);
    path_6.cubicTo(140.14, 18.7, 139.81, 18.5, 139.85, 17.85);
    path_6.cubicTo(139.94, 17.16, 140.15, 16.54, 141.03, 16.21);
    path_6.lineTo(141.03, 16.2);
    path_6.close();
    path_6.moveTo(93.56, 34.12);
    path_6.cubicTo(92.27, 34.02, 92.56, 32.93, 92.44, 32.19);
    path_6.cubicTo(92.37, 31.76, 92.67, 31.19, 92.93, 30.72);
    path_6.cubicTo(93.2, 30.22, 93.83, 29.87, 94.15, 30.37);
    path_6.cubicTo(94.98, 31.65, 96.45, 31.75, 97.98, 31.81);
    path_6.cubicTo(97.19, 32.86, 94.59, 34.15, 93.56, 34.12);
    path_6.close();
    path_6.moveTo(139.82, 20.86);
    path_6.cubicTo(139.44, 20.86, 139.12, 20.79, 138.7, 20.9);
    path_6.cubicTo(137.76, 21.15, 136.51, 20.37, 136.44, 19.56);
    path_6.cubicTo(136.4, 18.99, 136.93, 18.87, 137.39, 18.86);
    path_6.cubicTo(137.97, 18.84, 138.82, 18.36, 139.06, 19.11);
    path_6.cubicTo(139.41, 20.21, 139.95, 20.31, 141.02, 19.63);
    path_6.cubicTo(141.32, 19.45, 141.99, 19.17, 141.93, 20.17);
    path_6.cubicTo(141.36, 20.47, 140.6, 20.86, 139.82, 20.86);
    path_6.close();
    path_6.moveTo(128.06, 22.21);
    path_6.cubicTo(127.64, 22.26, 127.26, 22.18, 127.29, 21.74);
    path_6.cubicTo(127.32, 21.37, 127.63, 21.15, 128.08, 21.2);
    path_6.cubicTo(129.57, 21.36, 131, 21.26, 132.45, 20.78);
    path_6.cubicTo(132.98, 20.61, 133.46, 20.82, 134.01, 21.45);
    path_6.cubicTo(131.87, 21.72, 129.96, 21.96, 128.05, 22.21);
    path_6.lineTo(128.06, 22.21);
    path_6.close();
    path_6.moveTo(89.59, 32.16);
    path_6.cubicTo(89.19, 31.92, 89.63, 31.64, 89.81, 31.44);
    path_6.cubicTo(90.25, 30.91, 90.12, 29.88, 91.33, 29.98);
    path_6.cubicTo(91.68, 30.01, 92.11, 29.96, 92.19, 30.36);
    path_6.cubicTo(92.26, 30.72, 92.02, 31, 91.68, 31.23);
    path_6.cubicTo(91.29, 31.5, 90.91, 31.78, 90.51, 32.06);
    path_6.cubicTo(90.21, 32.17, 89.85, 32.31, 89.59, 32.16);
    path_6.close();
    path_6.moveTo(153.7, 10.19);
    path_6.cubicTo(153.24, 10.2, 152.78, 9.97001, 152.91, 9.52001);
    path_6.cubicTo(153.06, 9.00001, 153.64, 8.73001, 154.26, 8.70001);
    path_6.cubicTo(154.9, 8.67001, 154.73, 9.20001, 154.92, 9.52001);
    path_6.cubicTo(154.78, 10.04, 154.21, 10.17, 153.7, 10.19);
    path_6.close();
    path_6.moveTo(155.43, 20.61);
    path_6.cubicTo(155.2, 20.48, 155.52, 19.92, 155.64, 19.79);
    path_6.cubicTo(156.02, 19.36, 156.5, 19.79, 156.98, 19.97);
    path_6.cubicTo(156.12, 19.72, 156.32, 21.12, 155.44, 20.61);
    path_6.lineTo(155.43, 20.61);
    path_6.close();
    path_6.moveTo(154.03, 16.31);
    path_6.cubicTo(154.82, 15.96, 155.27, 16.4, 155.92, 16.97);
    path_6.cubicTo(154.9, 17.07, 154.67, 16.35, 154.03, 16.31);
    path_6.close();
    path_6.moveTo(138.97, 22.71);
    path_6.cubicTo(138.83, 22.62, 138.77, 22.43, 138.97, 22.31);
    path_6.cubicTo(139.42, 22.04, 139.88, 21.88, 140.5, 22.51);
    path_6.cubicTo(139.79, 22.27, 139.52, 23.07, 138.97, 22.71);
    path_6.close();
    path_6.moveTo(89.57, 35.92);
    path_6.cubicTo(89.42, 36.02, 89.19, 36.07, 89.14, 35.88);
    path_6.cubicTo(89.08, 35.65, 89.32, 35.53, 89.54, 35.44);
    path_6.cubicTo(89.68, 35.38, 89.8, 35.38, 89.88, 35.6);
    path_6.cubicTo(89.8, 35.69, 89.71, 35.84, 89.58, 35.93);
    path_6.lineTo(89.57, 35.92);
    path_6.close();
    path_6.moveTo(146.31, 20.71);
    path_6.cubicTo(146.22, 20.71, 146.06, 20.59, 146.04, 20.5);
    path_6.cubicTo(145.99, 20.25, 146.22, 20.15, 146.46, 20.13);
    path_6.cubicTo(146.56, 20.13, 146.66, 20.21, 146.77, 20.25);
    path_6.cubicTo(146.64, 20.47, 146.59, 20.7, 146.3, 20.71);
    path_6.lineTo(146.31, 20.71);
    path_6.close();

    Paint paint6Fill = Paint()..style = PaintingStyle.fill;
    paint6Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_6, paint6Fill);

    Path path_7 = Path();
    path_7.moveTo(150.67, 304.6);
    path_7.cubicTo(150.07, 304.75, 149.28, 304.79, 149.3, 305.48);
    path_7.cubicTo(149.32, 306.17, 150.09, 306.1, 150.67, 306.16);
    path_7.cubicTo(151.52, 306.25, 152.45, 306.16, 153.22, 306.4);
    path_7.cubicTo(154.41, 306.79, 155.29, 306.1, 155.43, 305.67);
    path_7.cubicTo(155.62, 305.08, 155.85, 305.17, 156.25, 305.26);
    path_7.cubicTo(156.86, 305.41, 156.56, 305.73, 156.41, 306.03);
    path_7.cubicTo(155.98, 306.9, 156.72, 307.3, 157.53, 307.47);
    path_7.cubicTo(158.09, 307.59, 158.57, 307.72, 159.01, 308);
    path_7.cubicTo(159.34, 308.22, 160.01, 308.32, 159.85, 308.74);
    path_7.cubicTo(159.66, 309.24, 158.94, 309.13, 158.5, 309.04);
    path_7.cubicTo(157.37, 308.79, 156.6, 309.42, 156.5, 309.94);
    path_7.cubicTo(156.4, 310.47, 157.51, 310.64, 158.2, 310.58);
    path_7.cubicTo(159.45, 310.46, 159.13, 310.99, 158.94, 311.49);
    path_7.cubicTo(158.86, 311.7, 158.68, 311.89, 158.5, 312.16);
    path_7.cubicTo(159.16, 312.2, 159.65, 311.75, 160.14, 312);
    path_7.cubicTo(161.09, 312.48, 161.64, 312.22, 162.03, 311.51);
    path_7.cubicTo(162.1, 311.38, 162.3, 311.2, 162.45, 311.2);
    path_7.cubicTo(164.85, 311.09, 164.21, 309.94, 163.85, 308.91);
    path_7.cubicTo(163.72, 308.54, 163.95, 308.2, 164.06, 307.85);
    path_7.cubicTo(164.33, 307, 164.89, 306.09, 164.72, 305.31);
    path_7.cubicTo(164.57, 304.57, 164.61, 304.3, 165.48, 304.1);
    path_7.cubicTo(166.54, 303.86, 167.11, 303.2, 167.12, 302.39);
    path_7.cubicTo(167.12, 301.47, 165.91, 302.06, 165.3, 301.63);
    path_7.cubicTo(166.03, 301.36, 166.66, 301.05, 166.37, 300.31);
    path_7.cubicTo(166.29, 300.1, 166.43, 299.92, 166.63, 299.78);
    path_7.cubicTo(167.87, 298.93, 168.84, 297.8, 170.81, 298.35);
    path_7.cubicTo(171.67, 298.6, 171.92, 297.84, 172.09, 297.3);
    path_7.cubicTo(172.3, 296.63, 171.85, 296.44, 171.14, 296.5);
    path_7.cubicTo(170.75, 296.53, 170.39, 296.41, 170.6, 296.04);
    path_7.cubicTo(171.33, 294.72, 170.46, 294.26, 169.27, 293.87);
    path_7.cubicTo(168.9, 293.76, 168.4, 293.6, 168.16, 293.14);
    path_7.cubicTo(168.66, 293.09, 169, 293, 168.68, 292.47);
    path_7.cubicTo(167.99, 291.33, 167.72, 289.98, 166.27, 289.28);
    path_7.cubicTo(165.88, 289.09, 165.71, 288.68, 165.61, 288.27);
    path_7.cubicTo(165.46, 287.71, 164.88, 287.2, 164.45, 287.26);
    path_7.cubicTo(163.05, 287.44, 161.52, 286.9, 160.24, 287.9);
    path_7.cubicTo(159.98, 288.11, 159.6, 288.52, 159.2, 288.21);
    path_7.cubicTo(158.1, 287.36, 156.49, 287.85, 155.38, 286.85);
    path_7.cubicTo(154.84, 286.38, 153.42, 286.76, 152.6, 286.05);
    path_7.cubicTo(152.52, 285.98, 152.2, 286.16, 151.98, 286.17);
    path_7.cubicTo(150.54, 286.26, 149.29, 287.04, 147.85, 287.19);
    path_7.cubicTo(146.35, 287.32, 146.05, 288.32, 147.1, 289.42);
    path_7.cubicTo(147.84, 290.2, 148.74, 290.83, 149.18, 291.78);
    path_7.cubicTo(149.34, 292.12, 149.65, 292.29, 150.06, 292.14);
    path_7.cubicTo(150.53, 291.97, 150.44, 291.6, 150.27, 291.32);
    path_7.cubicTo(149.98, 290.83, 149.6, 290.38, 149.28, 289.9);
    path_7.cubicTo(149.09, 289.61, 148.95, 289.21, 149.27, 289.02);
    path_7.cubicTo(149.83, 288.68, 150.5, 288.83, 151.08, 289.02);
    path_7.cubicTo(151.48, 289.14, 151.45, 289.52, 151.32, 289.85);
    path_7.cubicTo(150.71, 291.38, 150.97, 291.75, 152.86, 291.9);
    path_7.cubicTo(153.4, 291.94, 153.94, 291.9, 154.31, 292.42);
    path_7.cubicTo(154.07, 292.56, 153.88, 292.67, 153.7, 292.79);
    path_7.cubicTo(152.85, 293.38, 151.8, 292.94, 150.88, 293.15);
    path_7.cubicTo(150.42, 293.25, 149.75, 293.13, 149.71, 293.77);
    path_7.cubicTo(149.68, 294.28, 150.19, 294.36, 150.63, 294.52);
    path_7.cubicTo(151.32, 294.78, 152.04, 294.98, 152.84, 295.1);
    path_7.cubicTo(152.34, 295.63, 151.9, 295.99, 151.13, 295.78);
    path_7.cubicTo(150.71, 295.67, 150.28, 295.83, 149.93, 296.04);
    path_7.cubicTo(149.21, 296.46, 148.44, 296.46, 147.62, 296.32);
    path_7.cubicTo(146.82, 296.16, 146.09, 295.87, 145.36, 295.58);
    path_7.cubicTo(145.07, 295.46, 144.78, 295.39, 144.63, 295.65);
    path_7.cubicTo(144.43, 295.97, 144.68, 296.18, 145.04, 296.28);
    path_7.cubicTo(145.26, 296.35, 145.5, 296.38, 145.73, 296.44);
    path_7.cubicTo(146.26, 296.58, 146.71, 296.8, 146.83, 297.31);
    path_7.cubicTo(146.93, 297.77, 146.41, 297.85, 146.14, 298.1);
    path_7.cubicTo(145.53, 298.66, 144.47, 299.01, 144.18, 299.61);
    path_7.cubicTo(143.71, 300.59, 145.36, 300.8, 145.88, 301.49);
    path_7.cubicTo(145.98, 301.62, 146.07, 301.77, 146.19, 301.89);
    path_7.cubicTo(146.43, 302.12, 146.78, 302.34, 147.07, 302.1);
    path_7.cubicTo(147.64, 301.63, 148.32, 301.99, 148.94, 301.9);
    path_7.cubicTo(149.43, 301.82, 149.87, 301.9, 149.28, 302.47);
    path_7.cubicTo(148.79, 302.93, 149.18, 303.2, 149.84, 303.39);
    path_7.cubicTo(150.48, 303.57, 151.37, 303.66, 151.37, 304.55);
    path_7.cubicTo(151.13, 304.55, 150.87, 304.52, 150.66, 304.58);
    path_7.lineTo(150.67, 304.6);
    path_7.close();
    path_7.moveTo(164.68, 293.79);
    path_7.cubicTo(164.58, 293.81, 164.32, 293.61, 164.32, 293.5);
    path_7.cubicTo(164.3, 292.88, 164.99, 292.81, 165.4, 292.53);
    path_7.cubicTo(165.5, 292.19, 164.98, 291.73, 165.67, 291.51);
    path_7.cubicTo(165.96, 291.42, 166.3, 291.31, 166.59, 291.48);
    path_7.cubicTo(166.89, 291.66, 166.73, 291.89, 166.59, 292.11);
    path_7.cubicTo(166.32, 292.56, 165.95, 292.79, 165.37, 292.52);
    path_7.cubicTo(165.15, 292.96, 165.5, 293.62, 164.67, 293.8);
    path_7.lineTo(164.68, 293.79);
    path_7.close();
    path_7.moveTo(168.98, 296.79);
    path_7.cubicTo(169.23, 296.87, 169.54, 297.01, 169.47, 297.28);
    path_7.cubicTo(169.43, 297.44, 169.18, 297.62, 168.98, 297.66);
    path_7.cubicTo(168.26, 297.81, 167.55, 298.11, 166.58, 297.92);
    path_7.cubicTo(167.22, 297.09, 167.75, 296.4, 168.98, 296.79);
    path_7.close();
    path_7.moveTo(167.79, 295.31);
    path_7.cubicTo(167.87, 295.35, 167.86, 295.65, 167.77, 295.75);
    path_7.cubicTo(167.24, 296.27, 166.63, 295.82, 166.06, 295.83);
    path_7.cubicTo(166.02, 295.83, 165.97, 295.79, 165.96, 295.76);
    path_7.cubicTo(165.96, 295.73, 165.99, 295.69, 166.01, 295.65);
    path_7.cubicTo(166.58, 295.4, 167.1, 294.92, 167.8, 295.32);
    path_7.lineTo(167.79, 295.31);
    path_7.close();
    path_7.moveTo(151.26, 296.75);
    path_7.cubicTo(150.61, 296.78, 150.03, 297.21, 149.15, 296.9);
    path_7.cubicTo(150.36, 296.47, 150.36, 296.47, 151.26, 296.75);
    path_7.close();
    path_7.moveTo(150.52, 300.04);
    path_7.cubicTo(150.2, 299.96, 149.86, 299.93, 149.48, 299.87);
    path_7.cubicTo(150.92, 299.53, 150.91, 299.53, 151.76, 300.46);
    path_7.cubicTo(151.1, 300.23, 150.82, 300.11, 150.52, 300.04);
    path_7.close();
    path_7.moveTo(156.73, 293.02);
    path_7.cubicTo(156.57, 292.92, 156.38, 292.72, 156.6, 292.52);
    path_7.cubicTo(157.01, 292.14, 157.4, 292.37, 157.9, 292.59);
    path_7.cubicTo(157.39, 292.65, 157.34, 293.37, 156.73, 293.01);
    path_7.lineTo(156.73, 293.02);
    path_7.close();
    path_7.moveTo(157.85, 295.13);
    path_7.cubicTo(158.03, 295.14, 158.31, 295.25, 158.22, 295.37);
    path_7.cubicTo(158.05, 295.61, 157.78, 295.88, 157.48, 295.97);
    path_7.cubicTo(157.22, 296.05, 157.22, 295.73, 157.19, 295.55);
    path_7.cubicTo(157.19, 295.15, 157.5, 295.1, 157.84, 295.12);
    path_7.lineTo(157.85, 295.13);
    path_7.close();
    path_7.moveTo(150.6, 298.84);
    path_7.cubicTo(150.6, 298.84, 150.52, 298.67, 150.56, 298.62);
    path_7.cubicTo(150.87, 298.26, 151.35, 298.54, 151.76, 298.5);
    path_7.cubicTo(151.43, 298.74, 151.1, 299.04, 150.6, 298.83);
    path_7.lineTo(150.6, 298.84);
    path_7.close();
    path_7.moveTo(165.47, 290.35);
    path_7.cubicTo(165.67, 290.35, 165.78, 290.5, 165.73, 290.66);
    path_7.cubicTo(165.7, 290.75, 165.57, 290.87, 165.48, 290.87);
    path_7.cubicTo(165.26, 290.87, 165.21, 290.72, 165.22, 290.5);
    path_7.cubicTo(165.29, 290.46, 165.38, 290.34, 165.47, 290.34);
    path_7.lineTo(165.47, 290.35);
    path_7.close();
    path_7.moveTo(155.84, 303.69);
    path_7.cubicTo(155.77, 303.72, 155.59, 303.71, 155.56, 303.66);
    path_7.cubicTo(155.32, 303.33, 155.55, 303.09, 155.96, 302.76);
    path_7.cubicTo(156.14, 303.19, 156.3, 303.47, 155.84, 303.69);
    path_7.close();
    path_7.moveTo(163.64, 297.68);
    path_7.cubicTo(163.58, 297.68, 163.48, 297.55, 163.5, 297.51);
    path_7.cubicTo(163.72, 297.11, 164.17, 297.22, 164.24, 297.2);
    path_7.cubicTo(164.12, 297.18, 164.12, 297.75, 163.65, 297.68);
    path_7.lineTo(163.64, 297.68);
    path_7.close();
    path_7.moveTo(153.23, 302.34);
    path_7.cubicTo(153.52, 301.74, 154.02, 302.23, 154.38, 302.32);
    path_7.cubicTo(154.02, 302.32, 153.67, 302.33, 153.23, 302.34);
    path_7.close();
    path_7.moveTo(158.04, 297.44);
    path_7.cubicTo(158.3, 297, 158.77, 297.11, 159.18, 297.11);
    path_7.cubicTo(158.86, 297.43, 158.38, 297.13, 158.04, 297.44);
    path_7.close();
    path_7.moveTo(154.56, 297.84);
    path_7.cubicTo(154.8, 297.86, 154.96, 298.01, 155.01, 298.21);
    path_7.cubicTo(155.01, 298.25, 154.81, 298.37, 154.74, 298.35);
    path_7.cubicTo(154.58, 298.31, 154.44, 298.2, 154.24, 298.09);
    path_7.cubicTo(154.38, 297.97, 154.48, 297.83, 154.56, 297.84);
    path_7.close();

    Paint paint7Fill = Paint()..style = PaintingStyle.fill;
    paint7Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_7, paint7Fill);

    Path path_8 = Path();
    path_8.moveTo(189.06, 292.49);
    path_8.cubicTo(188.68, 292.65, 188.49, 292.26, 188.47, 291.92);
    path_8.cubicTo(188, 292.24, 187.48, 292.08, 186.98, 292.1);
    path_8.cubicTo(186.34, 292.12, 185.69, 292.1, 185.17, 292.65);
    path_8.cubicTo(184.56, 293.3, 183.76, 293.74, 182.93, 294.13);
    path_8.cubicTo(182.09, 294.48, 181.22, 294.79, 180.45, 295.26);
    path_8.cubicTo(179.78, 295.67, 179.09, 295.14, 178.88, 294.51);
    path_8.cubicTo(178.71, 294, 179.23, 293.64, 179.68, 293.73);
    path_8.cubicTo(181.26, 294.04, 182.01, 293.68, 182.4, 292.19);
    path_8.cubicTo(182.63, 291.3, 183.19, 290.45, 182.67, 289.56);
    path_8.cubicTo(182.5, 289.28, 182.41, 288.97, 182.74, 288.68);
    path_8.cubicTo(182.82, 288.7, 182.96, 288.71, 182.96, 288.75);
    path_8.cubicTo(183.04, 289.35, 183.55, 289.64, 184.07, 289.38);
    path_8.cubicTo(184.81, 289.02, 185.03, 288.21, 184.97, 287.57);
    path_8.cubicTo(184.92, 287, 184.2, 287.25, 183.74, 287.31);
    path_8.cubicTo(183.05, 287.4, 182.35, 287.48, 181.68, 287.64);
    path_8.cubicTo(181, 287.77, 180.36, 288, 179.76, 288.44);
    path_8.cubicTo(179.62, 288.54, 179.3, 288.54, 179.12, 288.48);
    path_8.cubicTo(178.37, 288.23, 177.78, 288.26, 177.21, 288.91);
    path_8.cubicTo(176.87, 289.3, 176.28, 289.17, 175.79, 289.13);
    path_8.cubicTo(175.3, 289.11, 174.82, 288.96, 174.33, 288.94);
    path_8.cubicTo(173.61, 288.9, 173.12, 289.32, 172.84, 289.84);
    path_8.cubicTo(172.61, 290.27, 172.5, 290.8, 172.82, 291.23);
    path_8.cubicTo(173.23, 291.77, 173.81, 291.42, 174.32, 291.31);
    path_8.cubicTo(174.78, 291.21, 175.23, 291.03, 175.49, 291.55);
    path_8.cubicTo(175.72, 292.01, 175.33, 292.21, 174.96, 292.39);
    path_8.cubicTo(174.62, 292.57, 174.27, 292.75, 174.55, 293.13);
    path_8.cubicTo(174.76, 293.42, 175.12, 293.53, 175.53, 293.41);
    path_8.cubicTo(175.71, 293.36, 175.87, 293.27, 176.04, 293.19);
    path_8.cubicTo(176.64, 292.92, 177.09, 293.18, 177.32, 293.56);
    path_8.cubicTo(177.7, 294.18, 176.9, 294.13, 176.57, 294.33);
    path_8.cubicTo(176.29, 294.5, 176, 294.66, 175.7, 294.76);
    path_8.cubicTo(174.74, 295.08, 173.78, 295.67, 174.2, 296.51);
    path_8.cubicTo(174.62, 297.34, 175.74, 296.94, 176.6, 296.6);
    path_8.cubicTo(177.53, 296.2, 178.4, 296.14, 178.84, 297.05);
    path_8.cubicTo(179.18, 297.76, 180.54, 297.81, 180.38, 298.85);
    path_8.cubicTo(180.35, 299.05, 180.74, 298.98, 180.99, 298.9);
    path_8.cubicTo(181.45, 298.76, 181.92, 298.63, 182.39, 298.52);
    path_8.cubicTo(183.34, 298.29, 183.43, 298.55, 183.23, 299.31);
    path_8.cubicTo(182.97, 300.27, 182.39, 300.92, 181.38, 301.43);
    path_8.cubicTo(180.64, 301.81, 180.48, 302.38, 180.63, 303.03);
    path_8.cubicTo(180.78, 303.71, 181.44, 303.84, 182.13, 303.94);
    path_8.cubicTo(183.31, 304.1, 184.55, 304.05, 185.76, 304.28);
    path_8.cubicTo(186.66, 304.45, 188.2, 304.28, 188.81, 303.77);
    path_8.cubicTo(189.91, 302.84, 190.25, 303.53, 190.81, 303.86);
    path_8.cubicTo(192.06, 304.58, 192.83, 304.54, 193.73, 303.33);
    path_8.cubicTo(194.18, 302.74, 194.69, 302.66, 195.27, 302.67);
    path_8.cubicTo(197, 302.7, 198.67, 302.09, 200.36, 301.79);
    path_8.lineTo(200.63, 301.4);
    path_8.cubicTo(200.24, 301.05, 199.86, 300.93, 199.14, 301.12);
    path_8.cubicTo(198.4, 301.33, 197.12, 300.91, 197.45, 300.6);
    path_8.cubicTo(198.34, 299.77, 196.99, 299.96, 197.1, 299.57);
    path_8.cubicTo(197.49, 299.37, 197.98, 299.24, 198.24, 298.96);
    path_8.cubicTo(199.27, 297.91, 200.29, 297.49, 201.63, 298.15);
    path_8.cubicTo(201.98, 298.32, 202.34, 297.96, 202.36, 297.67);
    path_8.cubicTo(202.4, 297.03, 202.54, 296.41, 202.69, 295.77);
    path_8.cubicTo(202.8, 295.3, 202.53, 294.9, 201.65, 294.84);
    path_8.cubicTo(200.46, 294.75, 199.29, 295.19, 198.13, 295.06);
    path_8.cubicTo(199.42, 294.94, 199.63, 293.58, 200.69, 293.34);
    path_8.cubicTo(201.94, 293.05, 203.13, 292.62, 204.36, 292.27);
    path_8.cubicTo(205.28, 291.97, 206.15, 291.83, 206.17, 293.02);
    path_8.cubicTo(206.17, 293.48, 206.85, 294.01, 207.12, 293.48);
    path_8.cubicTo(207.66, 292.41, 208.48, 292, 209.56, 291.65);
    path_8.cubicTo(209.79, 291.58, 209.95, 291.28, 209.93, 291);
    path_8.cubicTo(209.88, 290.22, 210.44, 290.15, 211.06, 290.32);
    path_8.cubicTo(211.72, 290.48, 212.4, 290.43, 212.5, 289.73);
    path_8.cubicTo(212.57, 289.21, 212.98, 288.27, 211.77, 288.28);
    path_8.lineTo(211.79, 288.26);
    path_8.cubicTo(211.21, 288.87, 210.35, 289.07, 209.67, 289.46);
    path_8.cubicTo(208.83, 289.97, 208.35, 289.74, 208.13, 289.16);
    path_8.cubicTo(207.75, 288.18, 206.94, 288.27, 206, 288.54);
    path_8.cubicTo(205.22, 288.77, 204.46, 289.02, 203.74, 289.42);
    path_8.cubicTo(203.14, 289.78, 202.19, 289.95, 201.9, 289.53);
    path_8.cubicTo(201.25, 288.57, 200.6, 288.98, 199.78, 289.38);
    path_8.cubicTo(199.38, 289.57, 198.9, 289.77, 198.78, 289.09);
    path_8.cubicTo(198.59, 288.03, 197.86, 287.28, 196.8, 286.83);
    path_8.cubicTo(196.37, 286.65, 196.07, 286.37, 196.12, 285.92);
    path_8.cubicTo(196.17, 285.48, 196.62, 285.33, 197.01, 285.21);
    path_8.cubicTo(198.23, 284.85, 199.45, 284.46, 200.75, 284.49);
    path_8.cubicTo(201.19, 284.51, 201.73, 284.34, 201.8, 283.83);
    path_8.cubicTo(201.87, 283.33, 201.44, 283.16, 200.98, 283.09);
    path_8.cubicTo(200.59, 283.03, 200.19, 282.97, 199.87, 282.74);
    path_8.cubicTo(199.09, 282.18, 198.56, 282.59, 198.12, 283.22);
    path_8.cubicTo(197.89, 283.55, 197.72, 283.92, 197.51, 284.31);
    path_8.cubicTo(197.12, 284.07, 196.81, 283.87, 196.49, 283.67);
    path_8.cubicTo(195.14, 282.85, 194.84, 282.97, 194.58, 284.52);
    path_8.cubicTo(194.51, 284.94, 194.32, 284.88, 194.05, 284.83);
    path_8.cubicTo(192.6, 284.52, 191.23, 285.06, 190.01, 285.62);
    path_8.cubicTo(189.61, 285.8, 188.86, 285.88, 188.36, 286.13);
    path_8.cubicTo(187.86, 286.38, 187.58, 286.79, 188.15, 287.75);
    path_8.cubicTo(188.18, 287.8, 188.09, 287.9, 188.05, 287.97);
    path_8.cubicTo(187.6, 288.95, 188.04, 289.53, 189.02, 290);
    path_8.cubicTo(189.56, 290.25, 190.28, 290.54, 189.91, 291.37);
    path_8.cubicTo(190.2, 292.01, 189.52, 292.3, 189.09, 292.47);
    path_8.lineTo(189.06, 292.49);
    path_8.close();
    path_8.moveTo(178.77, 290.37);
    path_8.cubicTo(178.91, 290.68, 178.49, 291.11, 178.08, 291.12);
    path_8.cubicTo(177.46, 291.14, 177.17, 290.67, 177.1, 290.2);
    path_8.cubicTo(177.05, 289.92, 177.41, 289.75, 177.82, 289.62);
    path_8.cubicTo(178.12, 289.84, 178.62, 290.04, 178.77, 290.37);
    path_8.close();
    path_8.moveTo(190.07, 301.91);
    path_8.cubicTo(191.5, 301.24, 191.78, 301.3, 193.99, 302.23);
    path_8.cubicTo(192.37, 302.75, 191.48, 301.48, 190.07, 301.91);
    path_8.close();
    path_8.moveTo(207.04, 290.39);
    path_8.cubicTo(207.32, 290.38, 207.64, 290.32, 207.71, 290.63);
    path_8.cubicTo(207.76, 290.86, 207.61, 291.06, 207.35, 291.13);
    path_8.cubicTo(206.96, 291.24, 206.76, 291.01, 206.58, 290.78);
    path_8.cubicTo(206.58, 290.5, 206.75, 290.4, 207.03, 290.39);
    path_8.lineTo(207.04, 290.39);
    path_8.close();
    path_8.moveTo(184.43, 298.18);
    path_8.cubicTo(184.41, 298.09, 184.63, 297.86, 184.77, 297.83);
    path_8.cubicTo(185.12, 297.75, 185.43, 297.86, 185.54, 298.15);
    path_8.cubicTo(185.6, 298.32, 185.44, 298.44, 185.2, 298.49);
    path_8.cubicTo(184.9, 298.46, 184.51, 298.52, 184.44, 298.18);
    path_8.lineTo(184.43, 298.18);
    path_8.close();
    path_8.moveTo(189.53, 294.13);
    path_8.cubicTo(190.25, 294.28, 190.18, 294.79, 190.3, 295.18);
    path_8.cubicTo(189.7, 295.03, 189.49, 294.68, 189.53, 294.13);
    path_8.close();
    path_8.moveTo(186.68, 293.76);
    path_8.cubicTo(186.68, 293.76, 186.63, 293.59, 186.68, 293.55);
    path_8.cubicTo(187.02, 293.24, 187.34, 293.45, 188.01, 293.45);
    path_8.cubicTo(187.35, 293.87, 187.02, 294.04, 186.68, 293.77);
    path_8.lineTo(186.68, 293.76);
    path_8.close();
    path_8.moveTo(191.22, 290.54);
    path_8.cubicTo(190.69, 290.33, 190.48, 290.12, 190.92, 289.62);
    path_8.cubicTo(191.3, 289.87, 191.14, 290.18, 191.22, 290.54);
    path_8.close();

    Paint paint8Fill = Paint()..style = PaintingStyle.fill;
    paint8Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_8, paint8Fill);

    Path path_9 = Path();
    path_9.moveTo(75.99, 33.4);
    path_9.cubicTo(75.85, 33.71, 75.8601, 34.01, 76.1601, 34.18);
    path_9.cubicTo(76.3601, 34.3, 76.6701, 34.29, 76.8201, 34.12);
    path_9.cubicTo(77.8601, 32.95, 78.9201, 31.93, 80.6101, 31.52);
    path_9.cubicTo(81.1201, 31.39, 81.84, 30.7, 82.6, 30.63);
    path_9.cubicTo(83.07, 30.59, 83.4301, 30.5, 83.2801, 30.04);
    path_9.cubicTo(83.1301, 29.6, 83.3501, 29.44, 83.7601, 29.11);
    path_9.cubicTo(84.9101, 28.14, 86.1, 27.27, 87.45, 26.56);
    path_9.cubicTo(87.98, 26.29, 88.3501, 26.02, 87.6901, 25.67);
    path_9.cubicTo(86.9101, 25.26, 86.8701, 24.45, 87.0801, 23.71);
    path_9.cubicTo(87.2401, 23.14, 86.98, 22.95, 86.63, 22.74);
    path_9.cubicTo(85.29, 21.9, 85.27, 21.91, 86.92, 20.72);
    path_9.cubicTo(87, 20.66, 87.09, 20.6, 87.17, 20.54);
    path_9.cubicTo(87.51, 20.25, 87.7001, 19.9, 87.5801, 19.57);
    path_9.cubicTo(87.4301, 19.16, 86.9601, 19.34, 86.5701, 19.46);
    path_9.cubicTo(85.9301, 19.66, 85.3401, 20.13, 84.6601, 20.04);
    path_9.cubicTo(83.8801, 19.93, 83.3001, 20.25, 82.7901, 20.85);
    path_9.cubicTo(82.5501, 21.13, 82.2701, 21.58, 81.8201, 21.31);
    path_9.cubicTo(81.5001, 21.12, 81.5601, 20.75, 81.8201, 20.39);
    path_9.cubicTo(82.0101, 20.11, 82.2401, 19.84, 82.3701, 19.55);
    path_9.cubicTo(82.4901, 19.27, 82.3201, 19.07, 82.0501, 18.96);
    path_9.cubicTo(81.8101, 18.86, 81.5201, 18.91, 81.3901, 19.16);
    path_9.cubicTo(80.8001, 20.18, 79.2701, 20.68, 78.6901, 20.81);
    path_9.cubicTo(76.5401, 21.29, 76.8701, 22.92, 75.8601, 23.84);
    path_9.cubicTo(75.4501, 24.21, 76.0601, 24.78, 76.5101, 24.5);
    path_9.cubicTo(77.9701, 23.58, 78.58, 24.59, 79.49, 24.79);
    path_9.cubicTo(79.94, 24.89, 80.52, 25.28, 80.34, 25.82);
    path_9.cubicTo(80.12, 26.47, 79.3501, 26.87, 78.6601, 26.97);
    path_9.cubicTo(77.7901, 27.09, 76.7201, 27.39, 76.4301, 26.38);
    path_9.cubicTo(76.3901, 26.25, 76.1501, 26.06, 76.1201, 26.07);
    path_9.cubicTo(75.0001, 26.74, 73.9201, 27.51, 72.9401, 28.34);
    path_9.cubicTo(72.6501, 28.59, 74.1501, 29.58, 74.6901, 29.36);
    path_9.cubicTo(75.3301, 29.1, 75.5201, 29.19, 75.3201, 29.8);
    path_9.cubicTo(74.6801, 31.71, 74.7301, 31.73, 76.8001, 31.37);
    path_9.cubicTo(76.7201, 32.15, 76.2901, 32.76, 76.0101, 33.39);
    path_9.lineTo(75.99, 33.4);
    path_9.close();
    path_9.moveTo(80.5401, 22.33);
    path_9.cubicTo(80.3801, 22.46, 80.2401, 22.41, 80.2501, 22.26);
    path_9.cubicTo(80.2501, 22.1, 80.2901, 21.89, 80.4001, 21.76);
    path_9.cubicTo(80.5201, 21.63, 80.6501, 21.72, 80.8001, 22.09);
    path_9.cubicTo(80.8401, 22.05, 80.7001, 22.2, 80.5301, 22.33);
    path_9.lineTo(80.5401, 22.33);
    path_9.close();

    Paint paint9Fill = Paint()..style = PaintingStyle.fill;
    paint9Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_9, paint9Fill);

    Path path_10 = Path();
    path_10.moveTo(284.8, 206.56);
    path_10.cubicTo(284.92, 206.97, 284.95, 207.62, 285.53, 207.22);
    path_10.cubicTo(285.92, 206.95, 286.49, 206.54, 286.37, 205.87);
    path_10.cubicTo(286.26, 205.26, 285.9, 204.85, 285.44, 204.56);
    path_10.cubicTo(284.43, 203.93, 284.34, 202.76, 285.29, 201.87);
    path_10.cubicTo(285.81, 201.39, 285.8, 200.92, 285.64, 200.4);
    path_10.cubicTo(285.53, 200.03, 285.31, 199.7, 285.42, 199.25);
    path_10.cubicTo(285.49, 198.95, 285.65, 198.57, 285.25, 198.47);
    path_10.cubicTo(284.97, 198.4, 284.81, 198.7, 284.66, 198.92);
    path_10.cubicTo(283.9, 200.04, 283.72, 199.27, 283.56, 198.61);
    path_10.cubicTo(283.48, 198.24, 283.46, 197.81, 283.47, 197.4);
    path_10.cubicTo(283.48, 196.74, 283.33, 196.41, 282.79, 195.97);
    path_10.cubicTo(282.05, 195.37, 280.58, 195.18, 280.97, 193.46);
    path_10.cubicTo(281.02, 193.26, 280.75, 192.98, 280.58, 193.11);
    path_10.cubicTo(279.9, 193.62, 279.36, 194.3, 278.51, 194.57);
    path_10.cubicTo(278.31, 194.63, 278.26, 195.38, 278.3, 196.19);
    path_10.cubicTo(278.33, 196.99, 278.4, 197.82, 278.58, 198.05);
    path_10.cubicTo(278.8, 198.34, 279.2, 198.85, 278.92, 199.02);
    path_10.cubicTo(277.29, 200, 278.79, 200.34, 279.17, 200.93);
    path_10.cubicTo(278.97, 201.07, 278.83, 201.17, 278.7, 201.27);
    path_10.cubicTo(278.11, 201.67, 277.86, 202.28, 277.91, 202.98);
    path_10.cubicTo(277.92, 203.69, 278.28, 204.04, 278.98, 204.05);
    path_10.cubicTo(279.6, 204.05, 279.7, 204.86, 279.55, 205.1);
    path_10.cubicTo(278.97, 206.03, 279.19, 207.08, 278.78, 208.01);
    path_10.cubicTo(278.59, 208.43, 277.92, 208.81, 278.38, 209.27);
    path_10.cubicTo(278.84, 209.73, 279.32, 210.56, 280.08, 210.21);
    path_10.cubicTo(281.39, 209.6, 282.25, 210.29, 283.11, 211);
    path_10.cubicTo(283.38, 211.22, 283.49, 211.52, 283.88, 211.13);
    path_10.cubicTo(284.19, 210.81, 284.92, 208.19, 284.66, 207.91);
    path_10.cubicTo(284.2, 207.41, 284.41, 206.78, 284.36, 206.13);
    path_10.cubicTo(284.68, 206.18, 284.75, 206.38, 284.8, 206.59);
    path_10.lineTo(284.8, 206.56);
    path_10.close();
    path_10.moveTo(280.82, 204.54);
    path_10.cubicTo(280.52, 204.19, 280.8, 203.7, 281.12, 203.36);
    path_10.cubicTo(281.33, 203.13, 281.6, 202.88, 281.86, 203.11);
    path_10.cubicTo(282.19, 203.41, 281.96, 203.86, 281.88, 204.25);
    path_10.cubicTo(281.7, 204.99, 281.49, 205.73, 281.29, 206.47);
    path_10.cubicTo(281.14, 205.79, 281.29, 205.11, 280.81, 204.54);
    path_10.lineTo(280.82, 204.54);
    path_10.close();
    path_10.moveTo(282.26, 197.68);
    path_10.cubicTo(282.57, 197.83, 282.31, 198.23, 282.22, 198.49);
    path_10.cubicTo(282.1, 198.83, 281.9, 199.17, 281.51, 198.93);
    path_10.cubicTo(281.28, 198.79, 281.23, 198.55, 281.45, 198.25);
    path_10.cubicTo(281.7, 198.05, 281.83, 197.46, 282.26, 197.68);
    path_10.close();
    path_10.moveTo(281.78, 207.28);
    path_10.cubicTo(281.73, 207.25, 281.73, 207.08, 281.75, 206.98);
    path_10.cubicTo(281.76, 206.93, 281.91, 206.84, 281.93, 206.86);
    path_10.cubicTo(282, 206.92, 282.04, 207.02, 282.19, 207.27);
    path_10.cubicTo(281.98, 207.29, 281.85, 207.33, 281.78, 207.29);
    path_10.lineTo(281.78, 207.28);
    path_10.close();

    Paint paint10Fill = Paint()..style = PaintingStyle.fill;
    paint10Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_10, paint10Fill);

    Path path_11 = Path();
    path_11.moveTo(142.18, 297.76);
    path_11.cubicTo(141.74, 298.16, 141.54, 298.48, 142.02, 299.04);
    path_11.cubicTo(142.71, 299.83, 141.89, 300.71, 140.27, 300.92);
    path_11.cubicTo(139.17, 301.01, 138.34, 301.87, 137.07, 301.53);
    path_11.cubicTo(137.01, 301.51, 136.74, 301.82, 136.76, 301.84);
    path_11.cubicTo(137.15, 302.22, 137.23, 302.5, 136.51, 302.53);
    path_11.cubicTo(135.89, 302.56, 135.61, 302.24, 135.54, 301.78);
    path_11.cubicTo(135.5, 301.51, 135.49, 301.23, 135.44, 300.59);
    path_11.cubicTo(134.52, 301.7, 132.99, 301.12, 132.05, 301.79);
    path_11.cubicTo(131.97, 301.85, 131.76, 301.85, 131.65, 301.79);
    path_11.cubicTo(131.43, 301.69, 131.42, 301.52, 131.54, 301.38);
    path_11.cubicTo(132.1, 300.76, 131.92, 300.22, 131.2, 299.68);
    path_11.cubicTo(131.04, 299.56, 130.93, 299.16, 130.93, 299.16);
    path_11.cubicTo(132.45, 298.69, 131.19, 297.35, 131.85, 296.67);
    path_11.cubicTo(132.13, 296.38, 132.7, 296.69, 132.9, 297.05);
    path_11.cubicTo(133.25, 297.67, 133.86, 298.17, 133.42, 299.01);
    path_11.cubicTo(132.99, 299.83, 133.68, 300.42, 134.61, 300.26);
    path_11.cubicTo(135.18, 300.16, 135.75, 300.02, 134.98, 299.45);
    path_11.cubicTo(134.8, 299.32, 134.55, 299.2, 134.68, 298.97);
    path_11.cubicTo(134.77, 298.81, 135.02, 298.74, 135.17, 298.86);
    path_11.cubicTo(136.49, 299.96, 137.57, 298.85, 138.21, 298.43);
    path_11.cubicTo(139.45, 297.62, 140.57, 297.41, 142.17, 297.75);
    path_11.lineTo(142.18, 297.76);
    path_11.close();

    Paint paint11Fill = Paint()..style = PaintingStyle.fill;
    paint11Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_11, paint11Fill);

    Path path_12 = Path();
    path_12.moveTo(237.26, 53.32);
    path_12.cubicTo(236.91, 52.92, 236.24, 52.72, 235.83, 52.36);
    path_12.cubicTo(234.63, 51.28, 233.37, 50.38, 231.91, 49.64);
    path_12.cubicTo(231.25, 49.31, 230.73, 47.95, 231, 47.35);
    path_12.cubicTo(231.35, 46.61, 232.22, 45.89, 233.18, 45.82);
    path_12.cubicTo(233.98, 45.76, 234.24, 46.69, 234.29, 47.33);
    path_12.cubicTo(234.41, 48.81, 234.82, 49.29, 236.35, 49.75);
    path_12.cubicTo(237.08, 49.99, 237.78, 50.26, 238.2, 51.05);
    path_12.cubicTo(238.53, 51.67, 239.13, 52.03, 239.82, 52.27);
    path_12.cubicTo(240.34, 52.45, 240.66, 52.9, 240.68, 53.39);
    path_12.cubicTo(240.71, 54.07, 240.15, 53.82, 239.73, 53.78);
    path_12.cubicTo(239.61, 53.77, 239.42, 53.78, 239.37, 53.85);
    path_12.cubicTo(238.54, 54.96, 237.96, 54.03, 237.26, 53.32);
    path_12.close();

    Paint paint12Fill = Paint()..style = PaintingStyle.fill;
    paint12Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_12, paint12Fill);

    Path path_13 = Path();
    path_13.moveTo(20.53, 169.27);
    path_13.cubicTo(21.39, 168.62, 22.36, 168.58, 23.09, 169.34);
    path_13.cubicTo(23.91, 170.18, 24.59, 171.22, 24.25, 172.66);
    path_13.cubicTo(24.11, 173.2, 23.92, 173.76, 23.33, 173.64);
    path_13.cubicTo(22.72, 173.52, 22.5, 172.99, 22.59, 172.3);
    path_13.cubicTo(22.63, 171.93, 22.9, 171.35, 22.44, 171.24);
    path_13.cubicTo(21.9, 171.11, 21.34, 171.53, 20.98, 172);
    path_13.cubicTo(20.63, 172.47, 20.88, 173.04, 21.27, 173.3);
    path_13.cubicTo(22.17, 173.9, 22.65, 174.86, 23.23, 175.73);
    path_13.cubicTo(23.83, 176.64, 23.35, 177.49, 22.87, 178.03);
    path_13.cubicTo(22.37, 178.59, 21.41, 178.41, 21, 177.86);
    path_13.cubicTo(20.54, 177.24, 20.39, 176.21, 20.59, 175.37);
    path_13.cubicTo(20.75, 174.73, 20.66, 174.41, 20.25, 173.93);
    path_13.cubicTo(19.65, 173.19, 20.18, 172.06, 19.64, 171.2);
    path_13.cubicTo(19.53, 171.03, 19.97, 170.65, 20.22, 170.63);
    path_13.cubicTo(21.47, 170.51, 20.91, 169.86, 20.54, 169.25);
    path_13.lineTo(20.54, 169.28);
    path_13.lineTo(20.53, 169.27);
    path_13.close();

    Paint paint13Fill = Paint()..style = PaintingStyle.fill;
    paint13Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_13, paint13Fill);

    Path path_14 = Path();
    path_14.moveTo(260.47, 243.27);
    path_14.cubicTo(260.65, 242.48, 261.17, 241.98, 261.69, 241.45);
    path_14.cubicTo(262.1, 241.04, 262.28, 240.6, 261.77, 240.25);
    path_14.cubicTo(261.3, 239.93, 260.9, 240.06, 260.63, 240.64);
    path_14.cubicTo(260.29, 241.37, 259.63, 241.82, 259.17, 242.44);
    path_14.cubicTo(258.93, 242.76, 258.55, 243.33, 258.13, 242.97);
    path_14.cubicTo(257.75, 242.65, 257.16, 242.52, 257.29, 241.65);
    path_14.cubicTo(257.57, 239.69, 257.85, 239.32, 259.66, 238.82);
    path_14.cubicTo(260.25, 238.66, 260.78, 238.2, 261.41, 237.97);
    path_14.cubicTo(262.17, 237.7, 262.39, 237.89, 262.2, 238.62);
    path_14.cubicTo(262.06, 239.16, 261.91, 239.66, 262.55, 239.88);
    path_14.cubicTo(263, 240.03, 262.86, 240.36, 262.64, 240.72);
    path_14.cubicTo(262.5, 240.95, 262.28, 241.27, 262.33, 241.46);
    path_14.cubicTo(262.74, 243.24, 261.53, 243.13, 260.47, 243.25);
    path_14.lineTo(260.47, 243.27);
    path_14.close();

    Paint paint14Fill = Paint()..style = PaintingStyle.fill;
    paint14Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_14, paint14Fill);

    Path path_15 = Path();
    path_15.moveTo(42.51, 88.37);
    path_15.cubicTo(40.84, 89.02, 40.22, 90.73, 39.05, 92.28);
    path_15.cubicTo(39.01, 91.19, 39, 90.38, 37.78, 90.6);
    path_15.cubicTo(37.36, 90.68, 36.34, 90.16, 37.44, 89.09);
    path_15.cubicTo(37.88, 88.66, 37.83, 87.78, 38.45, 87.37);
    path_15.cubicTo(39.4, 87.13, 40.35, 87.12, 41.3, 87.02);
    path_15.cubicTo(42.72, 86.88, 42.79, 86.91, 42.52, 88.38);
    path_15.lineTo(42.52, 88.35);
    path_15.lineTo(42.51, 88.37);
    path_15.close();

    Paint paint15Fill = Paint()..style = PaintingStyle.fill;
    paint15Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_15, paint15Fill);

    Path path_16 = Path();
    path_16.moveTo(33.83, 97.79);
    path_16.cubicTo(34.72, 97.05, 35.18, 96.02, 36.11, 95.6);
    path_16.cubicTo(36.5, 95.42, 36.97, 95.23, 37.2, 95.71);
    path_16.cubicTo(37.4, 96.12, 36.96, 96.3, 36.73, 96.56);
    path_16.cubicTo(36.52, 96.79, 36.36, 97.06, 36.18, 97.32);
    path_16.cubicTo(36.01, 97.58, 35.75, 97.89, 36.15, 98.08);
    path_16.cubicTo(36.5, 98.25, 36.71, 97.95, 36.79, 97.63);
    path_16.cubicTo(37.05, 96.58, 37.88, 96.59, 38.56, 96.37);
    path_16.cubicTo(38.84, 96.28, 39.15, 96.32, 39.26, 96.67);
    path_16.cubicTo(39.37, 97.01, 39.2, 97.29, 38.91, 97.44);
    path_16.cubicTo(37.6, 98.17, 37.49, 99.61, 37.02, 100.81);
    path_16.cubicTo(36.87, 101.16, 36.98, 101.7, 36.41, 101.59);
    path_16.cubicTo(36.02, 101.52, 35.45, 101.8, 35.32, 101.11);
    path_16.cubicTo(35.18, 100.42, 34.9, 99.78, 35.07, 99.06);
    path_16.cubicTo(35.33, 97.95, 35.18, 97.33, 33.82, 97.8);
    path_16.lineTo(33.83, 97.79);
    path_16.close();

    Paint paint16Fill = Paint()..style = PaintingStyle.fill;
    paint16Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_16, paint16Fill);

    Path path_17 = Path();
    path_17.moveTo(137.98, 290.82);
    path_17.cubicTo(138.13, 289.53, 139.48, 289.32, 140.57, 288.89);
    path_17.cubicTo(140.8, 288.8, 141.11, 288.85, 141.35, 288.77);
    path_17.cubicTo(142.63, 288.3, 142.86, 288.42, 142.83, 289.69);
    path_17.cubicTo(142.8, 291.19, 141.75, 292.38, 140.13, 292.48);
    path_17.cubicTo(139.3, 292.54, 137.78, 291.47, 137.97, 290.83);
    path_17.lineTo(137.98, 290.82);
    path_17.close();

    Paint paint17Fill = Paint()..style = PaintingStyle.fill;
    paint17Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_17, paint17Fill);

    Path path_18 = Path();
    path_18.moveTo(291.8, 190.19);
    path_18.cubicTo(291.55, 190.66, 291.33, 191.41, 290.58, 191.01);
    path_18.cubicTo(289.6, 190.5, 289.18, 190.98, 289.03, 192.15);
    path_18.cubicTo(288.95, 192.84, 288.91, 193.78, 287.89, 193.36);
    path_18.cubicTo(287.78, 193.31, 287.57, 193.44, 287.43, 193.53);
    path_18.cubicTo(287.05, 193.78, 286.61, 194.39, 286.28, 193.85);
    path_18.cubicTo(285.95, 193.32, 286.49, 192.75, 286.85, 192.45);
    path_18.cubicTo(287.77, 191.66, 287.95, 191.04, 286.94, 190.27);
    path_18.cubicTo(286.44, 189.89, 286.46, 189.23, 287.02, 188.77);
    path_18.cubicTo(287.53, 188.34, 287.77, 188.68, 288.01, 189.21);
    path_18.cubicTo(288.27, 189.77, 288.55, 190.53, 289.3, 189.46);
    path_18.cubicTo(289.77, 188.8, 290.63, 188.92, 291.29, 188.86);
    path_18.cubicTo(291.75, 188.82, 292.12, 189.36, 291.81, 190.2);
    path_18.lineTo(291.8, 190.19);
    path_18.close();

    Paint paint18Fill = Paint()..style = PaintingStyle.fill;
    paint18Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_18, paint18Fill);

    Path path_19 = Path();
    path_19.moveTo(144.91, 292.06);
    path_19.cubicTo(144.75, 292.39, 144.59, 292.9, 144.27, 293.33);
    path_19.cubicTo(143.87, 293.86, 143.67, 294.38, 143.88, 295.01);
    path_19.cubicTo(144.15, 295.81, 143.78, 295.86, 142.84, 296.02);
    path_19.cubicTo(142.17, 296.13, 141.57, 295.9, 140.98, 295.71);
    path_19.cubicTo(140.39, 295.5, 139.81, 295.33, 139.16, 295.6);
    path_19.cubicTo(139.01, 295.66, 138.73, 295.42, 138.75, 295.19);
    path_19.cubicTo(138.77, 294.92, 139.01, 294.7, 139.28, 294.72);
    path_19.cubicTo(140.35, 294.79, 141, 294.43, 141.37, 293.59);
    path_19.cubicTo(141.46, 293.4, 141.76, 293.22, 142.06, 293.27);
    path_19.cubicTo(143.17, 293.47, 143.32, 293.4, 143.45, 292.42);
    path_19.cubicTo(143.49, 292.15, 143.51, 291.84, 143.4, 291.6);
    path_19.cubicTo(143.17, 291.08, 143.3, 290.66, 143.68, 290.27);
    path_19.cubicTo(143.89, 290.06, 144.15, 290.06, 144.41, 290.23);
    path_19.cubicTo(144.9, 290.57, 144.92, 291.06, 144.93, 291.54);
    path_19.cubicTo(144.93, 291.66, 144.92, 291.78, 144.9, 292.07);
    path_19.lineTo(144.91, 292.06);
    path_19.close();

    Paint paint19Fill = Paint()..style = PaintingStyle.fill;
    paint19Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_19, paint19Fill);

    Path path_20 = Path();
    path_20.moveTo(200.35, 301.8);
    path_20.lineTo(200.62, 301.41);
    path_20.cubicTo(200.83, 301.15, 201.32, 301.03, 201.21, 300.58);
    path_20.cubicTo(201.1, 300.12, 201.09, 299.63, 201.86, 299.31);
    path_20.cubicTo(202.7, 298.96, 202.81, 299.56, 203.24, 299.88);
    path_20.cubicTo(203.93, 298.63, 205.24, 298.01, 206.47, 296.99);
    path_20.cubicTo(206.52, 297.78, 206.53, 298.38, 206.58, 298.96);
    path_20.cubicTo(206.63, 299.52, 206.13, 299.68, 205.62, 299.8);
    path_20.cubicTo(204.77, 299.99, 204.04, 300.33, 203.39, 300.96);
    path_20.cubicTo(203.72, 301.16, 204.05, 301.36, 204.38, 301.56);
    path_20.cubicTo(204.61, 301.69, 204.9, 301.83, 204.77, 302.11);
    path_20.cubicTo(204.61, 302.46, 204.12, 302.55, 203.86, 302.46);
    path_20.cubicTo(202.73, 302.11, 201.36, 302.31, 200.34, 301.79);
    path_20.lineTo(200.35, 301.8);
    path_20.close();

    Paint paint20Fill = Paint()..style = PaintingStyle.fill;
    paint20Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_20, paint20Fill);

    Path path_21 = Path();
    path_21.moveTo(287.08, 197.93);
    path_21.cubicTo(287.32, 197.21, 287.7, 196.77, 288.18, 196.45);
    path_21.cubicTo(288.65, 196.14, 288.97, 196.27, 289.05, 196.87);
    path_21.cubicTo(289.17, 197.73, 289.3, 198.57, 289.55, 199.41);
    path_21.cubicTo(289.85, 200.43, 287.77, 202.66, 286.84, 202.53);
    path_21.cubicTo(286.52, 202.49, 286.33, 202.33, 286.4, 201.91);
    path_21.cubicTo(286.48, 201.45, 286.49, 200.98, 286.63, 200.55);
    path_21.cubicTo(286.92, 199.66, 287.01, 198.74, 287.07, 197.93);
    path_21.lineTo(287.08, 197.93);
    path_21.close();

    Paint paint21Fill = Paint()..style = PaintingStyle.fill;
    paint21Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_21, paint21Fill);

    Path path_22 = Path();
    path_22.moveTo(172.78, 301.35);
    path_22.cubicTo(174.01, 300.26, 175, 299.37, 175.99, 298.48);
    path_22.cubicTo(176.22, 298.28, 176.58, 298.16, 176.59, 297.83);
    path_22.cubicTo(176.59, 297.57, 176.36, 297.25, 176.79, 297.07);
    path_22.cubicTo(177.27, 296.87, 177.49, 297.26, 177.69, 297.47);
    path_22.cubicTo(178.19, 298.01, 179.5, 298.43, 177.98, 299.4);
    path_22.cubicTo(177.54, 299.68, 178.11, 299.88, 178.42, 300.05);
    path_22.cubicTo(178.75, 300.23, 179.24, 300.53, 178.9, 300.89);
    path_22.cubicTo(178.47, 301.35, 178.1, 300.89, 177.85, 300.67);
    path_22.cubicTo(177.37, 300.23, 177.02, 300.36, 176.58, 300.77);
    path_22.cubicTo(175.55, 301.74, 174.3, 301.4, 172.77, 301.36);
    path_22.lineTo(172.78, 301.35);
    path_22.close();

    Paint paint22Fill = Paint()..style = PaintingStyle.fill;
    paint22Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_22, paint22Fill);

    Path path_23 = Path();
    path_23.moveTo(142.62, 306.91);
    path_23.cubicTo(141.85, 306.89, 141.29, 306.87, 140.98, 306.51);
    path_23.cubicTo(140.31, 305.73, 139.74, 304.9, 138.28, 305.49);
    path_23.cubicTo(138.07, 305.58, 137.75, 305.39, 137.75, 305.16);
    path_23.cubicTo(137.75, 304.63, 138.34, 304.44, 138.77, 304.56);
    path_23.cubicTo(140.19, 305, 141.45, 304.38, 142.77, 304.31);
    path_23.cubicTo(143.3, 304.28, 143.74, 304.33, 144.16, 304.63);
    path_23.cubicTo(144.72, 305.04, 145.5, 305.43, 145.19, 306.11);
    path_23.cubicTo(144.88, 306.78, 144.14, 307.12, 143.13, 306.97);
    path_23.cubicTo(142.88, 306.94, 142.63, 306.91, 142.63, 306.91);
    path_23.lineTo(142.62, 306.91);
    path_23.close();

    Paint paint23Fill = Paint()..style = PaintingStyle.fill;
    paint23Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_23, paint23Fill);

    Path path_24 = Path();
    path_24.moveTo(251.55, 247.93);
    path_24.cubicTo(251.97, 247.25, 252.7, 247, 253.33, 246.89);
    path_24.cubicTo(253.94, 246.79, 254.42, 246.63, 254.89, 246.15);
    path_24.cubicTo(255.25, 245.78, 255.72, 245.52, 255.97, 246.21);
    path_24.cubicTo(256.16, 246.74, 256.37, 247.51, 255.66, 247.65);
    path_24.cubicTo(253.95, 248, 253.4, 249.71, 252.13, 250.54);
    path_24.cubicTo(251.9, 250.69, 251.79, 251.19, 251.45, 251.07);
    path_24.cubicTo(251.07, 250.93, 251.26, 250.51, 251.29, 250.17);
    path_24.cubicTo(251.34, 249.41, 251.85, 248.65, 251.54, 247.91);
    path_24.lineTo(251.54, 247.94);
    path_24.lineTo(251.55, 247.93);
    path_24.close();

    Paint paint24Fill = Paint()..style = PaintingStyle.fill;
    paint24Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_24, paint24Fill);

    Path path_25 = Path();
    path_25.moveTo(16.41, 217.98);
    path_25.cubicTo(14.76, 217.79, 14.73, 217.79, 15.02, 216.75);
    path_25.cubicTo(14.6, 216.71, 16.04, 215.93, 15.64, 215.86);
    path_25.cubicTo(14.95, 215.74, 14.26, 215.58, 14.35, 214.38);
    path_25.cubicTo(14.38, 214.03, 14.23, 213.69, 13.92, 213.46);
    path_25.cubicTo(12.78, 212.59, 13.33, 211.69, 13.56, 210.86);
    path_25.cubicTo(13.67, 210.44, 14.22, 210.43, 14.39, 210.71);
    path_25.cubicTo(14.9, 211.55, 15.95, 212.11, 15.71, 213.39);
    path_25.cubicTo(15.56, 214.16, 15.91, 214.83, 16.56, 215.09);
    path_25.cubicTo(17.45, 215.46, 15.91, 217.11, 16.41, 217.97);
    path_25.lineTo(16.41, 217.98);
    path_25.close();

    Paint paint25Fill = Paint()..style = PaintingStyle.fill;
    paint25Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_25, paint25Fill);

    Path path_26 = Path();
    path_26.moveTo(122.98, 5.19);
    path_26.cubicTo(123.61, 6.3, 121.73, 6.91, 121.59, 7.91);
    path_26.cubicTo(121.57, 8.06, 120.85, 8.05, 120.96, 7.76);
    path_26.cubicTo(121.29, 6.9, 120.43, 6.75, 119.9, 6.41);
    path_26.cubicTo(119.24, 5.98, 118.27, 5.83, 117.96, 5.08);
    path_26.cubicTo(117.87, 4.86, 117.52, 4.77, 117.16, 4.89);
    path_26.cubicTo(116.82, 5.01, 116.47, 5.27, 116.17, 4.97);
    path_26.cubicTo(116, 4.8, 116.13, 4.58, 116.3, 4.4);
    path_26.cubicTo(116.59, 4.1, 117.06, 3.9, 117.44, 3.97);
    path_26.cubicTo(118.13, 4.1, 118.95, 4.23, 119.33, 4.6);
    path_26.cubicTo(119.98, 5.24, 120.54, 5.07, 121.32, 4.65);
    path_26.cubicTo(122.29, 4.13, 123.1, 3.95, 122.97, 5.17);
    path_26.lineTo(122.98, 5.19);
    path_26.close();

    Paint paint26Fill = Paint()..style = PaintingStyle.fill;
    paint26Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_26, paint26Fill);

    Path path_27 = Path();
    path_27.moveTo(163.8, 21.84);
    path_27.cubicTo(163.5, 22.41, 163.22, 23.02, 162.3, 22.56);
    path_27.cubicTo(161.54, 22.2, 160.83, 21.78, 159.88, 22.1);
    path_27.cubicTo(159.5, 22.23, 159.34, 21.98, 159.25, 21.65);
    path_27.cubicTo(159.17, 21.33, 158.96, 20.99, 159.56, 20.94);
    path_27.cubicTo(160.11, 20.9, 160.06, 20.65, 160.05, 20.29);
    path_27.cubicTo(160.03, 19.85, 160.39, 19.55, 160.86, 19.4);
    path_27.cubicTo(161.39, 19.23, 161.77, 19.51, 162.07, 19.82);
    path_27.cubicTo(162.67, 20.47, 163.24, 21.15, 163.81, 21.82);
    path_27.lineTo(163.8, 21.84);
    path_27.close();

    Paint paint27Fill = Paint()..style = PaintingStyle.fill;
    paint27Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_27, paint27Fill);

    Path path_28 = Path();
    path_28.moveTo(93.2101, 17.61);
    path_28.cubicTo(93.5701, 18.34, 93.1201, 18.88, 92.4701, 19.37);
    path_28.cubicTo(92.1501, 19.61, 91.7501, 19.77, 91.4201, 20.01);
    path_28.cubicTo(90.4801, 20.71, 89.5701, 20.82, 88.9401, 20.14);
    path_28.cubicTo(88.2801, 19.43, 88.9501, 18.36, 89.7001, 18.02);
    path_28.cubicTo(90.6201, 17.6, 91.7401, 17.49, 92.7601, 17.08);
    path_28.cubicTo(93.1001, 16.95, 93.0901, 17.47, 93.2101, 17.62);
    path_28.lineTo(93.2101, 17.61);
    path_28.close();

    Paint paint28Fill = Paint()..style = PaintingStyle.fill;
    paint28Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_28, paint28Fill);

    Path path_29 = Path();
    path_29.moveTo(278.69, 216.33);
    path_29.lineTo(278.71, 216.31);
    path_29.cubicTo(278.41, 216.11, 278.1, 215.92, 277.81, 215.72);
    path_29.cubicTo(277.23, 215.31, 277.4, 214.65, 277.53, 214.02);
    path_29.cubicTo(277.67, 213.35, 278.08, 213.14, 278.65, 213.13);
    path_29.cubicTo(279.1, 213.13, 279.58, 213.12, 280, 212.94);
    path_29.cubicTo(280.99, 212.53, 281.25, 212.97, 281.13, 213.93);
    path_29.cubicTo(281.02, 214.79, 280.88, 215.73, 279.79, 215.49);
    path_29.cubicTo(279.12, 215.34, 278.9, 215.76, 278.69, 216.33);
    path_29.close();

    Paint paint29Fill = Paint()..style = PaintingStyle.fill;
    paint29Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_29, paint29Fill);

    Path path_30 = Path();
    path_30.moveTo(45.92, 63.77);
    path_30.cubicTo(46.56, 63.08, 47.3, 62.79, 47.88, 63.14);
    path_30.cubicTo(48.38, 63.44, 48.01, 64.17, 47.81, 64.74);
    path_30.cubicTo(47.34, 66.09, 46.26, 66.61, 45.11, 66.99);
    path_30.cubicTo(44.43, 67.22, 44.48, 66.66, 44.55, 66.2);
    path_30.cubicTo(44.7, 65.25, 45.5, 64.55, 45.92, 63.77);
    path_30.close();

    Paint paint30Fill = Paint()..style = PaintingStyle.fill;
    paint30Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_30, paint30Fill);

    Path path_31 = Path();
    path_31.moveTo(82.84, 287.71);
    path_31.cubicTo(81.59, 287.2, 81.05, 286.08, 80.25, 285.24);
    path_31.cubicTo(79.38, 284.32, 80.7, 283.85, 80.81, 283.09);
    path_31.cubicTo(80.87, 282.65, 81.25, 282.86, 81.57, 282.95);
    path_31.cubicTo(82.31, 283.15, 82.62, 283.55, 82.6, 284.2);
    path_31.cubicTo(82.58, 284.88, 81.98, 284.82, 81.55, 284.63);
    path_31.cubicTo(80.96, 284.36, 81.04, 284.71, 80.97, 284.94);
    path_31.cubicTo(80.88, 285.25, 81.17, 285.25, 81.41, 285.31);
    path_31.cubicTo(83.44, 285.85, 83.67, 286.26, 82.81, 287.71);
    path_31.lineTo(82.84, 287.71);
    path_31.close();

    Paint paint31Fill = Paint()..style = PaintingStyle.fill;
    paint31Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_31, paint31Fill);

    Path path_32 = Path();
    path_32.moveTo(47.36, 232.92);
    path_32.cubicTo(46.65, 233.56, 46.21, 233.36, 45.56, 232.62);
    path_32.cubicTo(44.95, 231.97, 45.1, 230.88, 44.16, 230.45);
    path_32.cubicTo(43.97, 230.36, 44.06, 229.82, 44.37, 229.72);
    path_32.cubicTo(44.81, 229.58, 45.28, 229.22, 45.75, 229.7);
    path_32.cubicTo(46.25, 230.2, 46.76, 230.82, 46.76, 231.51);
    path_32.cubicTo(46.76, 232.1, 46.94, 232.54, 47.36, 232.91);
    path_32.lineTo(47.36, 232.92);
    path_32.close();

    Paint paint32Fill = Paint()..style = PaintingStyle.fill;
    paint32Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_32, paint32Fill);

    Path path_33 = Path();
    path_33.moveTo(0.600037, 152.56);
    path_33.cubicTo(0.770037, 152.19, 0.550037, 151.24, 1.29004, 151.39);
    path_33.cubicTo(1.87004, 151.51, 1.99004, 152.11, 1.81004, 152.81);
    path_33.cubicTo(1.65004, 153.46, 1.84004, 154, 2.10004, 154.55);
    path_33.cubicTo(2.46004, 155.33, 2.00004, 156.48, 1.31004, 156.6);
    path_33.cubicTo(0.760037, 156.69, 0.630037, 156.2, 0.620037, 155.64);
    path_33.cubicTo(0.590037, 154.65, 0.610037, 153.66, 0.600037, 152.55);
    path_33.lineTo(0.600037, 152.56);
    path_33.close();

    Paint paint33Fill = Paint()..style = PaintingStyle.fill;
    paint33Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_33, paint33Fill);

    Path path_34 = Path();
    path_34.moveTo(194.37, 281.57);
    path_34.cubicTo(194.48, 282.86, 193.94, 283.67, 192.57, 283.9);
    path_34.cubicTo(192.05, 283.99, 191.41, 284.26, 191.17, 283.66);
    path_34.cubicTo(190.94, 283.07, 191.3, 282.55, 191.89, 282.23);
    path_34.cubicTo(192.63, 281.81, 193.48, 281.75, 194.37, 281.57);
    path_34.close();

    Paint paint34Fill = Paint()..style = PaintingStyle.fill;
    paint34Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_34, paint34Fill);

    Path path_35 = Path();
    path_35.moveTo(38.33, 94.89);
    path_35.cubicTo(37.75, 94.79, 37.14, 94.73, 37.54, 93.94);
    path_35.cubicTo(37.86, 93.31, 38.26, 93.49, 38.67, 93.79);
    path_35.cubicTo(39.12, 94.11, 39.26, 93.76, 39.24, 93.34);
    path_35.cubicTo(39.2, 92.52, 39.65, 92.67, 40.02, 92.86);
    path_35.cubicTo(40.64, 93.17, 40.96, 93.71, 40.79, 94.51);
    path_35.cubicTo(40.58, 95.51, 40.04, 94.75, 39.68, 94.88);
    path_35.cubicTo(39.12, 95.07, 38.64, 96.05, 38.32, 94.9);
    path_35.lineTo(38.33, 94.89);
    path_35.close();

    Paint paint35Fill = Paint()..style = PaintingStyle.fill;
    paint35Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_35, paint35Fill);

    Path path_36 = Path();
    path_36.moveTo(265.76, 227.11);
    path_36.cubicTo(266.01, 226.66, 266.32, 226.54, 266.67, 226.59);
    path_36.cubicTo(267.08, 226.65, 267.31, 226.92, 267.3, 227.36);
    path_36.cubicTo(267.3, 227.99, 267.01, 228.58, 266.67, 229.1);
    path_36.cubicTo(266.3, 229.66, 265.75, 230.08, 265.17, 229.69);
    path_36.cubicTo(264.61, 229.31, 264.85, 228.7, 265.21, 228.2);
    path_36.cubicTo(265.48, 227.83, 265.67, 227.44, 265.76, 227.1);
    path_36.lineTo(265.76, 227.11);
    path_36.close();

    Paint paint36Fill = Paint()..style = PaintingStyle.fill;
    paint36Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_36, paint36Fill);

    Path path_37 = Path();
    path_37.moveTo(118.58, 25.46);
    path_37.cubicTo(117.55, 26.02, 118.05, 27.12, 117.24, 27.73);
    path_37.cubicTo(116.91, 27.97, 116.72, 28.36, 116.23, 28.14);
    path_37.cubicTo(115.61, 27.86, 115.14, 27.44, 115.02, 26.83);
    path_37.cubicTo(114.92, 26.31, 115.51, 26.25, 115.87, 26.16);
    path_37.cubicTo(116.76, 25.95, 117.52, 25.31, 118.59, 25.47);
    path_37.lineTo(118.58, 25.46);
    path_37.close();

    Paint paint37Fill = Paint()..style = PaintingStyle.fill;
    paint37Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_37, paint37Fill);

    Path path_38 = Path();
    path_38.moveTo(114.56, 27);
    path_38.cubicTo(114.38, 27.73, 113.96, 28.43, 113.26, 28.82);
    path_38.cubicTo(112.69, 29.15, 111.22, 28.47, 111.21, 27.9);
    path_38.cubicTo(111.21, 26.96, 112.6, 27.2, 112.93, 26.48);
    path_38.cubicTo(113.45, 26.66, 114.18, 26.41, 114.55, 27);
    path_38.lineTo(114.56, 27);
    path_38.close();

    Paint paint38Fill = Paint()..style = PaintingStyle.fill;
    paint38Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_38, paint38Fill);

    Path path_39 = Path();
    path_39.moveTo(45.85, 237.4);
    path_39.cubicTo(46, 237.79, 46.52, 238.14, 46.22, 238.59);
    path_39.cubicTo(45.95, 238.99, 45.49, 238.8, 45.08, 238.71);
    path_39.cubicTo(44.59, 238.6, 44.15, 238.39, 44.15, 237.76);
    path_39.cubicTo(44.15, 237.43, 44.11, 237.13, 43.86, 236.89);
    path_39.cubicTo(43.57, 236.61, 43.12, 236.32, 43.47, 235.93);
    path_39.cubicTo(43.76, 235.61, 44.17, 235.98, 44.51, 236.15);
    path_39.cubicTo(45.07, 236.42, 45.61, 236.72, 45.86, 237.4);
    path_39.lineTo(45.85, 237.4);
    path_39.close();

    Paint paint39Fill = Paint()..style = PaintingStyle.fill;
    paint39Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_39, paint39Fill);

    Path path_40 = Path();
    path_40.moveTo(242.98, 56.27);
    path_40.cubicTo(242.08, 56.39, 241.2, 56.27, 240.38, 55.7);
    path_40.cubicTo(240.15, 55.54, 239.92, 55.37, 239.91, 55.09);
    path_40.cubicTo(239.89, 54.77, 240.14, 54.71, 240.43, 54.76);
    path_40.cubicTo(240.51, 54.77, 240.6, 54.76, 240.68, 54.76);
    path_40.cubicTo(241.27, 54.68, 241.34, 53.41, 242.1, 54.05);
    path_40.cubicTo(242.7, 54.56, 242.92, 55.5, 242.99, 56.31);
    path_40.lineTo(242.99, 56.29);
    path_40.lineTo(242.98, 56.27);
    path_40.close();

    Paint paint40Fill = Paint()..style = PaintingStyle.fill;
    paint40Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_40, paint40Fill);

    Path path_41 = Path();
    path_41.moveTo(254.78, 242.38);
    path_41.cubicTo(255.56, 243.08, 255.32, 244.66, 254.4, 245.29);
    path_41.cubicTo(254.08, 245.51, 253.77, 245.62, 253.48, 245.38);
    path_41.cubicTo(253.23, 245.18, 253.23, 244.84, 253.37, 244.57);
    path_41.cubicTo(253.67, 244.01, 253.89, 243.48, 253.75, 242.87);
    path_41.cubicTo(253.71, 242.69, 253.9, 242.33, 254.07, 242.2);
    path_41.cubicTo(254.37, 241.98, 254.6, 242.24, 254.77, 242.38);
    path_41.lineTo(254.78, 242.38);
    path_41.close();

    Paint paint41Fill = Paint()..style = PaintingStyle.fill;
    paint41Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_41, paint41Fill);

    Path path_42 = Path();
    path_42.moveTo(154.71, 309.73);
    path_42.cubicTo(153.45, 310.43, 152.29, 311.37, 150.49, 310.84);
    path_42.cubicTo(150.05, 310.71, 149.5, 310.6, 149.5, 310.19);
    path_42.cubicTo(149.5, 309.72, 150.1, 309.89, 150.46, 309.83);
    path_42.cubicTo(151.86, 309.61, 153.25, 309.48, 154.71, 309.73);
    path_42.close();

    Paint paint42Fill = Paint()..style = PaintingStyle.fill;
    paint42Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_42, paint42Fill);

    Path path_43 = Path();
    path_43.moveTo(27.77, 189.81);
    path_43.cubicTo(28.43, 189.99, 30.95, 190.06, 31.38, 190.6);
    path_43.cubicTo(31.73, 191.06, 31.62, 191.94, 31.34, 192.55);
    path_43.cubicTo(31.15, 192.98, 30.93, 192.66, 30.72, 192.4);
    path_43.cubicTo(30.22, 191.77, 30.07, 190.81, 29.15, 190.54);
    path_43.cubicTo(28.88, 190.46, 27.14, 190.66, 27.17, 190.46);
    path_43.cubicTo(27.21, 190.12, 27.35, 189.88, 27.76, 189.81);
    path_43.lineTo(27.77, 189.81);
    path_43.close();

    Paint paint43Fill = Paint()..style = PaintingStyle.fill;
    paint43Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_43, paint43Fill);

    Path path_44 = Path();
    path_44.moveTo(197.49, 306.68);
    path_44.cubicTo(197.57, 306.56, 197.69, 306.3, 197.77, 306.3);
    path_44.cubicTo(199.41, 306.26, 198.4, 304.64, 199.63, 304.48);
    path_44.cubicTo(200.37, 304.38, 200.88, 304.82, 201.39, 305.13);
    path_44.cubicTo(200.86, 305.48, 201.23, 306.36, 200.12, 306.34);
    path_44.cubicTo(199.6, 306.34, 199.33, 306.79, 198.87, 306.92);
    path_44.cubicTo(198.35, 307.07, 197.83, 307.16, 197.49, 306.68);
    path_44.close();

    Paint paint44Fill = Paint()..style = PaintingStyle.fill;
    paint44Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_44, paint44Fill);

    Path path_45 = Path();
    path_45.moveTo(117.32, 8.78);
    path_45.cubicTo(116.41, 8.63, 114.96, 9.66, 114.68, 8.36);
    path_45.cubicTo(114.53, 7.62, 115.64, 7.37, 116.37, 7.22);
    path_45.cubicTo(117.23, 7.06, 118.05, 7.08, 118.08, 8.02);
    path_45.cubicTo(118.1, 8.49, 118.12, 8.81, 117.32, 8.77);
    path_45.lineTo(117.32, 8.78);
    path_45.close();

    Paint paint45Fill = Paint()..style = PaintingStyle.fill;
    paint45Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_45, paint45Fill);

    Path path_46 = Path();
    path_46.moveTo(251.56, 247.9);
    path_46.cubicTo(251.05, 248.81, 250.24, 249.08, 249.52, 248.59);
    path_46.cubicTo(249.3, 248.44, 249.1, 248.2, 249.28, 247.98);
    path_46.cubicTo(249.83, 247.33, 250.44, 246.73, 251.06, 246.14);
    path_46.cubicTo(251.2, 246, 251.49, 246.04, 251.61, 246.24);
    path_46.cubicTo(251.93, 246.76, 251.15, 247.39, 251.56, 247.92);
    path_46.lineTo(251.56, 247.89);
    path_46.lineTo(251.56, 247.9);
    path_46.close();

    Paint paint46Fill = Paint()..style = PaintingStyle.fill;
    paint46Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_46, paint46Fill);

    Path path_47 = Path();
    path_47.moveTo(113.71, 282.17);
    path_47.cubicTo(113.29, 281.89, 112.91, 281.9, 112.51, 281.96);
    path_47.cubicTo(111.91, 282.06, 111.7, 281.72, 111.66, 281.27);
    path_47.cubicTo(111.61, 280.74, 112.01, 280.55, 112.49, 280.61);
    path_47.cubicTo(113.05, 280.68, 113.61, 280.82, 114.14, 281);
    path_47.cubicTo(114.63, 281.17, 115.24, 281.43, 114.95, 282.04);
    path_47.cubicTo(114.69, 282.6, 114.15, 282.51, 113.7, 282.17);
    path_47.lineTo(113.71, 282.17);
    path_47.close();

    Paint paint47Fill = Paint()..style = PaintingStyle.fill;
    paint47Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_47, paint47Fill);

    Path path_48 = Path();
    path_48.moveTo(297.6, 154.35);
    path_48.cubicTo(297.45, 153.34, 297.29, 152.69, 296.61, 152.28);
    path_48.cubicTo(296.15, 152, 295.67, 151.26, 296.7, 150.9);
    path_48.cubicTo(297, 150.8, 297.12, 150.6, 297, 150.27);
    path_48.cubicTo(296.85, 149.86, 296.95, 149.55, 297.26, 149.49);
    path_48.cubicTo(297.65, 149.42, 297.82, 149.82, 297.87, 150.23);
    path_48.cubicTo(297.99, 151.52, 298.22, 152.83, 297.61, 154.33);
    path_48.lineTo(297.6, 154.35);
    path_48.close();

    Paint paint48Fill = Paint()..style = PaintingStyle.fill;
    paint48Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_48, paint48Fill);

    Path path_49 = Path();
    path_49.moveTo(33.66, 106.4);
    path_49.cubicTo(33.21, 107.26, 32.6, 107.2, 31.97, 106.99);
    path_49.cubicTo(31.6, 106.87, 31.31, 106.52, 31.66, 106.1);
    path_49.cubicTo(32.14, 105.56, 32.48, 104.51, 33.41, 104.87);
    path_49.cubicTo(34.13, 105.15, 33.79, 105.84, 33.66, 106.4);
    path_49.close();

    Paint paint49Fill = Paint()..style = PaintingStyle.fill;
    paint49Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_49, paint49Fill);

    Path path_50 = Path();
    path_50.moveTo(269.15, 236.48);
    path_50.cubicTo(269.4, 236.19, 269.62, 236.03, 269.9, 236.03);
    path_50.cubicTo(270.15, 236.03, 270.3, 236.19, 270.23, 236.43);
    path_50.cubicTo(269.84, 237.8, 271.13, 238.51, 270.92, 239.82);
    path_50.cubicTo(270.9, 239.97, 271.04, 240.13, 270.85, 240.29);
    path_50.cubicTo(270.64, 240.47, 270.39, 240.48, 270.3, 240.27);
    path_50.cubicTo(269.82, 239.18, 269.27, 238.13, 269.04, 236.91);
    path_50.cubicTo(269.01, 236.76, 269.12, 236.57, 269.14, 236.47);
    path_50.lineTo(269.15, 236.48);
    path_50.close();

    Paint paint50Fill = Paint()..style = PaintingStyle.fill;
    paint50Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_50, paint50Fill);

    Path path_51 = Path();
    path_51.moveTo(267.01, 232.99);
    path_51.cubicTo(266.87, 233.15, 266.68, 233.41, 266.42, 233.59);
    path_51.cubicTo(266.07, 233.83, 265.62, 233.96, 265.37, 233.7);
    path_51.cubicTo(265.12, 233.45, 265.44, 233.07, 265.63, 232.77);
    path_51.lineTo(266.28, 231.59);
    path_51.cubicTo(266.52, 231.17, 266.73, 230.58, 267.3, 230.88);
    path_51.cubicTo(267.79, 231.14, 267.85, 231.64, 267.51, 232.21);
    path_51.cubicTo(267.37, 232.44, 267.22, 232.67, 267.02, 232.99);
    path_51.lineTo(267.01, 232.99);
    path_51.close();

    Paint paint51Fill = Paint()..style = PaintingStyle.fill;
    paint51Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_51, paint51Fill);

    Path path_52 = Path();
    path_52.moveTo(158.36, 0.340005);
    path_52.cubicTo(160.2, -0.329995, 161.16, 0.070005, 161.92, 0.950005);
    path_52.cubicTo(162.42, 1.52, 162.05, 1.86, 161.43, 2.11);
    path_52.cubicTo(160.79, 2.37, 160.24, 2.24, 160.1, 1.67);
    path_52.cubicTo(159.94, 1.04, 159.54, 0.570005, 158.36, 0.340005);
    path_52.close();

    Paint paint52Fill = Paint()..style = PaintingStyle.fill;
    paint52Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_52, paint52Fill);

    Path path_53 = Path();
    path_53.moveTo(293.68, 90.12);
    path_53.cubicTo(293.03, 90.24, 292.41, 89.82, 292.07, 89.07);
    path_53.cubicTo(291.79, 88.47, 292.01, 87.91, 292.55, 87.74);
    path_53.cubicTo(293.19, 87.54, 293.69, 87.86, 294.04, 88.69);
    path_53.cubicTo(294.33, 89.39, 294.28, 89.87, 293.68, 90.11);
    path_53.lineTo(293.68, 90.12);
    path_53.close();

    Paint paint53Fill = Paint()..style = PaintingStyle.fill;
    paint53Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_53, paint53Fill);

    Path path_54 = Path();
    path_54.moveTo(21.06, 163.96);
    path_54.cubicTo(20.99, 164.26, 21.29, 164.84, 20.86, 165.18);
    path_54.cubicTo(20.6, 165.38, 20.35, 164.97, 20.1, 164.89);
    path_54.cubicTo(19.73, 164.77, 19.72, 164.43, 19.87, 164.12);
    path_54.cubicTo(20.12, 163.59, 20.17, 163.08, 19.97, 162.53);
    path_54.cubicTo(19.83, 162.15, 19.79, 161.76, 20.2, 161.62);
    path_54.cubicTo(20.56, 161.5, 20.78, 161.8, 20.91, 162.17);
    path_54.cubicTo(21.1, 162.7, 21.08, 163.24, 21.06, 163.95);
    path_54.lineTo(21.06, 163.96);
    path_54.close();

    Paint paint54Fill = Paint()..style = PaintingStyle.fill;
    paint54Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_54, paint54Fill);

    Path path_55 = Path();
    path_55.moveTo(226.88, 284.57);
    path_55.cubicTo(227.47, 284.4, 228.13, 283.83, 228.4, 284.66);
    path_55.cubicTo(228.56, 285.16, 228.8, 285.68, 227.94, 286.07);
    path_55.cubicTo(227.08, 286.45, 226.4, 286.22, 226.09, 285.62);
    path_55.cubicTo(225.83, 285.12, 226.44, 284.81, 226.88, 284.57);
    path_55.close();

    Paint paint55Fill = Paint()..style = PaintingStyle.fill;
    paint55Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_55, paint55Fill);

    Path path_56 = Path();
    path_56.moveTo(276.59, 210.05);
    path_56.cubicTo(275.83, 210.3, 275.23, 210.61, 274.64, 210.64);
    path_56.cubicTo(274.37, 210.66, 274.07, 210.11, 274.43, 209.72);
    path_56.cubicTo(274.89, 209.24, 275.08, 208.24, 275.87, 208.45);
    path_56.cubicTo(276.42, 208.6, 276.31, 209.42, 276.59, 210.05);
    path_56.close();

    Paint paint56Fill = Paint()..style = PaintingStyle.fill;
    paint56Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_56, paint56Fill);

    Path path_57 = Path();
    path_57.moveTo(280.98, 105.63);
    path_57.cubicTo(280.98, 106, 280.1, 106.07, 280.79, 106.72);
    path_57.cubicTo(280.98, 106.9, 280.82, 107.29, 280.57, 107.34);
    path_57.cubicTo(280.2, 107.41, 279.8, 107.62, 279.41, 107.34);
    path_57.cubicTo(279.1, 107.11, 278.84, 106.87, 278.88, 106.34);
    path_57.cubicTo(278.97, 105.23, 279.69, 104.96, 281, 105.65);
    path_57.lineTo(280.98, 105.63);
    path_57.close();

    Paint paint57Fill = Paint()..style = PaintingStyle.fill;
    paint57Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_57, paint57Fill);

    Path path_58 = Path();
    path_58.moveTo(82.77, 33.65);
    path_58.cubicTo(82.76, 34.45, 82.07, 34.97, 81.61, 35.48);
    path_58.cubicTo(81.13, 36, 80.66, 35.57, 80.39, 35.24);
    path_58.cubicTo(79.98, 34.75, 80.35, 34.24, 80.87, 33.92);
    path_58.cubicTo(81.45, 33.56, 82.12, 33.47, 82.78, 33.64);
    path_58.lineTo(82.77, 33.65);
    path_58.close();

    Paint paint58Fill = Paint()..style = PaintingStyle.fill;
    paint58Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_58, paint58Fill);

    Path path_59 = Path();
    path_59.moveTo(42.33, 238.94);
    path_59.cubicTo(41.82, 238.25, 41.81, 237.49, 42.15, 237.03);
    path_59.cubicTo(42.4, 236.69, 43.13, 236.87, 43.47, 237.4);
    path_59.cubicTo(44, 238.22, 43.81, 239.02, 43.28, 239.54);
    path_59.cubicTo(42.81, 240, 42.64, 239.16, 42.33, 238.94);
    path_59.close();

    Paint paint59Fill = Paint()..style = PaintingStyle.fill;
    paint59Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_59, paint59Fill);

    Path path_60 = Path();
    path_60.moveTo(133.57, 6.3);
    path_60.cubicTo(133.48, 6.8, 133.53, 7.47, 132.73, 7.46);
    path_60.cubicTo(131.68, 7.46, 131.92, 6.61, 131.74, 6.08);
    path_60.cubicTo(131.6, 5.66, 131.7, 5.11, 132.28, 5.08);
    path_60.cubicTo(133.27, 5.03, 133.29, 5.8, 133.57, 6.3);
    path_60.close();

    Paint paint60Fill = Paint()..style = PaintingStyle.fill;
    paint60Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_60, paint60Fill);

    Path path_61 = Path();
    path_61.moveTo(286.58, 126.7);
    path_61.cubicTo(286.21, 125.89, 285.87, 125.15, 285.55, 124.45);
    path_61.cubicTo(285.21, 123.76, 284.88, 123.11, 284.55, 122.45);
    path_61.cubicTo(284.39, 122.12, 284.2, 121.53, 284.59, 121.35);
    path_61.cubicTo(285.08, 121.13, 285.41, 121.96, 285.42, 122.14);
    path_61.cubicTo(285.43, 122.87, 285.75, 123.47, 286.08, 124.07);
    path_61.cubicTo(286.39, 124.67, 286.69, 125.27, 286.73, 125.97);
    path_61.cubicTo(286.73, 126.09, 286.68, 126.2, 286.57, 126.68);
    path_61.lineTo(286.58, 126.7);
    path_61.close();

    Paint paint61Fill = Paint()..style = PaintingStyle.fill;
    paint61Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_61, paint61Fill);

    Path path_62 = Path();
    path_62.moveTo(253.48, 35.46);
    path_62.cubicTo(253.82, 35.71, 253.95, 35.96, 253.9, 36.31);
    path_62.cubicTo(253.81, 36.86, 253.88, 37.42, 254.24, 38.03);
    path_62.cubicTo(254.38, 38.29, 254.5, 38.63, 254.21, 38.75);
    path_62.cubicTo(253.93, 38.87, 253.59, 38.77, 253.25, 38.6);
    path_62.cubicTo(252.86, 38.42, 252.63, 38.1, 252.71, 37.8);
    path_62.cubicTo(252.9, 37.09, 253.58, 36.52, 252.68, 35.53);
    path_62.cubicTo(252.64, 35.49, 252.73, 35.28, 252.82, 35.23);
    path_62.cubicTo(253.04, 35.11, 253.27, 35.28, 253.49, 35.45);
    path_62.lineTo(253.48, 35.46);
    path_62.close();

    Paint paint62Fill = Paint()..style = PaintingStyle.fill;
    paint62Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_62, paint62Fill);

    Path path_63 = Path();
    path_63.moveTo(276.61, 101.2);
    path_63.cubicTo(277.48, 101.49, 278.03, 101.99, 277.69, 103.05);
    path_63.cubicTo(277.63, 103.24, 277.51, 103.48, 277.76, 103.64);
    path_63.cubicTo(278, 103.8, 278.59, 103.82, 278.05, 104.25);
    path_63.cubicTo(277.74, 104.49, 277.39, 104.51, 277.06, 103.9);
    path_63.cubicTo(276.65, 103.13, 276.55, 102.37, 276.5, 101.57);
    path_63.lineTo(276.61, 101.2);
    path_63.close();

    Paint paint63Fill = Paint()..style = PaintingStyle.fill;
    paint63Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_63, paint63Fill);

    Path path_64 = Path();
    path_64.moveTo(55.12, 245.79);
    path_64.cubicTo(54.84, 245.22, 54.64, 244.82, 54.45, 244.43);
    path_64.cubicTo(54.26, 244.02, 54.3, 243.69, 54.65, 243.44);
    path_64.cubicTo(54.96, 243.21, 55.29, 243.07, 55.67, 243.36);
    path_64.cubicTo(56.06, 243.66, 56.01, 244.04, 55.89, 244.4);
    path_64.cubicTo(55.79, 244.71, 55.61, 244.98, 55.87, 245.35);
    path_64.cubicTo(56.01, 245.55, 56.25, 245.82, 55.87, 245.96);
    path_64.cubicTo(55.53, 246.09, 55.22, 245.98, 55.11, 245.78);
    path_64.lineTo(55.12, 245.79);
    path_64.close();

    Paint paint64Fill = Paint()..style = PaintingStyle.fill;
    paint64Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_64, paint64Fill);

    Path path_65 = Path();
    path_65.moveTo(262.69, 79.88);
    path_65.cubicTo(263.08, 80.76, 263.13, 81.47, 263.53, 82.1);
    path_65.cubicTo(263.77, 82.47, 263.57, 82.92, 263.24, 83.08);
    path_65.cubicTo(262.79, 83.3, 262.6, 82.84, 262.39, 82.5);
    path_65.cubicTo(261.82, 81.55, 262.02, 80.78, 262.69, 79.89);
    path_65.lineTo(262.69, 79.88);
    path_65.close();

    Paint paint65Fill = Paint()..style = PaintingStyle.fill;
    paint65Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_65, paint65Fill);

    Path path_66 = Path();
    path_66.moveTo(32.59, 66.93);
    path_66.cubicTo(32.41, 67.08, 31.93, 67.65, 31.61, 67.06);
    path_66.cubicTo(31.34, 66.55, 31.02, 65.86, 31.96, 65.23);
    path_66.cubicTo(32.29, 65, 32.66, 64.28, 32.92, 64.85);
    path_66.cubicTo(33.15, 65.36, 33.83, 65.9, 32.59, 66.93);
    path_66.close();

    Paint paint66Fill = Paint()..style = PaintingStyle.fill;
    paint66Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_66, paint66Fill);

    Path path_67 = Path();
    path_67.moveTo(173.63, 2.43);
    path_67.cubicTo(173.27, 2.92, 172.7, 3.03, 172.02, 2.94);
    path_67.cubicTo(171.4, 2.85, 171.04, 2.58, 171.18, 2.08);
    path_67.cubicTo(171.31, 1.6, 171.69, 1.26, 172.38, 1.39);
    path_67.cubicTo(173.06, 1.51, 173.43, 1.94, 173.63, 2.44);
    path_67.lineTo(173.63, 2.43);
    path_67.close();

    Paint paint67Fill = Paint()..style = PaintingStyle.fill;
    paint67Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_67, paint67Fill);

    Path path_68 = Path();
    path_68.moveTo(199.04, 303.17);
    path_68.cubicTo(198.54, 303.84, 197.68, 303.82, 197.6, 304.46);
    path_68.cubicTo(197.56, 304.78, 197.04, 304.96, 196.6, 304.91);
    path_68.cubicTo(196.29, 304.88, 196.08, 304.74, 195.97, 304.51);
    path_68.cubicTo(195.8, 304.14, 196.13, 303.89, 196.42, 303.65);
    path_68.cubicTo(197.17, 303.02, 197.98, 303.21, 199.04, 303.17);
    path_68.close();

    Paint paint68Fill = Paint()..style = PaintingStyle.fill;
    paint68Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_68, paint68Fill);

    Path path_69 = Path();
    path_69.moveTo(52.87, 45.38);
    path_69.cubicTo(52.1, 46.42, 50.9, 46.86, 50.27, 47.88);
    path_69.cubicTo(50.11, 48.14, 49.79, 47.96, 49.81, 47.74);
    path_69.cubicTo(49.84, 47.2, 49.5, 46.46, 50.3, 46.14);
    path_69.cubicTo(51.08, 45.83, 51.91, 45.19, 52.87, 45.39);
    path_69.lineTo(52.87, 45.38);
    path_69.close();

    Paint paint69Fill = Paint()..style = PaintingStyle.fill;
    paint69Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_69, paint69Fill);

    Path path_70 = Path();
    path_70.moveTo(217.37, 21.32);
    path_70.cubicTo(217.09, 21.85, 216.59, 21.7, 216.11, 21.51);
    path_70.cubicTo(215.42, 21.23, 215.2, 20.78, 215.46, 20.27);
    path_70.cubicTo(215.68, 19.83, 216.22, 19.62, 216.74, 19.89);
    path_70.cubicTo(217.39, 20.23, 217.31, 20.85, 217.37, 21.32);
    path_70.close();

    Paint paint70Fill = Paint()..style = PaintingStyle.fill;
    paint70Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_70, paint70Fill);

    Path path_71 = Path();
    path_71.moveTo(262.39, 233.62);
    path_71.cubicTo(262.71, 232.83, 262.28, 231.82, 263.33, 231.54);
    path_71.cubicTo(263.72, 231.44, 264.11, 231.34, 264.31, 231.72);
    path_71.cubicTo(264.52, 232.11, 264.29, 232.45, 263.91, 232.69);
    path_71.cubicTo(263.4, 233, 262.89, 233.31, 262.38, 233.62);
    path_71.lineTo(262.39, 233.62);
    path_71.close();

    Paint paint71Fill = Paint()..style = PaintingStyle.fill;
    paint71Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_71, paint71Fill);

    Path path_72 = Path();
    path_72.moveTo(76.63, 39.26);
    path_72.cubicTo(76.74, 38.65, 76.59, 38.28, 75.8, 38.39);
    path_72.cubicTo(75.15, 38.49, 74.98, 38.17, 75.18, 37.64);
    path_72.cubicTo(75.38, 37.12, 75.86, 37.03, 76.21, 37.21);
    path_72.cubicTo(76.67, 37.45, 77.49, 37.19, 77.62, 37.88);
    path_72.cubicTo(77.76, 38.58, 77.02, 38.83, 76.61, 39.25);
    path_72.lineTo(76.63, 39.25);
    path_72.lineTo(76.63, 39.26);
    path_72.close();

    Paint paint72Fill = Paint()..style = PaintingStyle.fill;
    paint72Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_72, paint72Fill);

    Path path_73 = Path();
    path_73.moveTo(276.5, 206.74);
    path_73.cubicTo(276.79, 206.25, 277.1, 205.72, 277.5, 206.02);
    path_73.cubicTo(277.98, 206.38, 277.72, 207.07, 277.5, 207.59);
    path_73.cubicTo(277.33, 208.01, 276.94, 208.48, 276.56, 208.27);
    path_73.cubicTo(275.84, 207.86, 276.63, 207.19, 276.5, 206.74);
    path_73.close();

    Paint paint73Fill = Paint()..style = PaintingStyle.fill;
    paint73Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_73, paint73Fill);

    Path path_74 = Path();
    path_74.moveTo(10.41, 212.91);
    path_74.cubicTo(10.16, 212.24, 10, 211.48, 10.35, 211.3);
    path_74.cubicTo(10.79, 211.08, 11.32, 211.48, 11.36, 212.31);
    path_74.cubicTo(11.36, 212.39, 11.44, 212.51, 11.5, 212.58);
    path_74.cubicTo(11.86, 212.94, 12.26, 213.29, 12.11, 213.87);
    path_74.cubicTo(12.03, 214.18, 11.74, 214.2, 11.48, 214.05);
    path_74.cubicTo(11.02, 213.77, 10.47, 213.6, 10.41, 212.91);
    path_74.close();

    Paint paint74Fill = Paint()..style = PaintingStyle.fill;
    paint74Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_74, paint74Fill);

    Path path_75 = Path();
    path_75.moveTo(302.7, 112.57);
    path_75.cubicTo(303.15, 112.42, 303.56, 112.43, 303.82, 113.16);
    path_75.cubicTo(304.12, 114.02, 303.55, 115.15, 303.05, 114.7);
    path_75.cubicTo(302.69, 114.38, 302.42, 113.86, 301.93, 113.75);
    path_75.cubicTo(302.1, 113.17, 302.73, 113.21, 302.72, 112.54);
    path_75.lineTo(302.72, 112.56);
    path_75.lineTo(302.7, 112.57);
    path_75.close();

    Paint paint75Fill = Paint()..style = PaintingStyle.fill;
    paint75Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_75, paint75Fill);

    Path path_76 = Path();
    path_76.moveTo(283.46, 174.49);
    path_76.cubicTo(282.99, 173.92, 283.17, 173.3, 283.38, 172.66);
    path_76.cubicTo(283.5, 172.3, 283.53, 171.78, 284.04, 171.98);
    path_76.cubicTo(284.42, 172.13, 284.64, 172.47, 284.53, 173.01);
    path_76.cubicTo(284.38, 173.72, 283.98, 174.16, 283.43, 174.5);
    path_76.lineTo(283.46, 174.5);
    path_76.lineTo(283.46, 174.49);
    path_76.close();

    Paint paint76Fill = Paint()..style = PaintingStyle.fill;
    paint76Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_76, paint76Fill);

    Path path_77 = Path();
    path_77.moveTo(169.4, 303.56);
    path_77.cubicTo(170, 303.68, 170.81, 303.46, 170.96, 304.14);
    path_77.cubicTo(171.06, 304.59, 170.56, 304.78, 170.08, 304.75);
    path_77.cubicTo(169.41, 304.69, 168.51, 304.71, 168.34, 304.1);
    path_77.cubicTo(168.19, 303.56, 169, 303.69, 169.4, 303.56);
    path_77.close();

    Paint paint77Fill = Paint()..style = PaintingStyle.fill;
    paint77Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_77, paint77Fill);

    Path path_78 = Path();
    path_78.moveTo(267.72, 242.88);
    path_78.cubicTo(267.91, 242.23, 268.43, 241.64, 268.38, 240.9);
    path_78.cubicTo(268.35, 240.46, 268.76, 240.46, 269.06, 240.48);
    path_78.cubicTo(269.32, 240.49, 269.48, 240.52, 269.48, 240.92);
    path_78.cubicTo(269.45, 242.17, 269.02, 242.75, 267.71, 242.86);
    path_78.lineTo(267.71, 242.89);
    path_78.lineTo(267.72, 242.88);
    path_78.close();

    Paint paint78Fill = Paint()..style = PaintingStyle.fill;
    paint78Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_78, paint78Fill);

    Path path_79 = Path();
    path_79.moveTo(263.19, 253.34);
    path_79.cubicTo(262.81, 253.51, 262.35, 254.07, 262.01, 253.51);
    path_79.cubicTo(261.76, 253.1, 261.65, 252.61, 262.22, 252.07);
    path_79.cubicTo(262.77, 251.54, 263.27, 251.41, 263.7, 251.87);
    path_79.cubicTo(264.2, 252.41, 263.46, 252.81, 263.19, 253.34);
    path_79.close();

    Paint paint79Fill = Paint()..style = PaintingStyle.fill;
    paint79Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_79, paint79Fill);

    Path path_80 = Path();
    path_80.moveTo(282.53, 213.54);
    path_80.cubicTo(282.17, 213.11, 282.04, 212.58, 282.25, 211.98);
    path_80.cubicTo(282.36, 211.68, 282.56, 211.11, 282.92, 211.43);
    path_80.cubicTo(283.31, 211.79, 283.64, 212.39, 283.5, 213.03);
    path_80.cubicTo(283.41, 213.49, 282.92, 213.51, 282.53, 213.53);
    path_80.lineTo(282.53, 213.54);
    path_80.close();

    Paint paint80Fill = Paint()..style = PaintingStyle.fill;
    paint80Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_80, paint80Fill);

    Path path_81 = Path();
    path_81.moveTo(17.61, 138.64);
    path_81.cubicTo(17.1, 138.53, 16.63, 138.23, 16.76, 137.56);
    path_81.cubicTo(16.88, 136.8, 17.26, 136.09, 17.56, 135.37);
    path_81.cubicTo(17.58, 135.33, 17.8, 135.34, 17.88, 135.41);
    path_81.cubicTo(18.17, 135.68, 18.1, 136.07, 17.98, 136.43);
    path_81.cubicTo(17.72, 137.15, 17.22, 137.82, 17.6, 138.66);
    path_81.lineTo(17.62, 138.64);
    path_81.lineTo(17.61, 138.64);
    path_81.close();

    Paint paint81Fill = Paint()..style = PaintingStyle.fill;
    paint81Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_81, paint81Fill);

    Path path_82 = Path();
    path_82.moveTo(231.45, 287.81);
    path_82.cubicTo(231.31, 287.38, 231.42, 287.01, 231.87, 286.86);
    path_82.cubicTo(232.77, 286.56, 233.24, 287.11, 233.74, 287.48);
    path_82.cubicTo(233.88, 287.58, 233.74, 287.89, 233.55, 287.88);
    path_82.cubicTo(232.83, 287.87, 231.98, 288.24, 231.45, 287.81);
    path_82.close();

    Paint paint82Fill = Paint()..style = PaintingStyle.fill;
    paint82Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_82, paint82Fill);

    Path path_83 = Path();
    path_83.moveTo(254.01, 41.18);
    path_83.cubicTo(254.14, 41.45, 255.03, 41.83, 254.48, 42.26);
    path_83.cubicTo(254.19, 42.48, 253.44, 42.49, 253.11, 42);
    path_83.cubicTo(252.83, 41.58, 252.27, 40.91, 252.74, 40.52);
    path_83.cubicTo(253.11, 40.21, 253.59, 40.57, 254.01, 41.18);
    path_83.close();

    Paint paint83Fill = Paint()..style = PaintingStyle.fill;
    paint83Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_83, paint83Fill);

    Path path_84 = Path();
    path_84.moveTo(98.91, 301.1);
    path_84.cubicTo(99.34, 301.35, 100.14, 301.5, 99.97, 301.97);
    path_84.cubicTo(99.78, 302.51, 99.04, 302.21, 98.54, 301.93);
    path_84.cubicTo(98.1, 301.69, 97.15, 301.64, 97.43, 301.03);
    path_84.cubicTo(97.66, 300.52, 98.38, 300.92, 98.91, 301.1);
    path_84.close();

    Paint paint84Fill = Paint()..style = PaintingStyle.fill;
    paint84Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_84, paint84Fill);

    Path path_85 = Path();
    path_85.moveTo(207.04, 11.02);
    path_85.cubicTo(207.48, 11.35, 208.28, 11.45, 208.1, 11.93);
    path_85.cubicTo(207.89, 12.49, 207.24, 12.22, 206.7, 11.94);
    path_85.cubicTo(206.65, 11.92, 206.61, 11.89, 206.58, 11.85);
    path_85.cubicTo(206.2, 11.38, 204.72, 11.75, 205.11, 10.87);
    path_85.cubicTo(205.46, 10.08, 206.42, 11.3, 207.04, 11.02);
    path_85.close();

    Paint paint85Fill = Paint()..style = PaintingStyle.fill;
    paint85Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_85, paint85Fill);

    Path path_86 = Path();
    path_86.moveTo(300.96, 109.09);
    path_86.cubicTo(301.38, 108.87, 301.78, 108.62, 302.22, 108.45);
    path_86.cubicTo(302.52, 108.33, 302.88, 108.35, 303.08, 108.84);
    path_86.cubicTo(303.19, 109.11, 303.31, 109.5, 303.24, 109.72);
    path_86.cubicTo(303.09, 110.18, 302.76, 109.68, 302.51, 109.67);
    path_86.cubicTo(301.96, 109.65, 301.4, 109.93, 300.97, 109.07);
    path_86.lineTo(300.97, 109.1);
    path_86.lineTo(300.96, 109.09);
    path_86.close();

    Paint paint86Fill = Paint()..style = PaintingStyle.fill;
    paint86Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_86, paint86Fill);

    Path path_87 = Path();
    path_87.moveTo(107.51, 29.66);
    path_87.cubicTo(107.09, 29.74, 106.72, 30.08, 106.52, 29.78);
    path_87.cubicTo(106.22, 29.34, 106.83, 29.28, 107.07, 29.08);
    path_87.cubicTo(107.43, 28.79, 107.79, 28.51, 108.18, 28.28);
    path_87.cubicTo(108.46, 28.11, 108.8, 27.99, 109, 28.32);
    path_87.cubicTo(109.17, 28.6, 109.07, 28.86, 108.73, 29.04);
    path_87.cubicTo(108.28, 29.26, 107.83, 29.47, 107.5, 29.66);
    path_87.lineTo(107.51, 29.66);
    path_87.close();

    Paint paint87Fill = Paint()..style = PaintingStyle.fill;
    paint87Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_87, paint87Fill);

    Path path_88 = Path();
    path_88.moveTo(129.17, 8.62);
    path_88.cubicTo(129.28, 9.19, 130.34, 9.53, 129.67, 10.19);
    path_88.cubicTo(129.38, 10.47, 128.63, 10.61, 128.41, 10.35);
    path_88.cubicTo(127.88, 9.72, 128.88, 9.23, 129.17, 8.61);
    path_88.lineTo(129.17, 8.62);
    path_88.close();

    Paint paint88Fill = Paint()..style = PaintingStyle.fill;
    paint88Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_88, paint88Fill);

    Path path_89 = Path();
    path_89.moveTo(251.56, 41.41);
    path_89.cubicTo(251.22, 41.58, 250.88, 41.77, 250.46, 41.28);
    path_89.cubicTo(250.15, 40.92, 249.62, 40.49, 250.05, 40.12);
    path_89.cubicTo(250.39, 39.83, 250.92, 40.01, 251.35, 40.37);
    path_89.cubicTo(251.78, 40.71, 251.84, 41.09, 251.55, 41.41);
    path_89.lineTo(251.56, 41.41);
    path_89.close();

    Paint paint89Fill = Paint()..style = PaintingStyle.fill;
    paint89Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_89, paint89Fill);

    Path path_90 = Path();
    path_90.moveTo(32.16, 209.21);
    path_90.cubicTo(32.87, 209.13, 32.99, 209.88, 33.38, 210.26);
    path_90.cubicTo(33.67, 210.55, 33.68, 210.95, 33.26, 211.09);
    path_90.cubicTo(32.65, 211.29, 32.48, 210.71, 32.28, 210.27);
    path_90.cubicTo(32.12, 209.94, 31.77, 209.57, 32.16, 209.21);
    path_90.close();

    Paint paint90Fill = Paint()..style = PaintingStyle.fill;
    paint90Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_90, paint90Fill);

    Path path_91 = Path();
    path_91.moveTo(288.05, 123.97);
    path_91.cubicTo(287.69, 123.94, 287.29, 123.88, 287.16, 123.4);
    path_91.cubicTo(287.02, 122.88, 287.29, 122.52, 287.7, 122.39);
    path_91.cubicTo(288.14, 122.25, 288.39, 122.64, 288.51, 123.06);
    path_91.cubicTo(288.65, 123.52, 288.5, 123.87, 288.06, 123.97);
    path_91.lineTo(288.05, 123.97);
    path_91.close();

    Paint paint91Fill = Paint()..style = PaintingStyle.fill;
    paint91Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_91, paint91Fill);

    Path path_92 = Path();
    path_92.moveTo(59.23, 257.6);
    path_92.cubicTo(58.7, 257.29, 58.54, 256.74, 58.25, 256.29);
    path_92.cubicTo(58.06, 255.99, 57.8, 255.58, 58.31, 255.47);
    path_92.cubicTo(58.74, 255.38, 59.22, 255.47, 59.37, 256.04);
    path_92.cubicTo(59.52, 256.6, 59.52, 257.15, 59.2, 257.61);
    path_92.lineTo(59.23, 257.61);
    path_92.lineTo(59.23, 257.6);
    path_92.close();

    Paint paint92Fill = Paint()..style = PaintingStyle.fill;
    paint92Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_92, paint92Fill);

    Path path_93 = Path();
    path_93.moveTo(259.58, 251.79);
    path_93.cubicTo(259.55, 251.13, 260.23, 250.71, 260.42, 250.12);
    path_93.cubicTo(260.49, 249.89, 260.94, 249.68, 261.04, 249.99);
    path_93.cubicTo(261.2, 250.49, 261.27, 251.13, 260.71, 251.59);
    path_93.cubicTo(260.42, 251.83, 259.99, 252.03, 259.57, 251.8);
    path_93.lineTo(259.58, 251.79);
    path_93.close();

    Paint paint93Fill = Paint()..style = PaintingStyle.fill;
    paint93Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_93, paint93Fill);

    Path path_94 = Path();
    path_94.moveTo(305.32, 123.84);
    path_94.cubicTo(305.27, 123.64, 305.19, 123.44, 305.18, 123.24);
    path_94.cubicTo(305.14, 122.72, 304.78, 121.98, 305.35, 121.8);
    path_94.cubicTo(305.87, 121.64, 304.17, 122.82, 304.31, 123.34);
    path_94.cubicTo(304.52, 124.15, 304.04, 124.23, 303.59, 124.26);
    path_94.cubicTo(303.51, 124.26, 305.38, 123.82, 305.3, 123.81);
    path_94.lineTo(305.32, 123.83);
    path_94.lineTo(305.32, 123.84);
    path_94.close();

    Paint paint94Fill = Paint()..style = PaintingStyle.fill;
    paint94Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_94, paint94Fill);

    Path path_95 = Path();
    path_95.moveTo(145.04, 288.03);
    path_95.cubicTo(144.53, 287.9, 144.14, 287.64, 144.21, 287.12);
    path_95.cubicTo(144.26, 286.74, 144.61, 286.77, 144.92, 286.86);
    path_95.cubicTo(145.38, 286.99, 145.93, 287.09, 145.87, 287.66);
    path_95.cubicTo(145.83, 288.06, 145.4, 288.05, 145.03, 288.03);
    path_95.lineTo(145.04, 288.03);
    path_95.close();

    Paint paint95Fill = Paint()..style = PaintingStyle.fill;
    paint95Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_95, paint95Fill);

    Path path_96 = Path();
    path_96.moveTo(177.68, 304.28);
    path_96.cubicTo(177.85, 303.85, 178.21, 303.75, 178.63, 303.84);
    path_96.cubicTo(178.94, 303.91, 179.11, 304.22, 179.54, 304.08);
    path_96.cubicTo(179.86, 303.98, 180.29, 303.77, 180.32, 304.24);
    path_96.cubicTo(180.34, 304.69, 179.91, 304.9, 179.41, 304.87);
    path_96.cubicTo(178.75, 304.83, 178, 304.87, 177.69, 304.28);
    path_96.lineTo(177.68, 304.28);
    path_96.close();

    Paint paint96Fill = Paint()..style = PaintingStyle.fill;
    paint96Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_96, paint96Fill);

    Path path_97 = Path();
    path_97.moveTo(35.79, 102.85);
    path_97.cubicTo(35.38, 103.33, 35.07, 103.68, 34.76, 104.04);
    path_97.cubicTo(34.51, 104.32, 34.2, 104.57, 33.96, 104.17);
    path_97.cubicTo(33.76, 103.83, 33.78, 103.36, 34.2, 103.15);
    path_97.cubicTo(34.64, 102.93, 35.11, 102.71, 35.79, 102.86);
    path_97.lineTo(35.79, 102.85);
    path_97.close();

    Paint paint97Fill = Paint()..style = PaintingStyle.fill;
    paint97Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_97, paint97Fill);

    Path path_98 = Path();
    path_98.moveTo(266.36, 81.44);
    path_98.cubicTo(266.6, 81.77, 266.9, 82.2, 266.49, 82.43);
    path_98.cubicTo(266, 82.72, 265.75, 82.15, 265.53, 81.79);
    path_98.cubicTo(265.31, 81.43, 264.89, 80.91, 265.33, 80.65);
    path_98.cubicTo(265.9, 80.32, 266.04, 81.1, 266.36, 81.44);
    path_98.close();

    Paint paint98Fill = Paint()..style = PaintingStyle.fill;
    paint98Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_98, paint98Fill);

    Path path_99 = Path();
    path_99.moveTo(71.75, 284.39);
    path_99.cubicTo(71.31, 284.62, 70.81, 284.36, 70.35, 284.28);
    path_99.cubicTo(70, 284.23, 69.48, 284.22, 69.54, 283.69);
    path_99.cubicTo(69.58, 283.33, 69.95, 283.19, 70.35, 283.29);
    path_99.cubicTo(70.98, 283.44, 71.58, 283.68, 71.75, 284.38);
    path_99.lineTo(71.75, 284.39);
    path_99.close();

    Paint paint99Fill = Paint()..style = PaintingStyle.fill;
    paint99Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_99, paint99Fill);

    Path path_100 = Path();
    path_100.moveTo(207.63, 301.54);
    path_100.cubicTo(206.84, 301.67, 206.62, 301.32, 206.53, 300.85);
    path_100.cubicTo(206.48, 300.62, 206.38, 300.33, 206.8, 300.26);
    path_100.cubicTo(207.38, 300.16, 207.88, 300.26, 208.08, 300.73);
    path_100.cubicTo(208.22, 301.07, 208.02, 301.36, 207.64, 301.54);
    path_100.lineTo(207.63, 301.54);
    path_100.close();

    Paint paint100Fill = Paint()..style = PaintingStyle.fill;
    paint100Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_100, paint100Fill);

    Path path_101 = Path();
    path_101.moveTo(170.6, 302.1);
    path_101.cubicTo(170.78, 301.57, 171.37, 301.53, 171.86, 301.38);
    path_101.cubicTo(172.19, 301.28, 172.48, 301.38, 172.39, 301.71);
    path_101.cubicTo(172.26, 302.14, 172.03, 302.6, 171.39, 302.66);
    path_101.cubicTo(170.97, 302.7, 170.68, 302.48, 170.6, 302.1);
    path_101.close();

    Paint paint101Fill = Paint()..style = PaintingStyle.fill;
    paint101Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_101, paint101Fill);

    Path path_102 = Path();
    path_102.moveTo(97.56, 17.95);
    path_102.cubicTo(97.59, 18.59, 97.02, 18.8, 96.93, 19.18);
    path_102.cubicTo(96.87, 19.45, 96.68, 19.68, 96.33, 19.71);
    path_102.cubicTo(96.01, 19.74, 95.85, 19.53, 95.77, 19.29);
    path_102.cubicTo(95.69, 19.04, 95.77, 18.78, 96.07, 18.61);
    path_102.cubicTo(96.51, 18.38, 96.98, 18.2, 97.56, 17.95);
    path_102.close();

    Paint paint102Fill = Paint()..style = PaintingStyle.fill;
    paint102Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_102, paint102Fill);

    Path path_103 = Path();
    path_103.moveTo(126.66, 6.32);
    path_103.cubicTo(127.15, 6.25, 127.74, 6.21, 127.68, 6.48);
    path_103.cubicTo(127.52, 7.16, 126.55, 7.08, 125.95, 7.36);
    path_103.cubicTo(125.63, 7.51, 125.14, 7.32, 125.24, 6.99);
    path_103.cubicTo(125.42, 6.35, 126.28, 6.56, 126.66, 6.33);
    path_103.lineTo(126.66, 6.32);
    path_103.close();

    Paint paint103Fill = Paint()..style = PaintingStyle.fill;
    paint103Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_103, paint103Fill);

    Path path_104 = Path();
    path_104.moveTo(9.05004, 118.91);
    path_104.cubicTo(9.17004, 119.69, 9.04004, 120.31, 8.78004, 120.93);
    path_104.cubicTo(8.58004, 121.38, 8.29004, 121.51, 7.97004, 121.28);
    path_104.cubicTo(7.63004, 121.04, 7.80004, 120.65, 7.97004, 120.37);
    path_104.cubicTo(8.27004, 119.88, 8.65004, 119.44, 9.04004, 118.91);
    path_104.lineTo(9.05004, 118.91);
    path_104.close();

    Paint paint104Fill = Paint()..style = PaintingStyle.fill;
    paint104Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_104, paint104Fill);

    Path path_105 = Path();
    path_105.moveTo(276.61, 101.2);
    path_105.lineTo(276.5, 101.57);
    path_105.cubicTo(276.05, 101.16, 275.58, 100.77, 275.15, 100.35);
    path_105.cubicTo(274.93, 100.15, 274.88, 99.89, 275.1, 99.68);
    path_105.cubicTo(275.26, 99.54, 275.47, 99.49, 275.65, 99.69);
    path_105.cubicTo(276.04, 100.14, 276.67, 100.42, 276.61, 101.19);
    path_105.lineTo(276.61, 101.2);
    path_105.close();

    Paint paint105Fill = Paint()..style = PaintingStyle.fill;
    paint105Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_105, paint105Fill);

    Path path_106 = Path();
    path_106.moveTo(205.34, 14.12);
    path_106.cubicTo(204.95, 13.98, 204.67, 13.74, 204.8, 13.43);
    path_106.cubicTo(204.96, 13.05, 205.31, 12.74, 205.91, 12.91);
    path_106.cubicTo(206.3, 13.02, 206.36, 13.4, 206.32, 13.67);
    path_106.cubicTo(206.25, 14.1, 205.89, 14.23, 205.35, 14.12);
    path_106.lineTo(205.34, 14.12);
    path_106.close();

    Paint paint106Fill = Paint()..style = PaintingStyle.fill;
    paint106Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_106, paint106Fill);

    Path path_107 = Path();
    path_107.moveTo(248.48, 251.8);
    path_107.cubicTo(248.68, 251.39, 248.57, 250.83, 249.09, 250.56);
    path_107.cubicTo(249.31, 250.44, 249.47, 250.6, 249.6, 250.76);
    path_107.cubicTo(249.84, 251.05, 250.02, 251.4, 249.71, 251.77);
    path_107.cubicTo(249.28, 252.28, 248.89, 251.89, 248.49, 251.77);
    path_107.lineTo(248.49, 251.8);
    path_107.lineTo(248.48, 251.8);
    path_107.close();

    Paint paint107Fill = Paint()..style = PaintingStyle.fill;
    paint107Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_107, paint107Fill);

    Path path_108 = Path();
    path_108.moveTo(267.72, 242.85);
    path_108.cubicTo(267.6, 243.1, 267.52, 243.38, 267.36, 243.6);
    path_108.cubicTo(267.11, 243.94, 266.77, 244.1, 266.46, 243.85);
    path_108.cubicTo(266.24, 243.67, 266.11, 243.4, 266.24, 243.06);
    path_108.cubicTo(266.4, 242.65, 266.73, 242.69, 267.02, 242.71);
    path_108.cubicTo(267.26, 242.73, 267.49, 242.82, 267.72, 242.88);
    path_108.lineTo(267.72, 242.85);
    path_108.close();

    Paint paint108Fill = Paint()..style = PaintingStyle.fill;
    paint108Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_108, paint108Fill);

    Path path_109 = Path();
    path_109.moveTo(15.5, 196.74);
    path_109.cubicTo(15.94, 196.87, 16.36, 197.16, 16.62, 197.69);
    path_109.cubicTo(16.74, 197.95, 16.6, 198.2, 16.37, 198.14);
    path_109.cubicTo(15.95, 198.03, 15.47, 197.97, 15.22, 197.42);
    path_109.cubicTo(15.08, 197.12, 15.18, 196.87, 15.51, 196.74);
    path_109.lineTo(15.5, 196.74);
    path_109.close();

    Paint paint109Fill = Paint()..style = PaintingStyle.fill;
    paint109Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_109, paint109Fill);

    Path path_110 = Path();
    path_110.moveTo(199.61, 300.1);
    path_110.cubicTo(199.29, 300.16, 198.8, 300.33, 198.74, 299.98);
    path_110.cubicTo(198.65, 299.43, 199.33, 299.24, 199.8, 299.06);
    path_110.cubicTo(200.11, 298.95, 200.71, 298.79, 200.76, 299.22);
    path_110.cubicTo(200.82, 299.82, 200.03, 299.83, 199.62, 300.1);
    path_110.lineTo(199.61, 300.1);
    path_110.close();

    Paint paint110Fill = Paint()..style = PaintingStyle.fill;
    paint110Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_110, paint110Fill);

    Path path_111 = Path();
    path_111.moveTo(120.8, 306.93);
    path_111.cubicTo(120.94, 306.61, 121.22, 306.4, 121.69, 306.53);
    path_111.cubicTo(122.17, 306.66, 122.28, 306.99, 122.2, 307.32);
    path_111.cubicTo(122.11, 307.69, 121.78, 307.81, 121.31, 307.68);
    path_111.cubicTo(120.85, 307.55, 120.62, 307.3, 120.8, 306.93);
    path_111.close();

    Paint paint111Fill = Paint()..style = PaintingStyle.fill;
    paint111Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_111, paint111Fill);

    Path path_112 = Path();
    path_112.moveTo(248.48, 251.77);
    path_112.cubicTo(248.31, 251.97, 248.17, 252.22, 247.97, 252.36);
    path_112.cubicTo(247.66, 252.57, 247.31, 252.65, 247.04, 252.38);
    path_112.cubicTo(246.89, 252.23, 246.82, 252.03, 246.94, 251.82);
    path_112.cubicTo(247.16, 251.44, 247.54, 251.46, 247.86, 251.49);
    path_112.cubicTo(248.09, 251.52, 248.28, 251.69, 248.49, 251.8);
    path_112.lineTo(248.49, 251.77);
    path_112.lineTo(248.48, 251.77);
    path_112.close();

    Paint paint112Fill = Paint()..style = PaintingStyle.fill;
    paint112Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_112, paint112Fill);

    Path path_113 = Path();
    path_113.moveTo(275.8, 233.26);
    path_113.cubicTo(275.47, 232.92, 275.54, 232.54, 275.75, 232.13);
    path_113.cubicTo(275.89, 231.86, 276.06, 231.61, 276.35, 231.75);
    path_113.cubicTo(276.75, 231.95, 276.73, 232.34, 276.49, 232.77);
    path_113.cubicTo(276.33, 233.06, 276.12, 233.32, 275.8, 233.27);
    path_113.lineTo(275.8, 233.26);
    path_113.close();

    Paint paint113Fill = Paint()..style = PaintingStyle.fill;
    paint113Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_113, paint113Fill);

    Path path_114 = Path();
    path_114.moveTo(86.63, 269.26);
    path_114.cubicTo(86.97, 269.5, 87.01, 269.77, 86.79, 270.01);
    path_114.cubicTo(86.58, 270.24, 86.32, 270.51, 85.93, 270.31);
    path_114.cubicTo(85.61, 270.15, 85.55, 269.83, 85.68, 269.55);
    path_114.cubicTo(85.87, 269.17, 86.2201, 269.12, 86.6201, 269.26);
    path_114.lineTo(86.63, 269.26);
    path_114.close();

    Paint paint114Fill = Paint()..style = PaintingStyle.fill;
    paint114Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_114, paint114Fill);

    Path path_115 = Path();
    path_115.moveTo(73.35, 35.14);
    path_115.cubicTo(73.98, 34.59, 74.33, 33.96, 75.06, 34.23);
    path_115.cubicTo(75.3, 34.32, 75.42, 34.64, 75.19, 34.88);
    path_115.cubicTo(74.69, 35.4, 74.15, 35.23, 73.35, 35.14);
    path_115.close();

    Paint paint115Fill = Paint()..style = PaintingStyle.fill;
    paint115Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_115, paint115Fill);

    Path path_116 = Path();
    path_116.moveTo(130.98, 14.76);
    path_116.cubicTo(130.9, 15.09, 130.66, 15.28, 130.27, 15.28);
    path_116.cubicTo(129.82, 15.28, 129.36, 15.18, 129.4, 14.72);
    path_116.cubicTo(129.43, 14.37, 129.82, 14.29, 130.18, 14.28);
    path_116.cubicTo(130.6, 14.27, 130.92, 14.39, 130.99, 14.76);
    path_116.lineTo(130.98, 14.76);
    path_116.close();

    Paint paint116Fill = Paint()..style = PaintingStyle.fill;
    paint116Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_116, paint116Fill);

    Path path_117 = Path();
    path_117.moveTo(78.03, 283.74);
    path_117.cubicTo(77.28, 283.71, 76.69, 284.02, 76.09, 283.46);
    path_117.cubicTo(75.83, 283.21, 76.1701, 283.05, 76.4101, 282.96);
    path_117.cubicTo(77.0701, 282.72, 77.51, 283.03, 78.02, 283.74);
    path_117.lineTo(78.03, 283.74);
    path_117.close();

    Paint paint117Fill = Paint()..style = PaintingStyle.fill;
    paint117Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_117, paint117Fill);

    Path path_118 = Path();
    path_118.moveTo(2.21002, 128.05);
    path_118.cubicTo(2.27002, 128.25, 2.33002, 128.35, 2.32002, 128.43);
    path_118.cubicTo(2.15002, 129.11, 2.10002, 129.91, 1.47002, 130.25);
    path_118.cubicTo(1.31002, 130.33, 1.17002, 130.1, 1.19002, 129.89);
    path_118.cubicTo(1.25002, 129.03, 1.67002, 128.51, 2.22002, 128.06);
    path_118.lineTo(2.21002, 128.05);
    path_118.close();

    Paint paint118Fill = Paint()..style = PaintingStyle.fill;
    paint118Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_118, paint118Fill);

    Path path_119 = Path();
    path_119.moveTo(214.19, 16.58);
    path_119.cubicTo(213.46, 16.13, 213.32, 14.4, 213.05, 13.69);
    path_119.cubicTo(212.96, 13.45, 213.44, 13.29, 213.8, 13.33);
    path_119.cubicTo(214.68, 13.43, 214.12, 15.78, 214.19, 16.59);
    path_119.lineTo(214.19, 16.58);
    path_119.close();

    Paint paint119Fill = Paint()..style = PaintingStyle.fill;
    paint119Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_119, paint119Fill);

    Path path_120 = Path();
    path_120.moveTo(264.41, 243.23);
    path_120.cubicTo(264.66, 242.89, 264.93, 242.57, 265.26, 242.85);
    path_120.cubicTo(265.6, 243.13, 265.33, 243.49, 265.05, 243.74);
    path_120.cubicTo(264.79, 243.97, 264.57, 244.58, 264.13, 244.21);
    path_120.cubicTo(263.68, 243.83, 264.3, 243.55, 264.4, 243.24);
    path_120.lineTo(264.41, 243.23);
    path_120.close();

    Paint paint120Fill = Paint()..style = PaintingStyle.fill;
    paint120Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_120, paint120Fill);

    Path path_121 = Path();
    path_121.moveTo(301.72, 105.56);
    path_121.cubicTo(301.87, 105.95, 301.74, 106.16, 301.49, 106.23);
    path_121.cubicTo(301.15, 106.33, 300.78, 106.39, 300.51, 105.84);
    path_121.cubicTo(300.3, 105.4, 300.46, 105.16, 300.75, 105.04);
    path_121.cubicTo(301.14, 104.87, 301.45, 105.12, 301.72, 105.56);
    path_121.close();

    Paint paint121Fill = Paint()..style = PaintingStyle.fill;
    paint121Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_121, paint121Fill);

    Path path_122 = Path();
    path_122.moveTo(19.0701, 213.37);
    path_122.cubicTo(18.7601, 213.48, 18.6101, 213.29, 18.4901, 213.07);
    path_122.cubicTo(18.1401, 212.43, 18.5201, 212.07, 18.7501, 211.69);
    path_122.cubicTo(18.8701, 211.5, 19.2201, 211.7, 19.2301, 211.93);
    path_122.cubicTo(19.2301, 212.43, 19.1301, 212.92, 19.0701, 213.37);
    path_122.close();

    Paint paint122Fill = Paint()..style = PaintingStyle.fill;
    paint122Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_122, paint122Fill);

    Path path_123 = Path();
    path_123.moveTo(298.05, 157.06);
    path_123.cubicTo(297.79, 157.05, 297.57, 156.95, 297.57, 156.58);
    path_123.cubicTo(297.57, 156.13, 297.76, 155.87, 298.15, 155.91);
    path_123.cubicTo(298.42, 155.94, 298.76, 156.01, 298.73, 156.44);
    path_123.cubicTo(298.7, 156.88, 298.38, 157.02, 298.05, 157.06);
    path_123.close();

    Paint paint123Fill = Paint()..style = PaintingStyle.fill;
    paint123Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_123, paint123Fill);

    Path path_124 = Path();
    path_124.moveTo(115.63, 304.16);
    path_124.cubicTo(115.98, 304.31, 116.06, 304.47, 115.93, 304.68);
    path_124.cubicTo(115.57, 305.25, 114.86, 304.8, 114.32, 304.83);
    path_124.cubicTo(114.04, 304.85, 113.81, 304.54, 114.04, 304.42);
    path_124.cubicTo(114.51, 304.18, 115.09, 304.13, 115.63, 304.16);
    path_124.close();

    Paint paint124Fill = Paint()..style = PaintingStyle.fill;
    paint124Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_124, paint124Fill);

    Path path_125 = Path();
    path_125.moveTo(227.7, 44.38);
    path_125.cubicTo(227.28, 44.1, 227.32, 43.7, 227.37, 43.36);
    path_125.cubicTo(227.41, 43.12, 227.76, 43.2, 227.91, 43.35);
    path_125.cubicTo(228.23, 43.64, 228.65, 44, 228.51, 44.4);
    path_125.cubicTo(228.41, 44.68, 227.99, 44.51, 227.69, 44.38);
    path_125.lineTo(227.7, 44.38);
    path_125.close();

    Paint paint125Fill = Paint()..style = PaintingStyle.fill;
    paint125Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_125, paint125Fill);

    Path path_126 = Path();
    path_126.moveTo(18.66, 88.91);
    path_126.cubicTo(18.99, 89.16, 18.89, 89.53, 18.66, 89.92);
    path_126.cubicTo(18.49, 90.22, 18.28, 90.72, 17.98, 90.48);
    path_126.cubicTo(17.69, 90.25, 17.79, 89.71, 17.98, 89.26);
    path_126.cubicTo(18.12, 88.94, 18.38, 88.82, 18.65, 88.9);
    path_126.lineTo(18.66, 88.91);
    path_126.close();

    Paint paint126Fill = Paint()..style = PaintingStyle.fill;
    paint126Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_126, paint126Fill);

    Path path_127 = Path();
    path_127.moveTo(3.54003, 185.56);
    path_127.cubicTo(3.89003, 185.63, 4.08003, 185.89, 4.11003, 186.29);
    path_127.cubicTo(4.14003, 186.77, 3.94003, 187.06, 3.58003, 187.09);
    path_127.cubicTo(3.29003, 187.12, 3.15003, 186.82, 3.13003, 186.48);
    path_127.cubicTo(3.10003, 186.04, 3.19003, 185.68, 3.53003, 185.56);
    path_127.lineTo(3.54003, 185.56);
    path_127.close();

    Paint paint127Fill = Paint()..style = PaintingStyle.fill;
    paint127Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_127, paint127Fill);

    Path path_128 = Path();
    path_128.moveTo(200.39, 11.09);
    path_128.cubicTo(200.25, 11.32, 200.03, 11.47, 199.67, 11.34);
    path_128.cubicTo(199.18, 11.15, 199.14, 10.81, 199.24, 10.49);
    path_128.cubicTo(199.32, 10.24, 199.59, 10.1, 199.94, 10.25);
    path_128.cubicTo(200.39, 10.44, 200.53, 10.74, 200.39, 11.09);
    path_128.close();

    Paint paint128Fill = Paint()..style = PaintingStyle.fill;
    paint128Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_128, paint128Fill);

    Path path_129 = Path();
    path_129.moveTo(74.66, 262.71);
    path_129.cubicTo(74.87, 262.5, 75.07, 262.62, 75.2, 262.8);
    path_129.cubicTo(75.5, 263.2, 75.46, 263.6, 75.27, 263.97);
    path_129.cubicTo(75.16, 264.19, 74.93, 264.2, 74.76, 263.99);
    path_129.cubicTo(74.42, 263.56, 74.5, 263.12, 74.66, 262.71);
    path_129.close();

    Paint paint129Fill = Paint()..style = PaintingStyle.fill;
    paint129Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_129, paint129Fill);

    Path path_130 = Path();
    path_130.moveTo(135.9, 295.66);
    path_130.cubicTo(136.01, 295.27, 136.35, 295.27, 136.68, 295.32);
    path_130.cubicTo(136.98, 295.37, 137.46, 295.35, 137.36, 295.74);
    path_130.cubicTo(137.28, 296.09, 136.81, 296.11, 136.43, 296.1);
    path_130.cubicTo(136.1, 296.09, 135.94, 295.91, 135.9, 295.66);
    path_130.close();

    Paint paint130Fill = Paint()..style = PaintingStyle.fill;
    paint130Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_130, paint130Fill);

    Path path_131 = Path();
    path_131.moveTo(82.01, 294.65);
    path_131.lineTo(81.98, 294.65);
    path_131.cubicTo(82.37, 294.82, 82.75, 294.99, 83.14, 295.14);
    path_131.cubicTo(83.49, 295.27, 83.84, 295.41, 83.93, 295.77);
    path_131.cubicTo(83.98, 295.96, 83.86, 296.07, 83.65, 296.1);
    path_131.cubicTo(83.29, 296.14, 82.96, 296.07, 82.67, 295.78);
    path_131.cubicTo(82.34, 295.44, 81.76, 295.16, 82.01, 294.66);
    path_131.lineTo(82.01, 294.65);
    path_131.close();

    Paint paint131Fill = Paint()..style = PaintingStyle.fill;
    paint131Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_131, paint131Fill);

    Path path_132 = Path();
    path_132.moveTo(294.97, 196.06);
    path_132.cubicTo(294.69, 195.85, 294.53, 195.56, 294.64, 195.14);
    path_132.cubicTo(294.73, 194.81, 295, 194.72, 295.24, 194.77);
    path_132.cubicTo(295.59, 194.84, 295.78, 195.12, 295.67, 195.57);
    path_132.cubicTo(295.57, 195.95, 295.26, 196.03, 294.97, 196.07);
    path_132.lineTo(294.97, 196.06);
    path_132.close();

    Paint paint132Fill = Paint()..style = PaintingStyle.fill;
    paint132Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_132, paint132Fill);

    Path path_133 = Path();
    path_133.moveTo(12.76, 208.96);
    path_133.cubicTo(12.57, 208.49, 12.52, 208.13, 12.78, 208.04);
    path_133.cubicTo(13.15, 207.91, 13.38, 208.3, 13.55, 208.68);
    path_133.cubicTo(13.68, 208.99, 13.67, 209.32, 13.42, 209.44);
    path_133.cubicTo(13, 209.64, 12.87, 209.16, 12.76, 208.96);
    path_133.close();

    Paint paint133Fill = Paint()..style = PaintingStyle.fill;
    paint133Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_133, paint133Fill);

    Path path_134 = Path();
    path_134.moveTo(114.02, 284.47);
    path_134.cubicTo(114.13, 284.12, 114.37, 284.07, 114.65, 284.16);
    path_134.cubicTo(115.08, 284.29, 115.14, 284.61, 115.11, 284.95);
    path_134.cubicTo(115.08, 285.2, 114.99, 285.46, 114.64, 285.32);
    path_134.cubicTo(114.22, 285.15, 114.1, 284.79, 114.03, 284.47);
    path_134.lineTo(114.02, 284.47);
    path_134.close();

    Paint paint134Fill = Paint()..style = PaintingStyle.fill;
    paint134Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_134, paint134Fill);

    Path path_135 = Path();
    path_135.moveTo(291.25, 196.58);
    path_135.cubicTo(290.98, 196.35, 290.84, 196.03, 291.02, 195.62);
    path_135.cubicTo(291.21, 195.21, 291.55, 195.09, 291.87, 195.24);
    path_135.cubicTo(292.23, 195.41, 292.03, 195.81, 291.93, 196.1);
    path_135.cubicTo(291.81, 196.43, 291.62, 196.71, 291.25, 196.57);
    path_135.lineTo(291.25, 196.58);
    path_135.close();

    Paint paint135Fill = Paint()..style = PaintingStyle.fill;
    paint135Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_135, paint135Fill);

    Path path_136 = Path();
    path_136.moveTo(87.79, 43.44);
    path_136.cubicTo(87.53, 44, 87.19, 44.38, 86.59, 44.15);
    path_136.cubicTo(86.47, 44.1, 86.37, 43.78, 86.43, 43.64);
    path_136.cubicTo(86.79, 42.87, 87.32, 43.68, 87.79, 43.44);
    path_136.close();

    Paint paint136Fill = Paint()..style = PaintingStyle.fill;
    paint136Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_136, paint136Fill);

    Path path_137 = Path();
    path_137.moveTo(249.56, 36.01);
    path_137.cubicTo(249.73, 35.9, 249.89, 35.78, 250.08, 35.69);
    path_137.cubicTo(250.45, 35.52, 250.84, 35.25, 251.34, 35.79);
    path_137.cubicTo(251.5, 35.96, 251.67, 36.33, 251.6, 36.41);
    path_137.cubicTo(251.31, 36.74, 250.81, 36.37, 250.41, 36.29);
    path_137.cubicTo(250.13, 36.24, 249.84, 36.09, 249.55, 35.98);
    path_137.lineTo(249.55, 36.01);
    path_137.lineTo(249.56, 36.01);
    path_137.close();

    Paint paint137Fill = Paint()..style = PaintingStyle.fill;
    paint137Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_137, paint137Fill);

    Path path_138 = Path();
    path_138.moveTo(3.13002, 122.06);
    path_138.cubicTo(3.27002, 122.14, 3.32002, 122.14, 3.34002, 122.17);
    path_138.cubicTo(3.58002, 122.9, 3.34002, 123.58, 3.01002, 124.24);
    path_138.cubicTo(2.98002, 124.3, 2.72002, 124.3, 2.70002, 124.24);
    path_138.cubicTo(2.44002, 123.42, 3.15002, 122.85, 3.13002, 122.05);
    path_138.lineTo(3.13002, 122.06);
    path_138.close();

    Paint paint138Fill = Paint()..style = PaintingStyle.fill;
    paint138Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_138, paint138Fill);

    Path path_139 = Path();
    path_139.moveTo(199.86, 27.85);
    path_139.cubicTo(199.52, 28.17, 199.07, 28.12, 198.62, 27.97);
    path_139.cubicTo(198.43, 27.91, 198.29, 27.69, 198.39, 27.58);
    path_139.cubicTo(198.69, 27.24, 199.17, 27.26, 199.64, 27.37);
    path_139.cubicTo(199.91, 27.43, 200.01, 27.62, 199.86, 27.86);
    path_139.lineTo(199.86, 27.85);
    path_139.close();

    Paint paint139Fill = Paint()..style = PaintingStyle.fill;
    paint139Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_139, paint139Fill);

    Path path_140 = Path();
    path_140.moveTo(132.26, 308.65);
    path_140.cubicTo(131.88, 308.55, 131.57, 308.35, 131.7, 308.04);
    path_140.cubicTo(131.82, 307.73, 132.21, 307.73, 132.57, 307.82);
    path_140.cubicTo(132.87, 307.9, 133.13, 308.07, 133.07, 308.34);
    path_140.cubicTo(132.99, 308.69, 132.62, 308.69, 132.26, 308.66);
    path_140.lineTo(132.26, 308.65);
    path_140.close();

    Paint paint140Fill = Paint()..style = PaintingStyle.fill;
    paint140Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_140, paint140Fill);

    Path path_141 = Path();
    path_141.moveTo(29.79, 193.8);
    path_141.cubicTo(29.57, 193.46, 29.47, 193.37, 29.44, 193.25);
    path_141.cubicTo(29.31, 192.81, 28.69, 192.62, 28.86, 192.04);
    path_141.cubicTo(28.88, 191.98, 29.09, 191.94, 29.16, 191.99);
    path_141.cubicTo(29.67, 192.32, 29.8, 192.82, 29.79, 193.79);
    path_141.lineTo(29.79, 193.8);
    path_141.close();

    Paint paint141Fill = Paint()..style = PaintingStyle.fill;
    paint141Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_141, paint141Fill);

    Path path_142 = Path();
    path_142.moveTo(204.19, 295.19);
    path_142.cubicTo(204.35, 294.89, 204.03, 294.44, 204.62, 294.26);
    path_142.cubicTo(204.9, 294.18, 205.18, 294.37, 205.24, 294.61);
    path_142.cubicTo(205.32, 294.96, 205.08, 295.26, 204.69, 295.43);
    path_142.cubicTo(204.41, 295.55, 204.23, 295.45, 204.2, 295.18);
    path_142.lineTo(204.19, 295.19);
    path_142.close();

    Paint paint142Fill = Paint()..style = PaintingStyle.fill;
    paint142Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_142, paint142Fill);

    Path path_143 = Path();
    path_143.moveTo(309.58, 158.03);
    path_143.cubicTo(309.25, 157.99, 309.08, 157.74, 309.06, 157.32);
    path_143.cubicTo(309.04, 156.98, 309.14, 156.67, 309.42, 156.66);
    path_143.cubicTo(309.8, 156.64, 310.01, 156.97, 310.02, 157.45);
    path_143.cubicTo(310.03, 157.81, 309.86, 158.02, 309.58, 158.04);
    path_143.lineTo(309.58, 158.03);
    path_143.close();

    Paint paint143Fill = Paint()..style = PaintingStyle.fill;
    paint143Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_143, paint143Fill);

    Path path_144 = Path();
    path_144.moveTo(57.12, 44.91);
    path_144.cubicTo(57.4, 44.7, 57.72, 44.52, 57.93, 44.83);
    path_144.cubicTo(58.09, 45.07, 57.93, 45.33, 57.68, 45.54);
    path_144.cubicTo(57.39, 45.77, 57.07, 45.93, 56.85, 45.64);
    path_144.cubicTo(56.67, 45.39, 56.88, 45.15, 57.13, 44.92);
    path_144.lineTo(57.12, 44.91);
    path_144.close();

    Paint paint144Fill = Paint()..style = PaintingStyle.fill;
    paint144Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_144, paint144Fill);

    Path path_145 = Path();
    path_145.moveTo(206.34, 16.05);
    path_145.cubicTo(205.95, 15.88, 205.81, 15.63, 205.93, 15.33);
    path_145.cubicTo(206.01, 15.12, 206.23, 15.03, 206.51, 15.14);
    path_145.cubicTo(206.87, 15.28, 207.14, 15.52, 207.05, 15.83);
    path_145.cubicTo(206.97, 16.1, 206.68, 16.14, 206.34, 16.05);
    path_145.close();

    Paint paint145Fill = Paint()..style = PaintingStyle.fill;
    paint145Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_145, paint145Fill);

    Path path_146 = Path();
    path_146.moveTo(146.43, 289.98);
    path_146.cubicTo(146.58, 290.46, 146.85, 290.92, 146.46, 291.33);
    path_146.cubicTo(146.42, 291.37, 146.15, 291.34, 146.12, 291.29);
    path_146.cubicTo(145.86, 290.79, 145.99, 290.35, 146.43, 289.98);
    path_146.close();

    Paint paint146Fill = Paint()..style = PaintingStyle.fill;
    paint146Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_146, paint146Fill);

    Path path_147 = Path();
    path_147.moveTo(65.31, 253.81);
    path_147.cubicTo(65.09, 253.54, 65, 253.26, 65.25, 253.02);
    path_147.cubicTo(65.41, 252.87, 65.64, 252.91, 65.81, 253.09);
    path_147.cubicTo(66.06, 253.35, 66.08, 253.64, 65.86, 253.87);
    path_147.cubicTo(65.7, 254.03, 65.49, 253.99, 65.31, 253.8);
    path_147.lineTo(65.31, 253.81);
    path_147.close();

    Paint paint147Fill = Paint()..style = PaintingStyle.fill;
    paint147Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_147, paint147Fill);

    Path path_148 = Path();
    path_148.moveTo(73.4, 38.98);
    path_148.cubicTo(73.6, 38.84, 73.79, 38.68, 73.99, 38.55);
    path_148.cubicTo(74.35, 38.31, 74.62, 38.41, 74.8, 38.66);
    path_148.cubicTo(74.92, 38.83, 74.94, 39.04, 74.75, 39.24);
    path_148.cubicTo(74.44, 39.55, 74.15, 39.42, 73.89, 39.3);
    path_148.cubicTo(73.71, 39.21, 73.56, 39.07, 73.4, 38.95);
    path_148.lineTo(73.4, 38.98);
    path_148.close();

    Paint paint148Fill = Paint()..style = PaintingStyle.fill;
    paint148Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_148, paint148Fill);

    Path path_149 = Path();
    path_149.moveTo(287.41, 120.7);
    path_149.lineTo(287.56, 120.32);
    path_149.cubicTo(287.96, 120.4, 288.36, 120.48, 288.77, 120.56);
    path_149.cubicTo(288.28, 121.65, 288.24, 121.64, 287.41, 120.7);
    path_149.close();

    Paint paint149Fill = Paint()..style = PaintingStyle.fill;
    paint149Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_149, paint149Fill);

    Path path_150 = Path();
    path_150.moveTo(281.42, 103.98);
    path_150.cubicTo(280.81, 104.03, 280.27, 103.88, 279.95, 103.18);
    path_150.cubicTo(279.91, 103.1, 280.01, 102.86, 280.05, 102.86);
    path_150.cubicTo(280.72, 102.88, 281.03, 103.5, 281.41, 104);
    path_150.lineTo(281.41, 103.98);
    path_150.lineTo(281.42, 103.98);
    path_150.close();

    Paint paint150Fill = Paint()..style = PaintingStyle.fill;
    paint150Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_150, paint150Fill);

    Path path_151 = Path();
    path_151.moveTo(30.71, 196.85);
    path_151.cubicTo(30.98, 196.8, 31.17, 196.93, 31.25, 197.22);
    path_151.cubicTo(31.35, 197.57, 31.16, 197.79, 30.91, 197.91);
    path_151.cubicTo(30.65, 198.04, 30.45, 197.89, 30.4, 197.57);
    path_151.cubicTo(30.35, 197.26, 30.4, 196.98, 30.71, 196.84);
    path_151.lineTo(30.71, 196.85);
    path_151.close();

    Paint paint151Fill = Paint()..style = PaintingStyle.fill;
    paint151Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_151, paint151Fill);

    Path path_152 = Path();
    path_152.moveTo(46.86, 239.12);
    path_152.cubicTo(47.24, 239.09, 47.5, 239.17, 47.63, 239.45);
    path_152.cubicTo(47.77, 239.78, 47.88, 240.16, 47.59, 240.4);
    path_152.cubicTo(47.42, 240.53, 47.15, 240.49, 47.07, 240.21);
    path_152.cubicTo(46.96, 239.85, 46.93, 239.47, 46.87, 239.12);
    path_152.lineTo(46.86, 239.12);
    path_152.close();

    Paint paint152Fill = Paint()..style = PaintingStyle.fill;
    paint152Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_152, paint152Fill);

    Path path_153 = Path();
    path_153.moveTo(69.8301, 56.78);
    path_153.cubicTo(70.1101, 56.58, 70.3301, 56.65, 70.4601, 56.9);
    path_153.cubicTo(70.5901, 57.14, 70.5201, 57.4, 70.2701, 57.58);
    path_153.cubicTo(70.0101, 57.76, 69.7501, 57.72, 69.6201, 57.48);
    path_153.cubicTo(69.4801, 57.24, 69.6301, 57, 69.8401, 56.79);
    path_153.lineTo(69.8301, 56.78);
    path_153.close();

    Paint paint153Fill = Paint()..style = PaintingStyle.fill;
    paint153Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_153, paint153Fill);

    Path path_154 = Path();
    path_154.moveTo(196.66, 31.11);
    path_154.cubicTo(196.82, 30.87, 197.07, 30.83, 197.34, 30.94);
    path_154.cubicTo(197.61, 31.05, 197.79, 31.28, 197.72, 31.54);
    path_154.cubicTo(197.62, 31.89, 197.32, 31.71, 197.08, 31.63);
    path_154.cubicTo(196.83, 31.54, 196.55, 31.44, 196.66, 31.12);
    path_154.lineTo(196.66, 31.11);
    path_154.close();

    Paint paint154Fill = Paint()..style = PaintingStyle.fill;
    paint154Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_154, paint154Fill);

    Path path_155 = Path();
    path_155.moveTo(9.58003, 116.43);
    path_155.cubicTo(9.90003, 116.59, 10.12, 116.83, 10.02, 117.31);
    path_155.cubicTo(9.96003, 117.61, 9.76003, 117.74, 9.55003, 117.68);
    path_155.cubicTo(9.19003, 117.57, 9.16003, 117.15, 9.16003, 116.76);
    path_155.cubicTo(9.16003, 116.36, 9.40003, 116.43, 9.58003, 116.44);
    path_155.lineTo(9.58003, 116.43);
    path_155.close();

    Paint paint155Fill = Paint()..style = PaintingStyle.fill;
    paint155Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_155, paint155Fill);

    Path path_156 = Path();
    path_156.moveTo(129.41, 17.24);
    path_156.cubicTo(129.7, 17.22, 130.05, 17.16, 130.09, 17.49);
    path_156.cubicTo(130.12, 17.77, 129.88, 17.95, 129.54, 17.97);
    path_156.cubicTo(129.23, 17.99, 128.95, 17.89, 128.91, 17.61);
    path_156.cubicTo(128.88, 17.35, 129.16, 17.3, 129.4, 17.25);
    path_156.lineTo(129.41, 17.24);
    path_156.close();

    Paint paint156Fill = Paint()..style = PaintingStyle.fill;
    paint156Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_156, paint156Fill);

    Path path_157 = Path();
    path_157.moveTo(265.27, 245.97);
    path_157.cubicTo(265.02, 245.74, 265.1, 245.44, 265.3, 245.14);
    path_157.cubicTo(265.45, 244.9, 265.67, 244.82, 265.85, 244.99);
    path_157.cubicTo(266.07, 245.21, 266.1, 245.51, 265.87, 245.83);
    path_157.cubicTo(265.7, 246.06, 265.49, 246.09, 265.28, 245.97);
    path_157.lineTo(265.27, 245.97);
    path_157.close();

    Paint paint157Fill = Paint()..style = PaintingStyle.fill;
    paint157Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_157, paint157Fill);

    Path path_158 = Path();
    path_158.moveTo(267.85, 244.91);
    path_158.cubicTo(267.68, 244.62, 267.77, 244.33, 268.02, 244.06);
    path_158.cubicTo(268.2, 243.87, 268.42, 243.74, 268.56, 243.96);
    path_158.cubicTo(268.73, 244.23, 268.58, 244.56, 268.38, 244.84);
    path_158.cubicTo(268.21, 245.08, 268.01, 245.1, 267.84, 244.91);
    path_158.lineTo(267.85, 244.91);
    path_158.close();

    Paint paint158Fill = Paint()..style = PaintingStyle.fill;
    paint158Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_158, paint158Fill);

    Path path_159 = Path();
    path_159.moveTo(271.63, 237.2);
    path_159.cubicTo(271.35, 236.96, 271.32, 236.7, 271.56, 236.37);
    path_159.cubicTo(271.74, 236.12, 271.92, 236.17, 272.1, 236.31);
    path_159.cubicTo(272.39, 236.56, 272.44, 236.89, 272.14, 237.25);
    path_159.cubicTo(271.92, 237.51, 271.76, 237.29, 271.63, 237.21);
    path_159.lineTo(271.63, 237.2);
    path_159.close();

    Paint paint159Fill = Paint()..style = PaintingStyle.fill;
    paint159Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_159, paint159Fill);

    Path path_160 = Path();
    path_160.moveTo(88.14, 270.39);
    path_160.cubicTo(88.63, 270.4, 89.06, 270.45, 89.06, 271.01);
    path_160.cubicTo(89.06, 271.25, 88.78, 271.53, 88.59, 271.44);
    path_160.cubicTo(88.17, 271.23, 88.17, 270.79, 88.14, 270.39);
    path_160.close();

    Paint paint160Fill = Paint()..style = PaintingStyle.fill;
    paint160Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_160, paint160Fill);

    Path path_161 = Path();
    path_161.moveTo(249.64, 253.92);
    path_161.cubicTo(249.44, 253.71, 249.6, 253.49, 249.79, 253.29);
    path_161.cubicTo(249.97, 253.12, 250.19, 253.06, 250.34, 253.24);
    path_161.cubicTo(250.5, 253.45, 250.48, 253.7, 250.24, 253.91);
    path_161.cubicTo(250.05, 254.08, 249.84, 254.04, 249.64, 253.91);
    path_161.lineTo(249.64, 253.92);
    path_161.close();

    Paint paint161Fill = Paint()..style = PaintingStyle.fill;
    paint161Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_161, paint161Fill);

    Path path_162 = Path();
    path_162.moveTo(43.7501, 67.4);
    path_162.cubicTo(43.5601, 67.58, 43.3401, 67.67, 43.2001, 67.47);
    path_162.cubicTo(43.0301, 67.23, 42.9901, 66.9, 43.2301, 66.62);
    path_162.cubicTo(43.4101, 66.41, 43.6201, 66.59, 43.7601, 66.71);
    path_162.cubicTo(43.9701, 66.89, 43.9701, 67.13, 43.7501, 67.4);
    path_162.close();

    Paint paint162Fill = Paint()..style = PaintingStyle.fill;
    paint162Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_162, paint162Fill);

    Path path_163 = Path();
    path_163.moveTo(36.13, 254.45);
    path_163.cubicTo(36.41, 254.28, 36.62, 254.58, 36.83, 254.77);
    path_163.cubicTo(37.03, 254.95, 37.18, 255.2, 37.04, 255.4);
    path_163.cubicTo(36.86, 255.65, 36.58, 255.51, 36.36, 255.26);
    path_163.cubicTo(36.15, 255.02, 36.02, 254.74, 36.12, 254.46);
    path_163.lineTo(36.13, 254.45);
    path_163.close();

    Paint paint163Fill = Paint()..style = PaintingStyle.fill;
    paint163Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_163, paint163Fill);

    Path path_164 = Path();
    path_164.moveTo(240.47, 259.6);
    path_164.cubicTo(240.32, 259.69, 240.16, 259.78, 240.02, 259.88);
    path_164.cubicTo(239.72, 260.09, 239.44, 260.32, 239.15, 259.98);
    path_164.cubicTo(239.02, 259.82, 238.9, 259.65, 239.1, 259.45);
    path_164.cubicTo(239.37, 259.19, 239.66, 259.31, 239.92, 259.39);
    path_164.cubicTo(240.11, 259.45, 240.28, 259.55, 240.47, 259.63);
    path_164.lineTo(240.47, 259.61);
    path_164.lineTo(240.47, 259.6);
    path_164.close();

    Paint paint164Fill = Paint()..style = PaintingStyle.fill;
    paint164Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_164, paint164Fill);

    Path path_165 = Path();
    path_165.moveTo(139.15, 5.76);
    path_165.cubicTo(139.12, 6.02, 138.93, 6.08, 138.72, 6.07);
    path_165.cubicTo(138.34, 6.05, 138.07, 5.89, 138.01, 5.6);
    path_165.cubicTo(137.97, 5.4, 138.19, 5.32, 138.41, 5.34);
    path_165.cubicTo(138.78, 5.37, 139.01, 5.56, 139.15, 5.76);
    path_165.close();

    Paint paint165Fill = Paint()..style = PaintingStyle.fill;
    paint165Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_165, paint165Fill);

    Path path_166 = Path();
    path_166.moveTo(151.84, 2.84001);
    path_166.cubicTo(151.32, 3.14001, 150.94, 3.36001, 150.47, 3.04001);
    path_166.cubicTo(150.41, 3.00001, 150.39, 2.87001, 150.44, 2.83001);
    path_166.cubicTo(150.83, 2.48001, 151.26, 2.57001, 151.85, 2.84001);
    path_166.lineTo(151.84, 2.84001);
    path_166.close();

    Paint paint166Fill = Paint()..style = PaintingStyle.fill;
    paint166Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_166, paint166Fill);

    Path path_167 = Path();
    path_167.moveTo(260.36, 247.2);
    path_167.cubicTo(260.26, 247.64, 260.33, 248.15, 259.79, 248.34);
    path_167.cubicTo(259.72, 248.36, 259.55, 248.22, 259.54, 248.12);
    path_167.cubicTo(259.47, 247.55, 259.92, 247.38, 260.36, 247.2);
    path_167.close();

    Paint paint167Fill = Paint()..style = PaintingStyle.fill;
    paint167Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_167, paint167Fill);

    Path path_168 = Path();
    path_168.moveTo(117.19, 282.64);
    path_168.cubicTo(117.1, 282.6, 116.87, 282.46, 117.08, 282.17);
    path_168.cubicTo(117.24, 281.94, 117.51, 281.91, 117.78, 282.01);
    path_168.cubicTo(118.07, 282.12, 118.19, 282.34, 118.06, 282.59);
    path_168.cubicTo(117.92, 282.87, 117.64, 282.8, 117.2, 282.63);
    path_168.lineTo(117.19, 282.64);
    path_168.close();

    Paint paint168Fill = Paint()..style = PaintingStyle.fill;
    paint168Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_168, paint168Fill);

    Path path_169 = Path();
    path_169.moveTo(302.71, 112.54);
    path_169.cubicTo(302.38, 112.54, 302.06, 112.49, 301.84, 112.08);
    path_169.cubicTo(301.76, 111.94, 301.77, 111.69, 301.81, 111.54);
    path_169.cubicTo(301.89, 111.31, 302.09, 111.26, 302.31, 111.3);
    path_169.cubicTo(302.62, 111.35, 302.59, 111.56, 302.58, 111.84);
    path_169.cubicTo(302.58, 112.06, 302.66, 112.32, 302.71, 112.57);
    path_169.lineTo(302.71, 112.55);
    path_169.lineTo(302.71, 112.54);
    path_169.close();

    Paint paint169Fill = Paint()..style = PaintingStyle.fill;
    paint169Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_169, paint169Fill);

    Path path_170 = Path();
    path_170.moveTo(266.28, 256);
    path_170.cubicTo(266.04, 256.28, 265.83, 256.38, 265.65, 256.25);
    path_170.cubicTo(265.42, 256.09, 265.44, 255.83, 265.67, 255.57);
    path_170.cubicTo(265.84, 255.38, 266.06, 255.24, 266.25, 255.37);
    path_170.cubicTo(266.49, 255.53, 266.37, 255.81, 266.28, 256.01);
    path_170.lineTo(266.28, 256);
    path_170.close();

    Paint paint170Fill = Paint()..style = PaintingStyle.fill;
    paint170Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_170, paint170Fill);

    Path path_171 = Path();
    path_171.moveTo(170.12, 307.73);
    path_171.cubicTo(170.02, 307.58, 169.83, 307.43, 169.81, 307.27);
    path_171.cubicTo(169.76, 306.94, 170.05, 306.77, 170.43, 306.73);
    path_171.cubicTo(170.72, 306.69, 170.88, 306.84, 170.81, 307.08);
    path_171.cubicTo(170.73, 307.35, 170.59, 307.62, 170.12, 307.73);
    path_171.close();

    Paint paint171Fill = Paint()..style = PaintingStyle.fill;
    paint171Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_171, paint171Fill);

    Path path_172 = Path();
    path_172.moveTo(171.68, 299.37);
    path_172.cubicTo(171.97, 299.37, 172.09, 299.52, 172.11, 299.73);
    path_172.cubicTo(172.13, 299.93, 172.11, 300.15, 171.8, 300.19);
    path_172.cubicTo(171.52, 300.22, 171.39, 300.05, 171.36, 299.84);
    path_172.cubicTo(171.34, 299.64, 171.39, 299.45, 171.68, 299.37);
    path_172.close();

    Paint paint172Fill = Paint()..style = PaintingStyle.fill;
    paint172Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_172, paint172Fill);

    Path path_173 = Path();
    path_173.moveTo(260.58, 270.01);
    path_173.cubicTo(260.21, 270.28, 260.02, 270.13, 259.86, 269.95);
    path_173.cubicTo(259.74, 269.81, 259.54, 269.6, 259.86, 269.41);
    path_173.cubicTo(260.01, 269.32, 260.28, 269.41, 260.46, 269.49);
    path_173.cubicTo(260.66, 269.58, 260.72, 269.77, 260.58, 270.01);
    path_173.close();

    Paint paint173Fill = Paint()..style = PaintingStyle.fill;
    paint173Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_173, paint173Fill);

    Path path_174 = Path();
    path_174.moveTo(5.96002, 119.89);
    path_174.cubicTo(6.06002, 119.57, 6.22002, 119.28, 6.40002, 119.45);
    path_174.cubicTo(6.54002, 119.59, 6.60002, 119.93, 6.65002, 120.2);
    path_174.cubicTo(6.69002, 120.44, 6.53002, 120.57, 6.36002, 120.55);
    path_174.cubicTo(6.02002, 120.51, 5.96002, 120.2, 5.96002, 119.88);
    path_174.lineTo(5.96002, 119.89);
    path_174.close();

    Paint paint174Fill = Paint()..style = PaintingStyle.fill;
    paint174Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_174, paint174Fill);

    Path path_175 = Path();
    path_175.moveTo(117.4, 286.19);
    path_175.cubicTo(117.54, 285.96, 117.76, 285.84, 118.05, 285.94);
    path_175.cubicTo(118.3, 286.03, 118.33, 286.24, 118.22, 286.44);
    path_175.cubicTo(118.11, 286.63, 117.91, 286.71, 117.66, 286.65);
    path_175.cubicTo(117.38, 286.59, 117.32, 286.41, 117.4, 286.18);
    path_175.lineTo(117.4, 286.19);
    path_175.close();

    Paint paint175Fill = Paint()..style = PaintingStyle.fill;
    paint175Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_175, paint175Fill);

    Path path_176 = Path();
    path_176.moveTo(271.37, 233.4);
    path_176.cubicTo(271.62, 233.22, 271.86, 233.2, 272.05, 233.4);
    path_176.cubicTo(272.18, 233.53, 272.15, 233.73, 272, 233.86);
    path_176.cubicTo(271.76, 234.08, 271.52, 234.04, 271.33, 233.86);
    path_176.cubicTo(271.2, 233.74, 271.23, 233.56, 271.38, 233.39);
    path_176.lineTo(271.37, 233.4);
    path_176.close();

    Paint paint176Fill = Paint()..style = PaintingStyle.fill;
    paint176Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_176, paint176Fill);

    Path path_177 = Path();
    path_177.moveTo(15.78, 136.82);
    path_177.cubicTo(15.74, 137.12, 15.63, 137.23, 15.46, 137.2);
    path_177.cubicTo(15.13, 137.14, 15.17, 136.84, 15.24, 136.56);
    path_177.cubicTo(15.29, 136.38, 15.27, 135.97, 15.55, 136.16);
    path_177.cubicTo(15.7, 136.26, 15.71, 136.63, 15.78, 136.82);
    path_177.close();

    Paint paint177Fill = Paint()..style = PaintingStyle.fill;
    paint177Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_177, paint177Fill);

    Path path_178 = Path();
    path_178.moveTo(299.19, 193.48);
    path_178.cubicTo(299.58, 194.01, 299.24, 194.33, 299, 194.65);
    path_178.cubicTo(298.98, 194.68, 298.82, 194.64, 298.81, 194.59);
    path_178.cubicTo(298.68, 194.1, 298.88, 193.78, 299.2, 193.48);
    path_178.lineTo(299.19, 193.48);
    path_178.close();

    Paint paint178Fill = Paint()..style = PaintingStyle.fill;
    paint178Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_178, paint178Fill);

    Path path_179 = Path();
    path_179.moveTo(235.02, 283.39);
    path_179.cubicTo(235.29, 283.27, 235.47, 283.29, 235.52, 283.46);
    path_179.cubicTo(235.6, 283.73, 235.39, 283.94, 235.11, 284.09);
    path_179.cubicTo(234.92, 284.19, 234.71, 284.21, 234.67, 284.02);
    path_179.cubicTo(234.61, 283.75, 234.85, 283.55, 235.01, 283.39);
    path_179.lineTo(235.02, 283.39);
    path_179.close();

    Paint paint179Fill = Paint()..style = PaintingStyle.fill;
    paint179Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_179, paint179Fill);

    Path path_180 = Path();
    path_180.moveTo(42.39, 91.26);
    path_180.cubicTo(42.5, 91.11, 42.64, 91.02, 42.8, 91.12);
    path_180.cubicTo(42.95, 91.21, 42.96, 91.39, 42.88, 91.55);
    path_180.cubicTo(42.77, 91.78, 42.59, 91.86, 42.4, 91.71);
    path_180.cubicTo(42.26, 91.6, 42.29, 91.42, 42.4, 91.26);
    path_180.lineTo(42.39, 91.26);
    path_180.close();

    Paint paint180Fill = Paint()..style = PaintingStyle.fill;
    paint180Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_180, paint180Fill);

    Path path_181 = Path();
    path_181.moveTo(61.99, 60.88);
    path_181.cubicTo(62.07, 61.05, 62.02, 61.2, 61.88, 61.34);
    path_181.cubicTo(61.69, 61.53, 61.49, 61.57, 61.34, 61.35);
    path_181.cubicTo(61.25, 61.21, 61.24, 61.03, 61.41, 60.9);
    path_181.cubicTo(61.6, 60.75, 61.81, 60.72, 61.99, 60.88);
    path_181.close();

    Paint paint181Fill = Paint()..style = PaintingStyle.fill;
    paint181Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_181, paint181Fill);

    Path path_182 = Path();
    path_182.moveTo(229.95, 46);
    path_182.cubicTo(230.08, 46.16, 230.3, 46.34, 230.16, 46.53);
    path_182.cubicTo(230.05, 46.69, 229.84, 46.58, 229.73, 46.44);
    path_182.cubicTo(229.63, 46.32, 229.52, 46.13, 229.55, 46.01);
    path_182.cubicTo(229.6, 45.8, 229.79, 45.88, 229.95, 46);
    path_182.close();

    Paint paint182Fill = Paint()..style = PaintingStyle.fill;
    paint182Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_182, paint182Fill);

    Path path_183 = Path();
    path_183.moveTo(78.08, 50.81);
    path_183.cubicTo(77.88, 50.89, 77.64, 51.01, 77.58, 50.73);
    path_183.cubicTo(77.53, 50.52, 77.73, 50.35, 77.93, 50.24);
    path_183.cubicTo(78.1, 50.15, 78.28, 50.15, 78.36, 50.32);
    path_183.cubicTo(78.46, 50.55, 78.28, 50.69, 78.08, 50.81);
    path_183.close();

    Paint paint183Fill = Paint()..style = PaintingStyle.fill;
    paint183Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_183, paint183Fill);

    Path path_184 = Path();
    path_184.moveTo(141.27, 308.1);
    path_184.cubicTo(141.55, 308.12, 141.67, 308.27, 141.55, 308.41);
    path_184.cubicTo(141.38, 308.61, 141.37, 308.96, 140.92, 308.97);
    path_184.cubicTo(140.68, 308.97, 140.58, 308.81, 140.64, 308.65);
    path_184.cubicTo(140.73, 308.39, 140.87, 308.15, 141.26, 308.1);
    path_184.lineTo(141.27, 308.1);
    path_184.close();

    Paint paint184Fill = Paint()..style = PaintingStyle.fill;
    paint184Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_184, paint184Fill);

    Path path_185 = Path();
    path_185.moveTo(224.27, 19.64);
    path_185.cubicTo(224.16, 19.79, 223.99, 19.82, 223.79, 19.69);
    path_185.cubicTo(223.55, 19.52, 223.49, 19.3, 223.63, 19.13);
    path_185.cubicTo(223.68, 19.06, 223.9, 19.04, 223.99, 19.09);
    path_185.cubicTo(224.25, 19.22, 224.34, 19.43, 224.27, 19.64);
    path_185.close();

    Paint paint185Fill = Paint()..style = PaintingStyle.fill;
    paint185Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_185, paint185Fill);

    Path path_186 = Path();
    path_186.moveTo(257.44, 244.19);
    path_186.cubicTo(257.24, 244.29, 257.03, 244.33, 256.89, 244.16);
    path_186.cubicTo(256.78, 244.01, 256.84, 243.82, 257.03, 243.77);
    path_186.cubicTo(257.17, 243.73, 257.36, 243.75, 257.48, 243.82);
    path_186.cubicTo(257.66, 243.91, 257.6, 244.07, 257.43, 244.2);
    path_186.lineTo(257.44, 244.19);
    path_186.close();

    Paint paint186Fill = Paint()..style = PaintingStyle.fill;
    paint186Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_186, paint186Fill);

    Path path_187 = Path();
    path_187.moveTo(2.55001, 179.53);
    path_187.cubicTo(2.59001, 179.85, 2.58001, 180.06, 2.39001, 180.1);
    path_187.cubicTo(2.22001, 180.13, 2.09001, 180, 2.06001, 179.78);
    path_187.cubicTo(2.02001, 179.53, 2.04001, 179.23, 2.28001, 179.22);
    path_187.cubicTo(2.38001, 179.22, 2.49001, 179.46, 2.55001, 179.53);
    path_187.close();

    Paint paint187Fill = Paint()..style = PaintingStyle.fill;
    paint187Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_187, paint187Fill);

    Path path_188 = Path();
    path_188.moveTo(192.02, 22.43);
    path_188.cubicTo(192.32, 22.18, 192.61, 21.88, 193.12, 22.22);
    path_188.cubicTo(192.88, 22.71, 192.39, 22.45, 192.02, 22.43);
    path_188.close();

    Paint paint188Fill = Paint()..style = PaintingStyle.fill;
    paint188Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_188, paint188Fill);

    Path path_189 = Path();
    path_189.moveTo(6.57004, 172.45);
    path_189.cubicTo(6.54004, 172.69, 6.57004, 173.02, 6.32004, 173);
    path_189.cubicTo(6.13004, 172.98, 5.81004, 172.92, 5.84004, 172.54);
    path_189.cubicTo(5.86004, 172.35, 6.05004, 172.13, 6.21004, 172.05);
    path_189.cubicTo(6.46004, 171.92, 6.53004, 172.21, 6.57004, 172.45);
    path_189.close();

    Paint paint189Fill = Paint()..style = PaintingStyle.fill;
    paint189Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_189, paint189Fill);

    Path path_190 = Path();
    path_190.moveTo(221.82, 295.16);
    path_190.cubicTo(221.61, 295.26, 221.43, 295.29, 221.33, 295.12);
    path_190.cubicTo(221.23, 294.94, 221.16, 294.74, 221.39, 294.54);
    path_190.cubicTo(221.64, 294.33, 221.86, 294.39, 221.98, 294.59);
    path_190.cubicTo(222.08, 294.77, 222.08, 294.98, 221.82, 295.16);
    path_190.close();

    Paint paint190Fill = Paint()..style = PaintingStyle.fill;
    paint190Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_190, paint190Fill);

    Path path_191 = Path();
    path_191.moveTo(47.22, 69.66);
    path_191.cubicTo(47.36, 69.48, 47.51, 69.44, 47.65, 69.56);
    path_191.cubicTo(47.78, 69.68, 47.82, 69.86, 47.65, 70.02);
    path_191.cubicTo(47.57, 70.1, 47.39, 70.13, 47.3, 70.1);
    path_191.cubicTo(47.14, 70.03, 47.11, 69.85, 47.21, 69.66);
    path_191.lineTo(47.22, 69.66);
    path_191.close();

    Paint paint191Fill = Paint()..style = PaintingStyle.fill;
    paint191Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_191, paint191Fill);

    Path path_192 = Path();
    path_192.moveTo(267.11, 256.65);
    path_192.cubicTo(267.35, 256.38, 267.54, 256.18, 267.72, 256.39);
    path_192.cubicTo(267.84, 256.53, 267.73, 256.73, 267.59, 256.88);
    path_192.cubicTo(267.42, 257.06, 267.19, 257.24, 267.03, 257.06);
    path_192.cubicTo(266.97, 256.99, 267.09, 256.74, 267.11, 256.65);
    path_192.close();

    Paint paint192Fill = Paint()..style = PaintingStyle.fill;
    paint192Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_192, paint192Fill);

    Path path_193 = Path();
    path_193.moveTo(8.65004, 113.59);
    path_193.cubicTo(8.84004, 113.68, 8.81004, 113.86, 8.70004, 114.05);
    path_193.cubicTo(8.58004, 114.26, 8.44004, 114.51, 8.22004, 114.39);
    path_193.cubicTo(8.17004, 114.36, 8.15004, 114.12, 8.19004, 114.02);
    path_193.cubicTo(8.28004, 113.79, 8.40004, 113.56, 8.65004, 113.6);
    path_193.lineTo(8.65004, 113.59);
    path_193.close();

    Paint paint193Fill = Paint()..style = PaintingStyle.fill;
    paint193Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_193, paint193Fill);

    Path path_194 = Path();
    path_194.moveTo(9.30004, 183.57);
    path_194.cubicTo(9.58004, 183.57, 9.62004, 183.78, 9.63004, 183.97);
    path_194.cubicTo(9.65004, 184.17, 9.61004, 184.38, 9.43004, 184.39);
    path_194.cubicTo(9.25004, 184.4, 9.14004, 184.2, 9.15004, 184);
    path_194.cubicTo(9.15004, 183.83, 9.26004, 183.69, 9.30004, 183.57);
    path_194.close();

    Paint paint194Fill = Paint()..style = PaintingStyle.fill;
    paint194Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_194, paint194Fill);

    Path path_195 = Path();
    path_195.moveTo(150.74, 1.27);
    path_195.cubicTo(150.62, 1.48, 150.43, 1.55, 150.22, 1.47);
    path_195.cubicTo(150.12, 1.43, 150.02, 1.28, 150.05, 1.2);
    path_195.cubicTo(150.1, 1.02, 150.32, 0.950001, 150.53, 1.04);
    path_195.cubicTo(150.64, 1.08, 150.68, 1.21, 150.74, 1.28);
    path_195.lineTo(150.74, 1.27);
    path_195.close();

    Paint paint195Fill = Paint()..style = PaintingStyle.fill;
    paint195Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_195, paint195Fill);

    Path path_196 = Path();
    path_196.moveTo(6.06001, 188.57);
    path_196.cubicTo(6.00001, 188.64, 5.94001, 188.8, 5.86001, 188.8);
    path_196.cubicTo(5.67001, 188.8, 5.58001, 188.59, 5.59001, 188.38);
    path_196.cubicTo(5.59001, 188.27, 3.74001, 188.47, 3.80001, 188.48);
    path_196.cubicTo(3.98001, 188.49, 6.01001, 188.3, 6.06001, 188.57);
    path_196.close();

    Paint paint196Fill = Paint()..style = PaintingStyle.fill;
    paint196Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_196, paint196Fill);

    Path path_197 = Path();
    path_197.moveTo(259.77, 233.98);
    path_197.cubicTo(259.61, 233.77, 259.62, 233.57, 259.74, 233.38);
    path_197.cubicTo(259.78, 233.32, 259.98, 233.28, 260.03, 233.32);
    path_197.cubicTo(260.21, 233.46, 260.2, 233.67, 260.05, 233.86);
    path_197.cubicTo(259.99, 233.93, 259.86, 233.94, 259.77, 233.98);
    path_197.close();

    Paint paint197Fill = Paint()..style = PaintingStyle.fill;
    paint197Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_197, paint197Fill);

    Path path_198 = Path();
    path_198.moveTo(67.36, 282.39);
    path_198.cubicTo(67.77, 282.6, 68.02, 282.86, 67.93, 283.24);
    path_198.cubicTo(67.92, 283.3, 67.68, 283.35, 67.63, 283.3);
    path_198.cubicTo(67.27, 283.03, 67.13, 282.73, 67.36, 282.39);
    path_198.close();

    Paint paint198Fill = Paint()..style = PaintingStyle.fill;
    paint198Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_198, paint198Fill);

    Path path_199 = Path();
    path_199.moveTo(51.34, 77.39);
    path_199.cubicTo(51.3, 77.56, 51.26, 77.72, 51.2, 77.89);
    path_199.cubicTo(51.13, 78.09, 51.03, 78.31, 50.78, 78.3);
    path_199.cubicTo(50.69, 78.3, 50.56, 78.18, 50.54, 78.09);
    path_199.cubicTo(50.5, 77.85, 50.67, 77.7, 50.87, 77.6);
    path_199.cubicTo(51.02, 77.52, 51.19, 77.48, 51.34, 77.42);
    path_199.lineTo(51.34, 77.4);
    path_199.lineTo(51.34, 77.39);
    path_199.close();

    Paint paint199Fill = Paint()..style = PaintingStyle.fill;
    paint199Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_199, paint199Fill);

    Path path_200 = Path();
    path_200.moveTo(29.48, 119.28);
    path_200.cubicTo(29.48, 119.36, 29.49, 119.48, 29.48, 119.61);
    path_200.cubicTo(29.46, 119.79, 29.41, 119.98, 29.22, 119.99);
    path_200.cubicTo(29.17, 119.99, 29.07, 119.82, 29.06, 119.71);
    path_200.cubicTo(29.06, 119.53, 29.13, 119.37, 29.48, 119.28);
    path_200.close();

    Paint paint200Fill = Paint()..style = PaintingStyle.fill;
    paint200Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_200, paint200Fill);

    Path path_201 = Path();
    path_201.moveTo(289.5, 126.62);
    path_201.cubicTo(289.32, 126.58, 289.19, 126.46, 289.21, 126.25);
    path_201.cubicTo(289.23, 126.04, 289.38, 125.94, 289.55, 126.01);
    path_201.cubicTo(289.64, 126.05, 289.77, 126.19, 289.78, 126.29);
    path_201.cubicTo(289.82, 126.51, 289.68, 126.61, 289.5, 126.62);
    path_201.close();

    Paint paint201Fill = Paint()..style = PaintingStyle.fill;
    paint201Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_201, paint201Fill);

    Path path_202 = Path();
    path_202.moveTo(10.79, 175.87);
    path_202.cubicTo(10.87, 175.48, 11.04, 175.28, 11.39, 175.44);
    path_202.cubicTo(11.44, 175.46, 11.51, 175.62, 11.49, 175.67);
    path_202.cubicTo(11.33, 176.07, 11.05, 175.97, 10.77, 175.85);
    path_202.lineTo(10.79, 175.87);
    path_202.close();

    Paint paint202Fill = Paint()..style = PaintingStyle.fill;
    paint202Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_202, paint202Fill);

    Path path_203 = Path();
    path_203.moveTo(0.220021, 135.9);
    path_203.cubicTo(0.480021, 135.99, 0.590021, 136.2, 0.550021, 136.49);
    path_203.cubicTo(0.540021, 136.59, 0.370021, 136.76, 0.310021, 136.74);
    path_203.cubicTo(0.110021, 136.68, -0.0299787, 136.48, 2.12663, -5);
    path_203.cubicTo(
        136.18, double.nan, double.nan, double.nan, double.nan, double.nan);
    path_203.cubicTo(2.12663, -5, 136.08, 0.150021, 135.98, 0.210021);
    path_203.cubicTo(
        135.9, double.nan, double.nan, double.nan, double.nan, double.nan);
    path_203.lineTo(0.220021, double.nan);
    path_203.close();

    Paint paint203Fill = Paint()..style = PaintingStyle.fill;
    paint203Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_203, paint203Fill);

    Path path_204 = Path();
    path_204.moveTo(240.86, 287.6);
    path_204.cubicTo(240.49, 288.09, 240.11, 288.25, 239.67, 287.94);
    path_204.cubicTo(240.04, 287.46, 240.41, 287.33, 240.86, 287.6);
    path_204.close();

    Paint paint204Fill = Paint()..style = PaintingStyle.fill;
    paint204Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_204, paint204Fill);

    Path path_205 = Path();
    path_205.moveTo(198.29, 10.11);
    path_205.cubicTo(198.11, 10.05, 198.04, 9.93, 198.13, 9.83);
    path_205.cubicTo(198.2, 9.75, 198.35, 9.68, 198.48, 9.67);
    path_205.cubicTo(198.65, 9.65, 198.77, 9.76, 198.73, 9.9);
    path_205.cubicTo(198.68, 10.07, 198.52, 10.14, 198.29, 10.11);
    path_205.close();

    Paint paint205Fill = Paint()..style = PaintingStyle.fill;
    paint205Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_205, paint205Fill);

    Path path_206 = Path();
    path_206.moveTo(246.74, 34.05);
    path_206.cubicTo(246.96, 34.08, 247.1, 34.08, 247.21, 34.13);
    path_206.cubicTo(247.39, 34.22, 247.58, 34.37, 247.4, 34.52);
    path_206.cubicTo(247.35, 34.56, 247.13, 34.49, 247.02, 34.42);
    path_206.cubicTo(246.92, 34.36, 246.86, 34.22, 246.73, 34.05);
    path_206.lineTo(246.74, 34.05);
    path_206.close();

    Paint paint206Fill = Paint()..style = PaintingStyle.fill;
    paint206Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_206, paint206Fill);

    Path path_207 = Path();
    path_207.moveTo(299.34, 153.49);
    path_207.cubicTo(299.22, 153.37, 299.11, 153.3, 299.07, 153.2);
    path_207.cubicTo(299.01, 153.01, 299.05, 152.79, 299.26, 152.82);
    path_207.cubicTo(299.34, 152.82, 299.45, 152.99, 299.47, 153.11);
    path_207.cubicTo(299.49, 153.21, 299.39, 153.33, 299.33, 153.5);
    path_207.lineTo(299.34, 153.49);
    path_207.close();

    Paint paint207Fill = Paint()..style = PaintingStyle.fill;
    paint207Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_207, paint207Fill);

    Path path_208 = Path();
    path_208.moveTo(182.89, 292.44);
    path_208.cubicTo(182.86, 292.3, 182.94, 292.21, 183.09, 292.19);
    path_208.cubicTo(183.27, 292.16, 183.47, 292.16, 183.52, 292.34);
    path_208.cubicTo(183.54, 292.4, 183.41, 292.55, 183.31, 292.59);
    path_208.cubicTo(183.13, 292.66, 182.97, 292.6, 182.88, 292.44);
    path_208.lineTo(182.89, 292.44);
    path_208.close();

    Paint paint208Fill = Paint()..style = PaintingStyle.fill;
    paint208Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_208, paint208Fill);

    Path path_209 = Path();
    path_209.moveTo(128.8, 307.94);
    path_209.cubicTo(128.9, 307.92, 129.03, 307.85, 129.15, 307.87);
    path_209.cubicTo(129.36, 307.91, 129.52, 308.05, 129.43, 308.22);
    path_209.cubicTo(129.39, 308.29, 129.2, 308.35, 129.08, 308.33);
    path_209.cubicTo(128.87, 308.3, 128.74, 308.17, 128.79, 307.94);
    path_209.lineTo(128.8, 307.94);
    path_209.close();

    Paint paint209Fill = Paint()..style = PaintingStyle.fill;
    paint209Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_209, paint209Fill);

    Path path_210 = Path();
    path_210.moveTo(190.28, 26.17);
    path_210.cubicTo(190.09, 26.09, 189.99, 25.96, 190.07, 25.79);
    path_210.cubicTo(190.15, 25.63, 190.33, 25.6, 190.51, 25.66);
    path_210.cubicTo(190.77, 25.74, 190.88, 25.91, 190.75, 26.12);
    path_210.cubicTo(190.65, 26.28, 190.45, 26.22, 190.27, 26.17);
    path_210.lineTo(190.28, 26.17);
    path_210.close();

    Paint paint210Fill = Paint()..style = PaintingStyle.fill;
    paint210Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_210, paint210Fill);

    Path path_211 = Path();
    path_211.moveTo(93.39, 37.56);
    path_211.cubicTo(93.22, 37.54, 93.05, 37.56, 92.99, 37.5);
    path_211.cubicTo(92.84, 37.34, 92.98, 37.19, 93.16, 37.13);
    path_211.cubicTo(93.26, 37.1, 93.44, 37.14, 93.48, 37.21);
    path_211.cubicTo(93.52, 37.27, 93.43, 37.42, 93.39, 37.56);
    path_211.close();

    Paint paint211Fill = Paint()..style = PaintingStyle.fill;
    paint211Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_211, paint211Fill);

    Path path_212 = Path();
    path_212.moveTo(17.11, 108.32);
    path_212.cubicTo(17.03, 108.52, 16.92, 108.66, 16.74, 108.64);
    path_212.cubicTo(16.57, 108.63, 16.42, 108.52, 16.52, 108.29);
    path_212.cubicTo(16.58, 108.15, 16.76, 108.01, 16.89, 107.98);
    path_212.cubicTo(17.06, 107.94, 17.17, 108.07, 17.11, 108.32);
    path_212.close();

    Paint paint212Fill = Paint()..style = PaintingStyle.fill;
    paint212Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_212, paint212Fill);

    Path path_213 = Path();
    path_213.moveTo(4.4, 163.75);
    path_213.cubicTo(4.63, 164.03, 4.87, 164.32, 4.61, 164.76);
    path_213.cubicTo(4.58, 164.81, 4.45, 164.84, 4.42, 164.8);
    path_213.cubicTo(4.09, 164.45, 4.29, 164.09, 4.42, 163.73);
    path_213.lineTo(4.4, 163.73);
    path_213.lineTo(4.4, 163.75);
    path_213.close();

    Paint paint213Fill = Paint()..style = PaintingStyle.fill;
    paint213Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_213, paint213Fill);

    Path path_214 = Path();
    path_214.moveTo(11.19, 109.16);
    path_214.cubicTo(11.3, 108.89, 11.42, 108.71, 11.6, 108.81);
    path_214.cubicTo(11.67, 108.85, 11.73, 109.05, 11.7, 109.17);
    path_214.cubicTo(11.65, 109.39, 11.47, 109.52, 11.31, 109.46);
    path_214.cubicTo(11.24, 109.43, 11.22, 109.25, 11.19, 109.17);
    path_214.lineTo(11.19, 109.16);
    path_214.close();

    Paint paint214Fill = Paint()..style = PaintingStyle.fill;
    paint214Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_214, paint214Fill);

    Path path_215 = Path();
    path_215.moveTo(305.6, 164.03);
    path_215.cubicTo(305.4, 164.11, 305.27, 164.2, 305.19, 164.17);
    path_215.cubicTo(305.12, 164.14, 305.06, 163.95, 305.04, 163.83);
    path_215.cubicTo(305.04, 163.77, 305.15, 163.61, 305.17, 163.62);
    path_215.cubicTo(305.26, 163.68, 305.34, 163.77, 305.6, 164.04);
    path_215.lineTo(305.6, 164.03);
    path_215.close();

    Paint paint215Fill = Paint()..style = PaintingStyle.fill;
    paint215Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_215, paint215Fill);

    Path path_216 = Path();
    path_216.moveTo(54.49, 43.33);
    path_216.cubicTo(54.63, 43.74, 54.49, 44.03, 54.03, 44.31);
    path_216.cubicTo(53.76, 43.88, 54.14, 43.64, 54.49, 43.33);
    path_216.close();

    Paint paint216Fill = Paint()..style = PaintingStyle.fill;
    paint216Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_216, paint216Fill);

    Path path_217 = Path();
    path_217.moveTo(25.11, 177.55);
    path_217.cubicTo(25.23, 177.67, 25.36, 177.74, 25.38, 177.84);
    path_217.cubicTo(25.43, 178.05, 25.32, 178.19, 25.13, 178.13);
    path_217.cubicTo(25.04, 178.1, 24.94, 177.96, 24.92, 177.85);
    path_217.cubicTo(24.91, 177.77, 25.03, 177.67, 25.11, 177.55);
    path_217.close();

    Paint paint217Fill = Paint()..style = PaintingStyle.fill;
    paint217Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_217, paint217Fill);

    Path path_218 = Path();
    path_218.moveTo(29.75, 66.64);
    path_218.cubicTo(29.9, 66.59, 30.06, 66.49, 30.13, 66.53);
    path_218.cubicTo(30.3, 66.63, 30.25, 66.85, 30.07, 67);
    path_218.cubicTo(29.98, 67.07, 29.79, 67.11, 29.73, 67.05);
    path_218.cubicTo(29.67, 67, 29.73, 66.81, 29.74, 66.64);
    path_218.lineTo(29.75, 66.64);
    path_218.close();

    Paint paint218Fill = Paint()..style = PaintingStyle.fill;
    paint218Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_218, paint218Fill);

    Path path_219 = Path();
    path_219.moveTo(64.65, 33.02);
    path_219.cubicTo(64.49, 33, 64.33, 33.02, 64.27, 32.96);
    path_219.cubicTo(64.15, 32.84, 64.18, 32.65, 64.4, 32.54);
    path_219.cubicTo(64.49, 32.5, 64.68, 32.54, 64.72, 32.62);
    path_219.cubicTo(64.76, 32.7, 64.69, 32.85, 64.66, 33.02);
    path_219.lineTo(64.65, 33.02);
    path_219.close();

    Paint paint219Fill = Paint()..style = PaintingStyle.fill;
    paint219Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_219, paint219Fill);

    Path path_220 = Path();
    path_220.moveTo(137.62, 297.55);
    path_220.cubicTo(137.72, 297.33, 137.9, 297.27, 138.09, 297.35);
    path_220.cubicTo(138.19, 297.39, 138.31, 297.54, 138.3, 297.63);
    path_220.cubicTo(138.27, 297.83, 138.06, 297.87, 137.87, 297.79);
    path_220.cubicTo(137.76, 297.75, 137.69, 297.62, 137.62, 297.55);
    path_220.close();

    Paint paint220Fill = Paint()..style = PaintingStyle.fill;
    paint220Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_220, paint220Fill);

    Path path_221 = Path();
    path_221.moveTo(41.79, 70.63);
    path_221.cubicTo(41.97, 70.51, 42.08, 70.52, 42.12, 70.66);
    path_221.cubicTo(42.14, 70.73, 42.12, 70.84, 42.06, 70.91);
    path_221.cubicTo(41.97, 71.05, 41.82, 71.1, 41.76, 70.96);
    path_221.cubicTo(41.72, 70.88, 41.78, 70.73, 41.79, 70.64);
    path_221.lineTo(41.79, 70.63);
    path_221.close();

    Paint paint221Fill = Paint()..style = PaintingStyle.fill;
    paint221Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_221, paint221Fill);

    Path path_222 = Path();
    path_222.moveTo(134.51, 306.56);
    path_222.cubicTo(134.98, 306.39, 135.33, 306.52, 135.4, 306.73);
    path_222.cubicTo(135.54, 307.12, 135.17, 306.92, 134.98, 306.85);
    path_222.cubicTo(134.85, 306.8, 134.74, 306.71, 134.51, 306.56);
    path_222.close();

    Paint paint222Fill = Paint()..style = PaintingStyle.fill;
    paint222Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_222, paint222Fill);

    Path path_223 = Path();
    path_223.moveTo(157.65, 23.25);
    path_223.cubicTo(157.54, 23.37, 157.47, 23.5, 157.37, 23.53);
    path_223.cubicTo(157.15, 23.59, 157.02, 23.47, 157.07, 23.29);
    path_223.cubicTo(157.09, 23.2, 157.22, 23.09, 157.33, 23.07);
    path_223.cubicTo(157.41, 23.06, 157.52, 23.17, 157.66, 23.25);
    path_223.lineTo(157.65, 23.25);
    path_223.close();

    Paint paint223Fill = Paint()..style = PaintingStyle.fill;
    paint223Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_223, paint223Fill);

    Path path_224 = Path();
    path_224.moveTo(289.21, 193.91);
    path_224.cubicTo(289.38, 194.06, 289.41, 194.27, 289.33, 194.49);
    path_224.cubicTo(289.24, 194.72, 289.07, 194.88, 288.86, 194.77);
    path_224.cubicTo(288.68, 194.68, 288.77, 194.5, 288.84, 194.32);
    path_224.cubicTo(288.92, 194.12, 288.92, 193.86, 289.21, 193.91);
    path_224.close();

    Paint paint224Fill = Paint()..style = PaintingStyle.fill;
    paint224Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_224, paint224Fill);

    Path path_225 = Path();
    path_225.moveTo(94.11, 25.38);
    path_225.cubicTo(93.96, 25.28, 93.87, 25.23, 93.78, 25.17);
    path_225.cubicTo(93.86, 25.08, 93.94, 24.98, 94.04, 24.92);
    path_225.cubicTo(94.07, 24.9, 94.24, 24.97, 94.24, 25.01);
    path_225.cubicTo(94.24, 25.11, 94.17, 25.21, 94.11, 25.39);
    path_225.lineTo(94.11, 25.38);
    path_225.close();

    Paint paint225Fill = Paint()..style = PaintingStyle.fill;
    paint225Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_225, paint225Fill);

    Path path_226 = Path();
    path_226.moveTo(295.05, 158.47);
    path_226.cubicTo(294.99, 158.52, 294.9, 158.66, 294.82, 158.66);
    path_226.cubicTo(294.65, 158.65, 294.53, 158.48, 294.57, 158.28);
    path_226.cubicTo(294.59, 158.18, 294.73, 158.04, 294.81, 158.03);
    path_226.cubicTo(295.01, 158.01, 295.05, 158.2, 295.05, 158.47);
    path_226.close();

    Paint paint226Fill = Paint()..style = PaintingStyle.fill;
    paint226Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_226, paint226Fill);

    Path path_227 = Path();
    path_227.moveTo(189.71, 291.27);
    path_227.cubicTo(189.36, 291.47, 188.99, 291.63, 188.63, 291.82);
    path_227.cubicTo(188.74, 291.23, 189.04, 290.97, 189.71, 291.27);
    path_227.close();

    Paint paint227Fill = Paint()..style = PaintingStyle.fill;
    paint227Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_227, paint227Fill);

    Path path_228 = Path();
    path_228.moveTo(188.25, 284.08);
    path_228.cubicTo(188.29, 284.02, 188.32, 283.89, 188.4, 283.85);
    path_228.cubicTo(188.45, 283.82, 188.58, 283.9, 188.66, 283.95);
    path_228.cubicTo(188.68, 283.96, 188.62, 284.09, 188.57, 284.14);
    path_228.cubicTo(188.47, 284.22, 188.35, 284.24, 188.25, 284.08);
    path_228.close();

    Paint paint228Fill = Paint()..style = PaintingStyle.fill;
    paint228Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_228, paint228Fill);

    Path path_229 = Path();
    path_229.moveTo(29.77, 117.69);
    path_229.cubicTo(29.77, 117.99, 29.81, 118.12, 29.77, 118.21);
    path_229.cubicTo(29.74, 118.28, 29.61, 118.33, 29.52, 118.35);
    path_229.cubicTo(29.5, 118.35, 29.42, 118.22, 29.43, 118.16);
    path_229.cubicTo(29.46, 118.07, 29.54, 117.99, 29.77, 117.68);
    path_229.lineTo(29.77, 117.69);
    path_229.close();

    Paint paint229Fill = Paint()..style = PaintingStyle.fill;
    paint229Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_229, paint229Fill);

    Path path_230 = Path();
    path_230.moveTo(199.67, 280.92);
    path_230.cubicTo(199.77, 280.88, 199.88, 280.79, 199.97, 280.8);
    path_230.cubicTo(200.04, 280.8, 200.08, 280.93, 200.14, 281.01);
    path_230.cubicTo(200.07, 281.05, 200.01, 281.11, 199.94, 281.12);
    path_230.cubicTo(199.82, 281.14, 199.7, 281.12, 199.59, 281.12);
    path_230.lineTo(199.68, 280.92);
    path_230.lineTo(199.67, 280.92);
    path_230.close();

    Paint paint230Fill = Paint()..style = PaintingStyle.fill;
    paint230Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_230, paint230Fill);

    Path path_231 = Path();
    path_231.moveTo(264.45, 66.71);
    path_231.cubicTo(264.57, 66.85, 264.55, 66.96, 264.45, 67.03);
    path_231.cubicTo(264.31, 67.13, 264.13, 67.11, 264.02, 66.92);
    path_231.cubicTo(263.97, 66.83, 263.98, 66.65, 264.04, 66.58);
    path_231.cubicTo(264.17, 66.43, 264.33, 66.58, 264.47, 66.7);
    path_231.lineTo(264.45, 66.71);
    path_231.close();

    Paint paint231Fill = Paint()..style = PaintingStyle.fill;
    paint231Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_231, paint231Fill);

    Path path_232 = Path();
    path_232.moveTo(250.4, 271.16);
    path_232.cubicTo(250.4, 271.16, 250.26, 271.11, 250.17, 271.04);
    path_232.cubicTo(250.04, 270.93, 250.01, 270.76, 250.18, 270.61);
    path_232.cubicTo(250.25, 270.54, 250.45, 270.52, 250.52, 270.57);
    path_232.cubicTo(250.66, 270.66, 250.66, 270.83, 250.39, 271.17);
    path_232.lineTo(250.4, 271.16);
    path_232.close();

    Paint paint232Fill = Paint()..style = PaintingStyle.fill;
    paint232Fill.color = const Color(0xffCEB367).withOpacity(1.0);
    canvas.drawPath(path_232, paint232Fill);
  }

  @override
  bool shouldRepaint(covariant CustomPainter oldDelegate) {
    return true;
  }
}
